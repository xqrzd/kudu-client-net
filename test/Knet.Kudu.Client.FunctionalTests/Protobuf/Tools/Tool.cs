// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/tools/tool.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf.Tools {

  /// <summary>Holder for reflection information generated from kudu/tools/tool.proto</summary>
  public static partial class ToolReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/tools/tool.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ToolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVrdWR1L3Rvb2xzL3Rvb2wucHJvdG8SCmt1ZHUudG9vbHMaGGt1ZHUvY29t",
            "bW9uL2NvbW1vbi5wcm90bxofa3VkdS9jb21tb24vd2lyZV9wcm90b2NvbC5w",
            "cm90bxoaa3VkdS90YWJsZXQvbWV0YWRhdGEucHJvdG8aGGt1ZHUvdGFibGV0",
            "L3RhYmxldC5wcm90byKMAwoWQ3JlYXRlQ2x1c3RlclJlcXVlc3RQQhITCgtu",
            "dW1fbWFzdGVycxgBIAEoBRIUCgxudW1fdHNlcnZlcnMYAiABKAUSFwoPZW5h",
            "YmxlX2tlcmJlcm9zGAMgASgIEhEKCXByaW5jaXBhbBgKIAEoCRIVCg1lbmFi",
            "bGVfcmFuZ2VyGAkgASgIEiEKCGhtc19tb2RlGAcgASgOMg8ua3VkdS5IbXNN",
            "b2RlUEISFAoMY2x1c3Rlcl9yb290GAQgASgJEhoKEmV4dHJhX21hc3Rlcl9m",
            "bGFncxgFIAMoCRIbChNleHRyYV90c2VydmVyX2ZsYWdzGAYgAygJEk0KEG1p",
            "bmlfa2RjX29wdGlvbnMYCCABKAsyMy5rdWR1LnRvb2xzLkNyZWF0ZUNsdXN0",
            "ZXJSZXF1ZXN0UEIuTWluaUtkY09wdGlvbnNQQhpDChBNaW5pS2RjT3B0aW9u",
            "c1BCEhcKD3RpY2tldF9saWZldGltZRgBIAEoCRIWCg5yZW5ld19saWZldGlt",
            "ZRgCIAEoCSIZChdEZXN0cm95Q2x1c3RlclJlcXVlc3RQQiIXChVTdGFydENs",
            "dXN0ZXJSZXF1ZXN0UEIiFgoUU3RvcENsdXN0ZXJSZXF1ZXN0UEIiSQoSRGFl",
            "bW9uSWRlbnRpZmllclBCEiQKBHR5cGUYASABKA4yFi5rdWR1LnRvb2xzLkRh",
            "ZW1vblR5cGUSDQoFaW5kZXgYAiABKA0iQgoUU3RhcnREYWVtb25SZXF1ZXN0",
            "UEISKgoCaWQYASABKAsyHi5rdWR1LnRvb2xzLkRhZW1vbklkZW50aWZpZXJQ",
            "QiJBChNTdG9wRGFlbW9uUmVxdWVzdFBCEioKAmlkGAEgASgLMh4ua3VkdS50",
            "b29scy5EYWVtb25JZGVudGlmaWVyUEIiQgoUUGF1c2VEYWVtb25SZXF1ZXN0",
            "UEISKgoCaWQYASABKAsyHi5rdWR1LnRvb2xzLkRhZW1vbklkZW50aWZpZXJQ",
            "QiJDChVSZXN1bWVEYWVtb25SZXF1ZXN0UEISKgoCaWQYASABKAsyHi5rdWR1",
            "LnRvb2xzLkRhZW1vbklkZW50aWZpZXJQQiJnCgxEYWVtb25JbmZvUEISKgoC",
            "aWQYASABKAsyHi5rdWR1LnRvb2xzLkRhZW1vbklkZW50aWZpZXJQQhIrChFi",
            "b3VuZF9ycGNfYWRkcmVzcxgCIAEoCzIQLmt1ZHUuSG9zdFBvcnRQQiJBChRH",
            "ZXRNYXN0ZXJzUmVzcG9uc2VQQhIpCgdtYXN0ZXJzGAEgAygLMhgua3VkdS50",
            "b29scy5EYWVtb25JbmZvUEIiFQoTR2V0TWFzdGVyc1JlcXVlc3RQQiJDChVH",
            "ZXRUU2VydmVyc1Jlc3BvbnNlUEISKgoIdHNlcnZlcnMYASADKAsyGC5rdWR1",
            "LnRvb2xzLkRhZW1vbkluZm9QQiIWChRHZXRUU2VydmVyc1JlcXVlc3RQQiKN",
            "AQoXR2V0S0RDRW52VmFyc1Jlc3BvbnNlUEISQgoIZW52X3ZhcnMYASADKAsy",
            "MC5rdWR1LnRvb2xzLkdldEtEQ0VudlZhcnNSZXNwb25zZVBCLkVudlZhcnNF",
            "bnRyeRouCgxFbnZWYXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASIYChZHZXRLRENFbnZWYXJzUmVxdWVzdFBCIhMKEUtkZXN0cm95",
            "UmVxdWVzdFBCIi4KDktpbml0UmVxdWVzdFBCEhwKCHVzZXJuYW1lGAEgASgJ",
            "Ogp0ZXN0LWFkbWluImEKFlNldERhZW1vbkZsYWdSZXF1ZXN0UEISKgoCaWQY",
            "ASABKAsyHi5rdWR1LnRvb2xzLkRhZW1vbklkZW50aWZpZXJQQhIMCgRmbGFn",
            "GAIgASgJEg0KBXZhbHVlGAMgASgJIvsBChZDb250cm9sU2hlbGxSZXNwb25z",
            "ZVBCEiAKBWVycm9yGAEgASgLMhEua3VkdS5BcHBTdGF0dXNQQhI3CgtnZXRf",
            "bWFzdGVycxgCIAEoCzIgLmt1ZHUudG9vbHMuR2V0TWFzdGVyc1Jlc3BvbnNl",
            "UEJIABI5CgxnZXRfdHNlcnZlcnMYAyABKAsyIS5rdWR1LnRvb2xzLkdldFRT",
            "ZXJ2ZXJzUmVzcG9uc2VQQkgAEj8KEGdldF9rZGNfZW52X3ZhcnMYBCABKAsy",
            "Iy5rdWR1LnRvb2xzLkdldEtEQ0VudlZhcnNSZXNwb25zZVBCSABCCgoIcmVz",
            "cG9uc2UizwYKFUNvbnRyb2xTaGVsbFJlcXVlc3RQQhI8Cg5jcmVhdGVfY2x1",
            "c3RlchgBIAEoCzIiLmt1ZHUudG9vbHMuQ3JlYXRlQ2x1c3RlclJlcXVlc3RQ",
            "QkgAEj4KD2Rlc3Ryb3lfY2x1c3RlchgCIAEoCzIjLmt1ZHUudG9vbHMuRGVz",
            "dHJveUNsdXN0ZXJSZXF1ZXN0UEJIABI6Cg1zdGFydF9jbHVzdGVyGAMgASgL",
            "MiEua3VkdS50b29scy5TdGFydENsdXN0ZXJSZXF1ZXN0UEJIABI4CgxzdG9w",
            "X2NsdXN0ZXIYBCABKAsyIC5rdWR1LnRvb2xzLlN0b3BDbHVzdGVyUmVxdWVz",
            "dFBCSAASOAoMc3RhcnRfZGFlbW9uGAUgASgLMiAua3VkdS50b29scy5TdGFy",
            "dERhZW1vblJlcXVlc3RQQkgAEjYKC3N0b3BfZGFlbW9uGAYgASgLMh8ua3Vk",
            "dS50b29scy5TdG9wRGFlbW9uUmVxdWVzdFBCSAASNgoLZ2V0X21hc3RlcnMY",
            "ByABKAsyHy5rdWR1LnRvb2xzLkdldE1hc3RlcnNSZXF1ZXN0UEJIABI4Cgxn",
            "ZXRfdHNlcnZlcnMYCCABKAsyIC5rdWR1LnRvb2xzLkdldFRTZXJ2ZXJzUmVx",
            "dWVzdFBCSAASPgoQZ2V0X2tkY19lbnZfdmFycxgJIAEoCzIiLmt1ZHUudG9v",
            "bHMuR2V0S0RDRW52VmFyc1JlcXVlc3RQQkgAEjEKCGtkZXN0cm95GAogASgL",
            "Mh0ua3VkdS50b29scy5LZGVzdHJveVJlcXVlc3RQQkgAEisKBWtpbml0GAsg",
            "ASgLMhoua3VkdS50b29scy5LaW5pdFJlcXVlc3RQQkgAEj0KD3NldF9kYWVt",
            "b25fZmxhZxgMIAEoCzIiLmt1ZHUudG9vbHMuU2V0RGFlbW9uRmxhZ1JlcXVl",
            "c3RQQkgAEjgKDHBhdXNlX2RhZW1vbhgNIAEoCzIgLmt1ZHUudG9vbHMuUGF1",
            "c2VEYWVtb25SZXF1ZXN0UEJIABI6Cg1yZXN1bWVfZGFlbW9uGA4gASgLMiEu",
            "a3VkdS50b29scy5SZXN1bWVEYWVtb25SZXF1ZXN0UEJIAEIJCgdyZXF1ZXN0",
            "Iu0ECg1Lc2NrUmVzdWx0c1BCEg4KBmVycm9ycxgBIAMoCRI7ChBtYXN0ZXJf",
            "c3VtbWFyaWVzGAIgAygLMiEua3VkdS50b29scy5TZXJ2ZXJIZWFsdGhTdW1t",
            "YXJ5UEISPAoRdHNlcnZlcl9zdW1tYXJpZXMYAyADKAsyIS5rdWR1LnRvb2xz",
            "LlNlcnZlckhlYWx0aFN1bW1hcnlQQhIUCgxtYXN0ZXJfdXVpZHMYBCADKAkS",
            "IQoZbWFzdGVyX2NvbnNlbnN1c19jb25mbGljdBgFIAEoCBI9ChdtYXN0ZXJf",
            "Y29uc2Vuc3VzX3N0YXRlcxgGIAMoCzIcLmt1ZHUudG9vbHMuQ29uc2Vuc3Vz",
            "U3RhdGVQQhI1ChB0YWJsZXRfc3VtbWFyaWVzGAcgAygLMhsua3VkdS50b29s",
            "cy5UYWJsZXRTdW1tYXJ5UEISMwoPdGFibGVfc3VtbWFyaWVzGAggAygLMhou",
            "a3VkdS50b29scy5UYWJsZVN1bW1hcnlQQhI6ChZzeXN0ZW1fdGFibGVfc3Vt",
            "bWFyaWVzGAwgAygLMhoua3VkdS50b29scy5UYWJsZVN1bW1hcnlQQhI7ChBj",
            "aGVja3N1bV9yZXN1bHRzGAkgASgLMiEua3VkdS50b29scy5Lc2NrQ2hlY2tz",
            "dW1SZXN1bHRzUEISOwoRdmVyc2lvbl9zdW1tYXJpZXMYCiADKAsyIC5rdWR1",
            "LnRvb2xzLktzY2tWZXJzaW9uU3VtbWFyeVBCEjcKD2NvdW50X3N1bW1hcmll",
            "cxgLIAMoCzIeLmt1ZHUudG9vbHMuS3Nja0NvdW50U3VtbWFyeVBCIo4CChVT",
            "ZXJ2ZXJIZWFsdGhTdW1tYXJ5UEISDAoEdXVpZBgBIAEoCRIPCgdhZGRyZXNz",
            "GAIgASgJEj4KBmhlYWx0aBgDIAEoDjIuLmt1ZHUudG9vbHMuU2VydmVySGVh",
            "bHRoU3VtbWFyeVBCLlNlcnZlckhlYWx0aBIOCgZzdGF0dXMYBCABKAkSDwoH",
            "dmVyc2lvbhgFIAEoCRIQCghsb2NhdGlvbhgGIAEoCSJjCgxTZXJ2ZXJIZWFs",
            "dGgSDAoHVU5LTk9XThDnBxILCgdIRUFMVEhZEAASDwoLVU5BVkFJTEFCTEUQ",
            "ARIVChFXUk9OR19TRVJWRVJfVVVJRBACEhAKDFVOQVVUSE9SSVpFRBADIvIB",
            "ChBDb25zZW5zdXNTdGF0ZVBCEjUKBHR5cGUYASABKA4yJy5rdWR1LnRvb2xz",
            "LkNvbnNlbnN1c1N0YXRlUEIuQ29uZmlnVHlwZRIMCgR0ZXJtGAIgASgDEhIK",
            "Cm9waWRfaW5kZXgYAyABKAMSEwoLbGVhZGVyX3V1aWQYBCABKAkSEwoLdm90",
            "ZXJfdXVpZHMYBSADKAkSFwoPbm9uX3ZvdGVyX3V1aWRzGAYgAygJIkIKCkNv",
            "bmZpZ1R5cGUSDAoHVU5LTk9XThDnBxIKCgZNQVNURVIQABINCglDT01NSVRU",
            "RUQQARILCgdQRU5ESU5HEAIi6AEKD1RhYmxldFN1bW1hcnlQQhIKCgJpZBgB",
            "IAEoCRIQCgh0YWJsZV9pZBgCIAEoCRISCgp0YWJsZV9uYW1lGAMgASgJEi4K",
            "BmhlYWx0aBgEIAEoDjIeLmt1ZHUudG9vbHMuS3Nja1RhYmxldEhlYWx0aFBC",
            "Eg4KBnN0YXR1cxgFIAEoCRIzCg1tYXN0ZXJfY3N0YXRlGAYgASgLMhwua3Vk",
            "dS50b29scy5Db25zZW5zdXNTdGF0ZVBCEi4KCHJlcGxpY2FzGAcgAygLMhwu",
            "a3VkdS50b29scy5SZXBsaWNhU3VtbWFyeVBCIoICChBSZXBsaWNhU3VtbWFy",
            "eVBCEg8KB3RzX3V1aWQYASABKAkSEgoKdHNfYWRkcmVzcxgCIAEoCRISCgp0",
            "c19oZWFsdGh5GAMgASgIEhEKCWlzX2xlYWRlchgEIAEoCBIQCghpc192b3Rl",
            "chgFIAEoCBIpCgVzdGF0ZRgGIAEoDjIaLmt1ZHUudGFibGV0LlRhYmxldFN0",
            "YXRlUEISLgoJc3RhdHVzX3BiGAcgASgLMhsua3VkdS50YWJsZXQuVGFibGV0",
            "U3RhdHVzUEISNQoPY29uc2Vuc3VzX3N0YXRlGAggASgLMhwua3VkdS50b29s",
            "cy5Db25zZW5zdXNTdGF0ZVBCIqQCCg5UYWJsZVN1bW1hcnlQQhIKCgJpZBgB",
            "IAEoCRIMCgRuYW1lGAIgASgJEi4KBmhlYWx0aBgDIAEoDjIeLmt1ZHUudG9v",
            "bHMuS3Nja1RhYmxldEhlYWx0aFBCEhoKEnJlcGxpY2F0aW9uX2ZhY3RvchgE",
            "IAEoBRIVCg10b3RhbF90YWJsZXRzGAUgASgFEhcKD2hlYWx0aHlfdGFibGV0",
            "cxgGIAEoBRIaChJyZWNvdmVyaW5nX3RhYmxldHMYByABKAUSHwoXdW5kZXJy",
            "ZXBsaWNhdGVkX3RhYmxldHMYCCABKAUSGwoTdW5hdmFpbGFibGVfdGFibGV0",
            "cxgJIAEoBRIiChpjb25zZW5zdXNfbWlzbWF0Y2hfdGFibGV0cxgKIAEoBSJk",
            "ChVLc2NrQ2hlY2tzdW1SZXN1bHRzUEISGgoSc25hcHNob3RfdGltZXN0YW1w",
            "GAEgASgGEi8KBnRhYmxlcxgCIAMoCzIfLmt1ZHUudG9vbHMuS3Nja1RhYmxl",
            "Q2hlY2tzdW1QQiJWChNLc2NrVGFibGVDaGVja3N1bVBCEgwKBG5hbWUYASAB",
            "KAkSMQoHdGFibGV0cxgCIAMoCzIgLmt1ZHUudG9vbHMuS3Nja1RhYmxldENo",
            "ZWNrc3VtUEIieQoUS3Nja1RhYmxldENoZWNrc3VtUEISEQoJdGFibGV0X2lk",
            "GAEgASgJEhAKCG1pc21hdGNoGAIgASgIEjwKEXJlcGxpY2FfY2hlY2tzdW1z",
            "GAMgAygLMiEua3VkdS50b29scy5Lc2NrUmVwbGljYUNoZWNrc3VtUEIiXgoV",
            "S3Nja1JlcGxpY2FDaGVja3N1bVBCEhIKCnRzX2FkZHJlc3MYASABKAkSDwoH",
            "dHNfdXVpZBgCIAEoCRIOCgZzdGF0dXMYAyABKAkSEAoIY2hlY2tzdW0YBCAB",
            "KAYiOAoUS3Nja1ZlcnNpb25TdW1tYXJ5UEISDwoHdmVyc2lvbhgBIAEoCRIP",
            "CgdzZXJ2ZXJzGAIgAygJImoKEktzY2tDb3VudFN1bW1hcnlQQhIPCgdtYXN0",
            "ZXJzGAEgASgFEhAKCHRzZXJ2ZXJzGAIgASgFEg4KBnRhYmxlcxgDIAEoBRIP",
            "Cgd0YWJsZXRzGAQgASgFEhAKCHJlcGxpY2FzGAUgASgFIuUECghDb2x1bW5Q",
            "QhITCgtjb2x1bW5fbmFtZRgBIAEoCRITCgtjb2x1bW5fdHlwZRgCIAEoCRIT",
            "Cgtpc19udWxsYWJsZRgDIAEoCBIVCg1kZWZhdWx0X3ZhbHVlGAQgASgJEg8K",
            "B2NvbW1lbnQYBSABKAkSNQoIZW5jb2RpbmcYBiABKA4yIy5rdWR1LnRvb2xz",
            "LkNvbHVtblBCLkVuY29kaW5nVHlwZVBCEjsKC2NvbXByZXNzaW9uGAcgASgO",
            "MiYua3VkdS50b29scy5Db2x1bW5QQi5Db21wcmVzc2lvblR5cGVQQhJACg90",
            "eXBlX2F0dHJpYnV0ZXMYCCABKAsyJy5rdWR1LnRvb2xzLkNvbHVtblBCLkNv",
            "bHVtbkF0dHJpYnV0ZXNQQhIYChBjZmlsZV9ibG9ja19zaXplGAkgASgFGkYK",
            "EkNvbHVtbkF0dHJpYnV0ZXNQQhIRCglwcmVjaXNpb24YASABKAUSDQoFc2Nh",
            "bGUYAiABKAUSDgoGbGVuZ3RoGAMgASgFInkKDkVuY29kaW5nVHlwZVBCEhEK",
            "DUFVVE9fRU5DT0RJTkcQABISCg5QTEFJTl9FTkNPRElORxABEhMKD1BSRUZJ",
            "WF9FTkNPRElORxACEgcKA1JMRRADEhEKDURJQ1RfRU5DT0RJTkcQBBIPCgtC",
            "SVRfU0hVRkZMRRAFIl8KEUNvbXByZXNzaW9uVHlwZVBCEhcKE0RFRkFVTFRf",
            "Q09NUFJFU1NJT04QABISCg5OT19DT01QUkVTU0lPThABEgoKBlNOQVBQWRAC",
            "EgcKA0xaNBADEggKBFpMSUIQBCKEBgoLUGFydGl0aW9uUEISQAoPaGFzaF9w",
            "YXJ0aXRpb25zGAEgAygLMicua3VkdS50b29scy5QYXJ0aXRpb25QQi5IYXNo",
            "UGFydGl0aW9uUEISQQoPcmFuZ2VfcGFydGl0aW9uGAIgASgLMigua3VkdS50",
            "b29scy5QYXJ0aXRpb25QQi5SYW5nZVBhcnRpdGlvblBCGqgEChBSYW5nZVBh",
            "cnRpdGlvblBCEg8KB2NvbHVtbnMYASADKAkSSwoMcmFuZ2VfYm91bmRzGAIg",
            "AygLMjUua3VkdS50b29scy5QYXJ0aXRpb25QQi5SYW5nZVBhcnRpdGlvblBC",
            "LlJhbmdlQm91bmRQQhJLCgxyYW5nZV9zcGxpdHMYAyADKAsyNS5rdWR1LnRv",
            "b2xzLlBhcnRpdGlvblBCLlJhbmdlUGFydGl0aW9uUEIuU3BsaXRWYWx1ZVBC",
            "GqMBCgdCb3VuZFBCEkkKCmJvdW5kX3R5cGUYASABKA4yNS5rdWR1LnRvb2xz",
            "LlBhcnRpdGlvblBCLlJhbmdlUGFydGl0aW9uUEIuQm91bmRQQi5UeXBlEhQK",
            "DGJvdW5kX3ZhbHVlcxgCIAMoCSI3CgRUeXBlEhEKDVVOS05PV05fQk9VTkQQ",
            "ABINCglFWENMVVNJVkUQARINCglJTkNMVVNJVkUQAhqcAQoMUmFuZ2VCb3Vu",
            "ZFBCEkUKC2xvd2VyX2JvdW5kGAEgASgLMjAua3VkdS50b29scy5QYXJ0aXRp",
            "b25QQi5SYW5nZVBhcnRpdGlvblBCLkJvdW5kUEISRQoLdXBwZXJfYm91bmQY",
            "AiABKAsyMC5rdWR1LnRvb2xzLlBhcnRpdGlvblBCLlJhbmdlUGFydGl0aW9u",
            "UEIuQm91bmRQQhokCgxTcGxpdFZhbHVlUEISFAoMc3BsaXRfdmFsdWVzGAEg",
            "AygJGkUKD0hhc2hQYXJ0aXRpb25QQhIPCgdjb2x1bW5zGAEgAygJEhMKC251",
            "bV9idWNrZXRzGAIgASgFEgwKBHNlZWQYAyABKA0ieAoNRXh0cmFDb25maWdQ",
            "QhI3Cgdjb25maWdzGAEgAygLMiYua3VkdS50b29scy5FeHRyYUNvbmZpZ1BC",
            "LkNvbmZpZ3NFbnRyeRouCgxDb25maWdzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ASJLCghTY2hlbWFQQhIlCgdjb2x1bW5zGAEgAygL",
            "MhQua3VkdS50b29scy5Db2x1bW5QQhIYChBrZXlfY29sdW1uX25hbWVzGAIg",
            "AygJItYBCg1DcmVhdGVUYWJsZVBCEhIKCnRhYmxlX25hbWUYASABKAkSJAoG",
            "c2NoZW1hGAIgASgLMhQua3VkdS50b29scy5TY2hlbWFQQhIqCglwYXJ0aXRp",
            "b24YAyABKAsyFy5rdWR1LnRvb2xzLlBhcnRpdGlvblBCEhQKDG51bV9yZXBs",
            "aWNhcxgEIAEoBRIwCg1leHRyYV9jb25maWdzGAUgASgLMhkua3VkdS50b29s",
            "cy5FeHRyYUNvbmZpZ1BCEhcKD2RpbWVuc2lvbl9sYWJlbBgGIAEoCSpCCgpE",
            "YWVtb25UeXBlEhIKDlVOS05PV05fREFFTU9OEAASCgoGTUFTVEVSEAESCwoH",
            "VFNFUlZFUhACEgcKA0tEQxADKn4KEktzY2tUYWJsZXRIZWFsdGhQQhIMCgdV",
            "TktOT1dOEOcHEgsKB0hFQUxUSFkQABIOCgpSRUNPVkVSSU5HEAESFAoQVU5E",
            "RVJfUkVQTElDQVRFRBACEg8KC1VOQVZBSUxBQkxFEAMSFgoSQ09OU0VOU1VT",
            "X01JU01BVENIEARCOQoVb3JnLmFwYWNoZS5rdWR1LnRvb2xzqgIfS25ldC5L",
            "dWR1LkNsaWVudC5Qcm90b2J1Zi5Ub29scw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Knet.Kudu.Client.Protobuf.CommonReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Tablet.MetadataReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Knet.Kudu.Client.Protobuf.Tools.DaemonType), typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Parser, new[]{ "NumMasters", "NumTservers", "EnableKerberos", "Principal", "EnableRanger", "HmsMode", "ClusterRoot", "ExtraMasterFlags", "ExtraTserverFlags", "MiniKdcOptions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB), global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB.Parser, new[]{ "TicketLifetime", "RenewLifetime" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB), global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB.Parser, new[]{ "Type", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB), global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB.Parser, new[]{ "Id", "BoundRpcAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB), global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB.Parser, new[]{ "Masters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB), global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB.Parser, new[]{ "Tservers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB), global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB.Parser, new[]{ "EnvVars" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB.Parser, new[]{ "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB.Parser, new[]{ "Id", "Flag", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ControlShellResponsePB), global::Knet.Kudu.Client.Protobuf.Tools.ControlShellResponsePB.Parser, new[]{ "Error", "GetMasters", "GetTservers", "GetKdcEnvVars" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ControlShellRequestPB), global::Knet.Kudu.Client.Protobuf.Tools.ControlShellRequestPB.Parser, new[]{ "CreateCluster", "DestroyCluster", "StartCluster", "StopCluster", "StartDaemon", "StopDaemon", "GetMasters", "GetTservers", "GetKdcEnvVars", "Kdestroy", "Kinit", "SetDaemonFlag", "PauseDaemon", "ResumeDaemon" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckResultsPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckResultsPB.Parser, new[]{ "Errors", "MasterSummaries", "TserverSummaries", "MasterUuids", "MasterConsensusConflict", "MasterConsensusStates", "TabletSummaries", "TableSummaries", "SystemTableSummaries", "ChecksumResults", "VersionSummaries", "CountSummaries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Parser, new[]{ "Uuid", "Address", "Health", "Status", "Version", "Location" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB), global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Parser, new[]{ "Type", "Term", "OpidIndex", "LeaderUuid", "VoterUuids", "NonVoterUuids" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB.Parser, new[]{ "Id", "TableId", "TableName", "Health", "Status", "MasterCstate", "Replicas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB.Parser, new[]{ "TsUuid", "TsAddress", "TsHealthy", "IsLeader", "IsVoter", "State", "StatusPb", "ConsensusState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB.Parser, new[]{ "Id", "Name", "Health", "ReplicationFactor", "TotalTablets", "HealthyTablets", "RecoveringTablets", "UnderreplicatedTablets", "UnavailableTablets", "ConsensusMismatchTablets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB.Parser, new[]{ "SnapshotTimestamp", "Tables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB.Parser, new[]{ "Name", "Tablets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB.Parser, new[]{ "TabletId", "Mismatch", "ReplicaChecksums" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB.Parser, new[]{ "TsAddress", "TsUuid", "Status", "Checksum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB.Parser, new[]{ "Version", "Servers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB), global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB.Parser, new[]{ "Masters", "Tservers", "Tables", "Tablets", "Replicas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB), global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Parser, new[]{ "ColumnName", "ColumnType", "IsNullable", "DefaultValue", "Comment", "Encoding", "Compression", "TypeAttributes", "CfileBlockSize" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB), typeof(global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB), global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB.Parser, new[]{ "Precision", "Scale", "Length" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Parser, new[]{ "HashPartitions", "RangePartition" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Parser, new[]{ "Columns", "RangeBounds", "RangeSplits" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Parser, new[]{ "BoundType", "BoundValues" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB.Parser, new[]{ "LowerBound", "UpperBound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB.Parser, new[]{ "SplitValues" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB), global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB.Parser, new[]{ "Columns", "NumBuckets", "Seed" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB), global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB.Parser, new[]{ "Configs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB), global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB.Parser, new[]{ "Columns", "KeyColumnNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tools.CreateTablePB), global::Knet.Kudu.Client.Protobuf.Tools.CreateTablePB.Parser, new[]{ "TableName", "Schema", "Partition", "NumReplicas", "ExtraConfigs", "DimensionLabel" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Type of daemon managed in a cluster.
  /// </summary>
  public enum DaemonType {
    [pbr::OriginalName("UNKNOWN_DAEMON")] UnknownDaemon = 0,
    [pbr::OriginalName("MASTER")] Master = 1,
    [pbr::OriginalName("TSERVER")] Tserver = 2,
    [pbr::OriginalName("KDC")] Kdc = 3,
  }

  public enum KsckTabletHealthPB {
    [pbr::OriginalName("UNKNOWN")] Unknown = 999,
    [pbr::OriginalName("HEALTHY")] Healthy = 0,
    [pbr::OriginalName("RECOVERING")] Recovering = 1,
    [pbr::OriginalName("UNDER_REPLICATED")] UnderReplicated = 2,
    [pbr::OriginalName("UNAVAILABLE")] Unavailable = 3,
    [pbr::OriginalName("CONSENSUS_MISMATCH")] ConsensusMismatch = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Creates a new ExternalMiniCluster.
  ///
  /// The below fields generally map to options from ExternalMiniClusterOptions.
  /// If not provided, the defaults from that class will be used instead.
  ///
  /// Only one cluster may be created at a time.
  /// </summary>
  public sealed partial class CreateClusterRequestPB : pb::IMessage<CreateClusterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<CreateClusterRequestPB> _parser = new pb::MessageParser<CreateClusterRequestPB>(() => new CreateClusterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateClusterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClusterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClusterRequestPB(CreateClusterRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      numMasters_ = other.numMasters_;
      numTservers_ = other.numTservers_;
      enableKerberos_ = other.enableKerberos_;
      principal_ = other.principal_;
      enableRanger_ = other.enableRanger_;
      hmsMode_ = other.hmsMode_;
      clusterRoot_ = other.clusterRoot_;
      extraMasterFlags_ = other.extraMasterFlags_.Clone();
      extraTserverFlags_ = other.extraTserverFlags_.Clone();
      miniKdcOptions_ = other.miniKdcOptions_ != null ? other.miniKdcOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClusterRequestPB Clone() {
      return new CreateClusterRequestPB(this);
    }

    /// <summary>Field number for the "num_masters" field.</summary>
    public const int NumMastersFieldNumber = 1;
    private readonly static int NumMastersDefaultValue = 0;

    private int numMasters_;
    /// <summary>
    /// The desired number of masters.
    ///
    /// Currently only one or three masters are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumMasters {
      get { if ((_hasBits0 & 1) != 0) { return numMasters_; } else { return NumMastersDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numMasters_ = value;
      }
    }
    /// <summary>Gets whether the "num_masters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumMasters {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_masters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumMasters() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num_tservers" field.</summary>
    public const int NumTserversFieldNumber = 2;
    private readonly static int NumTserversDefaultValue = 0;

    private int numTservers_;
    /// <summary>
    /// The desired number of tablet servers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumTservers {
      get { if ((_hasBits0 & 2) != 0) { return numTservers_; } else { return NumTserversDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numTservers_ = value;
      }
    }
    /// <summary>Gets whether the "num_tservers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumTservers {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num_tservers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumTservers() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "enable_kerberos" field.</summary>
    public const int EnableKerberosFieldNumber = 3;
    private readonly static bool EnableKerberosDefaultValue = false;

    private bool enableKerberos_;
    /// <summary>
    /// Whether or not the cluster should be Kerberized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableKerberos {
      get { if ((_hasBits0 & 4) != 0) { return enableKerberos_; } else { return EnableKerberosDefaultValue; } }
      set {
        _hasBits0 |= 4;
        enableKerberos_ = value;
      }
    }
    /// <summary>Gets whether the "enable_kerberos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableKerberos {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "enable_kerberos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableKerberos() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "principal" field.</summary>
    public const int PrincipalFieldNumber = 10;
    private readonly static string PrincipalDefaultValue = "";

    private string principal_;
    /// <summary>
    /// Service principal name used by the cluster if Kerberos is enabled (default:
    /// "kudu").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Principal {
      get { return principal_ ?? PrincipalDefaultValue; }
      set {
        principal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "principal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrincipal {
      get { return principal_ != null; }
    }
    /// <summary>Clears the value of the "principal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrincipal() {
      principal_ = null;
    }

    /// <summary>Field number for the "enable_ranger" field.</summary>
    public const int EnableRangerFieldNumber = 9;
    private readonly static bool EnableRangerDefaultValue = false;

    private bool enableRanger_;
    /// <summary>
    /// Whether or not Ranger should be enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableRanger {
      get { if ((_hasBits0 & 16) != 0) { return enableRanger_; } else { return EnableRangerDefaultValue; } }
      set {
        _hasBits0 |= 16;
        enableRanger_ = value;
      }
    }
    /// <summary>Gets whether the "enable_ranger" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableRanger {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "enable_ranger" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableRanger() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "hms_mode" field.</summary>
    public const int HmsModeFieldNumber = 7;
    private readonly static global::Knet.Kudu.Client.Protobuf.HmsModePB HmsModeDefaultValue = global::Knet.Kudu.Client.Protobuf.HmsModePB.None;

    private global::Knet.Kudu.Client.Protobuf.HmsModePB hmsMode_;
    /// <summary>
    /// Whether or not to create a Hive Metastore, and/or enable Kudu Hive
    /// Metastore integration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.HmsModePB HmsMode {
      get { if ((_hasBits0 & 8) != 0) { return hmsMode_; } else { return HmsModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hmsMode_ = value;
      }
    }
    /// <summary>Gets whether the "hms_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHmsMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hms_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHmsMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cluster_root" field.</summary>
    public const int ClusterRootFieldNumber = 4;
    private readonly static string ClusterRootDefaultValue = "";

    private string clusterRoot_;
    /// <summary>
    /// The directory where the cluster's data and logs should be placed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterRoot {
      get { return clusterRoot_ ?? ClusterRootDefaultValue; }
      set {
        clusterRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cluster_root" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClusterRoot {
      get { return clusterRoot_ != null; }
    }
    /// <summary>Clears the value of the "cluster_root" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClusterRoot() {
      clusterRoot_ = null;
    }

    /// <summary>Field number for the "extra_master_flags" field.</summary>
    public const int ExtraMasterFlagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_extraMasterFlags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> extraMasterFlags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Any additional gflags for masters or tablet servers. Each should be in a
    /// a format that's expected by gflag (i.e. "--foo=bar").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ExtraMasterFlags {
      get { return extraMasterFlags_; }
    }

    /// <summary>Field number for the "extra_tserver_flags" field.</summary>
    public const int ExtraTserverFlagsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_extraTserverFlags_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> extraTserverFlags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ExtraTserverFlags {
      get { return extraTserverFlags_; }
    }

    /// <summary>Field number for the "mini_kdc_options" field.</summary>
    public const int MiniKdcOptionsFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB miniKdcOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB MiniKdcOptions {
      get { return miniKdcOptions_; }
      set {
        miniKdcOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateClusterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumMasters != other.NumMasters) return false;
      if (NumTservers != other.NumTservers) return false;
      if (EnableKerberos != other.EnableKerberos) return false;
      if (Principal != other.Principal) return false;
      if (EnableRanger != other.EnableRanger) return false;
      if (HmsMode != other.HmsMode) return false;
      if (ClusterRoot != other.ClusterRoot) return false;
      if(!extraMasterFlags_.Equals(other.extraMasterFlags_)) return false;
      if(!extraTserverFlags_.Equals(other.extraTserverFlags_)) return false;
      if (!object.Equals(MiniKdcOptions, other.MiniKdcOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumMasters) hash ^= NumMasters.GetHashCode();
      if (HasNumTservers) hash ^= NumTservers.GetHashCode();
      if (HasEnableKerberos) hash ^= EnableKerberos.GetHashCode();
      if (HasPrincipal) hash ^= Principal.GetHashCode();
      if (HasEnableRanger) hash ^= EnableRanger.GetHashCode();
      if (HasHmsMode) hash ^= HmsMode.GetHashCode();
      if (HasClusterRoot) hash ^= ClusterRoot.GetHashCode();
      hash ^= extraMasterFlags_.GetHashCode();
      hash ^= extraTserverFlags_.GetHashCode();
      if (miniKdcOptions_ != null) hash ^= MiniKdcOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNumMasters) {
        output.WriteRawTag(8);
        output.WriteInt32(NumMasters);
      }
      if (HasNumTservers) {
        output.WriteRawTag(16);
        output.WriteInt32(NumTservers);
      }
      if (HasEnableKerberos) {
        output.WriteRawTag(24);
        output.WriteBool(EnableKerberos);
      }
      if (HasClusterRoot) {
        output.WriteRawTag(34);
        output.WriteString(ClusterRoot);
      }
      extraMasterFlags_.WriteTo(ref output, _repeated_extraMasterFlags_codec);
      extraTserverFlags_.WriteTo(ref output, _repeated_extraTserverFlags_codec);
      if (HasHmsMode) {
        output.WriteRawTag(56);
        output.WriteEnum((int) HmsMode);
      }
      if (miniKdcOptions_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MiniKdcOptions);
      }
      if (HasEnableRanger) {
        output.WriteRawTag(72);
        output.WriteBool(EnableRanger);
      }
      if (HasPrincipal) {
        output.WriteRawTag(82);
        output.WriteString(Principal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNumMasters) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumMasters);
      }
      if (HasNumTservers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTservers);
      }
      if (HasEnableKerberos) {
        size += 1 + 1;
      }
      if (HasPrincipal) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Principal);
      }
      if (HasEnableRanger) {
        size += 1 + 1;
      }
      if (HasHmsMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HmsMode);
      }
      if (HasClusterRoot) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterRoot);
      }
      size += extraMasterFlags_.CalculateSize(_repeated_extraMasterFlags_codec);
      size += extraTserverFlags_.CalculateSize(_repeated_extraTserverFlags_codec);
      if (miniKdcOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MiniKdcOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateClusterRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasNumMasters) {
        NumMasters = other.NumMasters;
      }
      if (other.HasNumTservers) {
        NumTservers = other.NumTservers;
      }
      if (other.HasEnableKerberos) {
        EnableKerberos = other.EnableKerberos;
      }
      if (other.HasPrincipal) {
        Principal = other.Principal;
      }
      if (other.HasEnableRanger) {
        EnableRanger = other.EnableRanger;
      }
      if (other.HasHmsMode) {
        HmsMode = other.HmsMode;
      }
      if (other.HasClusterRoot) {
        ClusterRoot = other.ClusterRoot;
      }
      extraMasterFlags_.Add(other.extraMasterFlags_);
      extraTserverFlags_.Add(other.extraTserverFlags_);
      if (other.miniKdcOptions_ != null) {
        if (miniKdcOptions_ == null) {
          MiniKdcOptions = new global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB();
        }
        MiniKdcOptions.MergeFrom(other.MiniKdcOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumMasters = input.ReadInt32();
            break;
          }
          case 16: {
            NumTservers = input.ReadInt32();
            break;
          }
          case 24: {
            EnableKerberos = input.ReadBool();
            break;
          }
          case 34: {
            ClusterRoot = input.ReadString();
            break;
          }
          case 42: {
            extraMasterFlags_.AddEntriesFrom(ref input, _repeated_extraMasterFlags_codec);
            break;
          }
          case 50: {
            extraTserverFlags_.AddEntriesFrom(ref input, _repeated_extraTserverFlags_codec);
            break;
          }
          case 56: {
            HmsMode = (global::Knet.Kudu.Client.Protobuf.HmsModePB) input.ReadEnum();
            break;
          }
          case 66: {
            if (miniKdcOptions_ == null) {
              MiniKdcOptions = new global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Types.MiniKdcOptionsPB();
            }
            input.ReadMessage(MiniKdcOptions);
            break;
          }
          case 72: {
            EnableRanger = input.ReadBool();
            break;
          }
          case 82: {
            Principal = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateClusterRequestPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class MiniKdcOptionsPB : pb::IMessage<MiniKdcOptionsPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<MiniKdcOptionsPB> _parser = new pb::MessageParser<MiniKdcOptionsPB>(() => new MiniKdcOptionsPB());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MiniKdcOptionsPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MiniKdcOptionsPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MiniKdcOptionsPB(MiniKdcOptionsPB other) : this() {
          ticketLifetime_ = other.ticketLifetime_;
          renewLifetime_ = other.renewLifetime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MiniKdcOptionsPB Clone() {
          return new MiniKdcOptionsPB(this);
        }

        /// <summary>Field number for the "ticket_lifetime" field.</summary>
        public const int TicketLifetimeFieldNumber = 1;
        private readonly static string TicketLifetimeDefaultValue = "";

        private string ticketLifetime_;
        /// <summary>
        /// The default lifetime for initial ticket requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TicketLifetime {
          get { return ticketLifetime_ ?? TicketLifetimeDefaultValue; }
          set {
            ticketLifetime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "ticket_lifetime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTicketLifetime {
          get { return ticketLifetime_ != null; }
        }
        /// <summary>Clears the value of the "ticket_lifetime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTicketLifetime() {
          ticketLifetime_ = null;
        }

        /// <summary>Field number for the "renew_lifetime" field.</summary>
        public const int RenewLifetimeFieldNumber = 2;
        private readonly static string RenewLifetimeDefaultValue = "";

        private string renewLifetime_;
        /// <summary>
        /// The default renewable lifetime for initial ticket requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RenewLifetime {
          get { return renewLifetime_ ?? RenewLifetimeDefaultValue; }
          set {
            renewLifetime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "renew_lifetime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRenewLifetime {
          get { return renewLifetime_ != null; }
        }
        /// <summary>Clears the value of the "renew_lifetime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRenewLifetime() {
          renewLifetime_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MiniKdcOptionsPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MiniKdcOptionsPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TicketLifetime != other.TicketLifetime) return false;
          if (RenewLifetime != other.RenewLifetime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTicketLifetime) hash ^= TicketLifetime.GetHashCode();
          if (HasRenewLifetime) hash ^= RenewLifetime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasTicketLifetime) {
            output.WriteRawTag(10);
            output.WriteString(TicketLifetime);
          }
          if (HasRenewLifetime) {
            output.WriteRawTag(18);
            output.WriteString(RenewLifetime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasTicketLifetime) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketLifetime);
          }
          if (HasRenewLifetime) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RenewLifetime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MiniKdcOptionsPB other) {
          if (other == null) {
            return;
          }
          if (other.HasTicketLifetime) {
            TicketLifetime = other.TicketLifetime;
          }
          if (other.HasRenewLifetime) {
            RenewLifetime = other.RenewLifetime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TicketLifetime = input.ReadString();
                break;
              }
              case 18: {
                RenewLifetime = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Destroys a cluster created via 'create_cluster'.
  /// </summary>
  public sealed partial class DestroyClusterRequestPB : pb::IMessage<DestroyClusterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DestroyClusterRequestPB> _parser = new pb::MessageParser<DestroyClusterRequestPB>(() => new DestroyClusterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DestroyClusterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DestroyClusterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DestroyClusterRequestPB(DestroyClusterRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DestroyClusterRequestPB Clone() {
      return new DestroyClusterRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DestroyClusterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DestroyClusterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DestroyClusterRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Starts all daemons in a newly created cluster, or restart all daemons
  /// in a stopped cluster.
  ///
  /// No-op for already started clusters.
  /// </summary>
  public sealed partial class StartClusterRequestPB : pb::IMessage<StartClusterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<StartClusterRequestPB> _parser = new pb::MessageParser<StartClusterRequestPB>(() => new StartClusterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartClusterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartClusterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartClusterRequestPB(StartClusterRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartClusterRequestPB Clone() {
      return new StartClusterRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartClusterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartClusterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartClusterRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Stops a cluster.
  ///
  /// No-op for already stopped clusters.
  /// </summary>
  public sealed partial class StopClusterRequestPB : pb::IMessage<StopClusterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<StopClusterRequestPB> _parser = new pb::MessageParser<StopClusterRequestPB>(() => new StopClusterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StopClusterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopClusterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopClusterRequestPB(StopClusterRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopClusterRequestPB Clone() {
      return new StopClusterRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StopClusterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StopClusterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StopClusterRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Identifier for a cluster daemon, unique to the cluster.
  /// </summary>
  public sealed partial class DaemonIdentifierPB : pb::IMessage<DaemonIdentifierPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DaemonIdentifierPB> _parser = new pb::MessageParser<DaemonIdentifierPB>(() => new DaemonIdentifierPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DaemonIdentifierPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonIdentifierPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonIdentifierPB(DaemonIdentifierPB other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonIdentifierPB Clone() {
      return new DaemonIdentifierPB(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.DaemonType TypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.DaemonType.UnknownDaemon;

    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonType type_;
    /// <summary>
    /// Whether the daemon is a master, tserver, or whatever.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private readonly static uint IndexDefaultValue = 0;

    private uint index_;
    /// <summary>
    /// Index of the daemon in the cluster, if the cluster has multiple daemons
    /// of this type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { if ((_hasBits0 & 2) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DaemonIdentifierPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DaemonIdentifierPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DaemonIdentifierPB other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Knet.Kudu.Client.Protobuf.Tools.DaemonType) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Restart a stopped daemon.
  /// </summary>
  public sealed partial class StartDaemonRequestPB : pb::IMessage<StartDaemonRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<StartDaemonRequestPB> _parser = new pb::MessageParser<StartDaemonRequestPB>(() => new StartDaemonRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartDaemonRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartDaemonRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartDaemonRequestPB(StartDaemonRequestPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartDaemonRequestPB Clone() {
      return new StartDaemonRequestPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// The identifier of the daemon to be restarted. This identifier is unique
    /// and immutable for the lifetime of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartDaemonRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartDaemonRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartDaemonRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Stops a started daemon.
  ///
  /// No-op for already stopped daemons.
  /// </summary>
  public sealed partial class StopDaemonRequestPB : pb::IMessage<StopDaemonRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<StopDaemonRequestPB> _parser = new pb::MessageParser<StopDaemonRequestPB>(() => new StopDaemonRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StopDaemonRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopDaemonRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopDaemonRequestPB(StopDaemonRequestPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopDaemonRequestPB Clone() {
      return new StopDaemonRequestPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// The identifier of the daemon to be stopped. This identifier is unique
    /// and immutable for the lifetime of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StopDaemonRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StopDaemonRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StopDaemonRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Pause a daemon: send SIGSTOP signal to the process.
  /// </summary>
  public sealed partial class PauseDaemonRequestPB : pb::IMessage<PauseDaemonRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PauseDaemonRequestPB> _parser = new pb::MessageParser<PauseDaemonRequestPB>(() => new PauseDaemonRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PauseDaemonRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PauseDaemonRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PauseDaemonRequestPB(PauseDaemonRequestPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PauseDaemonRequestPB Clone() {
      return new PauseDaemonRequestPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// The identifier of the daemon to be paused.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PauseDaemonRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PauseDaemonRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PauseDaemonRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Resume a paused daemon: send SIGCONT signal to the process.
  /// </summary>
  public sealed partial class ResumeDaemonRequestPB : pb::IMessage<ResumeDaemonRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ResumeDaemonRequestPB> _parser = new pb::MessageParser<ResumeDaemonRequestPB>(() => new ResumeDaemonRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResumeDaemonRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeDaemonRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeDaemonRequestPB(ResumeDaemonRequestPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeDaemonRequestPB Clone() {
      return new ResumeDaemonRequestPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// The identifier of the daemon to be resumed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResumeDaemonRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResumeDaemonRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResumeDaemonRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Daemon information.
  /// </summary>
  public sealed partial class DaemonInfoPB : pb::IMessage<DaemonInfoPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DaemonInfoPB> _parser = new pb::MessageParser<DaemonInfoPB>(() => new DaemonInfoPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DaemonInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonInfoPB(DaemonInfoPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      boundRpcAddress_ = other.boundRpcAddress_ != null ? other.boundRpcAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DaemonInfoPB Clone() {
      return new DaemonInfoPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// Unique identifier of the daemon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bound_rpc_address" field.</summary>
    public const int BoundRpcAddressFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.HostPortPB boundRpcAddress_;
    /// <summary>
    /// Daemon's bound RPC address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.HostPortPB BoundRpcAddress {
      get { return boundRpcAddress_; }
      set {
        boundRpcAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DaemonInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DaemonInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BoundRpcAddress, other.BoundRpcAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (boundRpcAddress_ != null) hash ^= BoundRpcAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (boundRpcAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BoundRpcAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (boundRpcAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundRpcAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DaemonInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.boundRpcAddress_ != null) {
        if (boundRpcAddress_ == null) {
          BoundRpcAddress = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
        }
        BoundRpcAddress.MergeFrom(other.BoundRpcAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (boundRpcAddress_ == null) {
              BoundRpcAddress = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
            }
            input.ReadMessage(BoundRpcAddress);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response to a GetMastersRequestPB.
  /// </summary>
  public sealed partial class GetMastersResponsePB : pb::IMessage<GetMastersResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetMastersResponsePB> _parser = new pb::MessageParser<GetMastersResponsePB>(() => new GetMastersResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMastersResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersResponsePB(GetMastersResponsePB other) : this() {
      masters_ = other.masters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersResponsePB Clone() {
      return new GetMastersResponsePB(this);
    }

    /// <summary>Field number for the "masters" field.</summary>
    public const int MastersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> _repeated_masters_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> masters_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB>();
    /// <summary>
    /// List of masters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> Masters {
      get { return masters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMastersResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMastersResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!masters_.Equals(other.masters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= masters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      masters_.WriteTo(ref output, _repeated_masters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += masters_.CalculateSize(_repeated_masters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMastersResponsePB other) {
      if (other == null) {
        return;
      }
      masters_.Add(other.masters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            masters_.AddEntriesFrom(ref input, _repeated_masters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gets information on each started master.
  /// </summary>
  public sealed partial class GetMastersRequestPB : pb::IMessage<GetMastersRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetMastersRequestPB> _parser = new pb::MessageParser<GetMastersRequestPB>(() => new GetMastersRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMastersRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersRequestPB(GetMastersRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMastersRequestPB Clone() {
      return new GetMastersRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMastersRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMastersRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMastersRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Response to a GetTServersRequestPB.
  /// </summary>
  public sealed partial class GetTServersResponsePB : pb::IMessage<GetTServersResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTServersResponsePB> _parser = new pb::MessageParser<GetTServersResponsePB>(() => new GetTServersResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTServersResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersResponsePB(GetTServersResponsePB other) : this() {
      tservers_ = other.tservers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersResponsePB Clone() {
      return new GetTServersResponsePB(this);
    }

    /// <summary>Field number for the "tservers" field.</summary>
    public const int TserversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> _repeated_tservers_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> tservers_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB>();
    /// <summary>
    /// List of tablet servers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.DaemonInfoPB> Tservers {
      get { return tservers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTServersResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTServersResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tservers_.Equals(other.tservers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tservers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tservers_.WriteTo(ref output, _repeated_tservers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tservers_.CalculateSize(_repeated_tservers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTServersResponsePB other) {
      if (other == null) {
        return;
      }
      tservers_.Add(other.tservers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tservers_.AddEntriesFrom(ref input, _repeated_tservers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gets information on each started tablet server.
  /// </summary>
  public sealed partial class GetTServersRequestPB : pb::IMessage<GetTServersRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTServersRequestPB> _parser = new pb::MessageParser<GetTServersRequestPB>(() => new GetTServersRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTServersRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersRequestPB(GetTServersRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTServersRequestPB Clone() {
      return new GetTServersRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTServersRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTServersRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTServersRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Response to a GetKDCEnvVarsRequestPB.
  /// </summary>
  public sealed partial class GetKDCEnvVarsResponsePB : pb::IMessage<GetKDCEnvVarsResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetKDCEnvVarsResponsePB> _parser = new pb::MessageParser<GetKDCEnvVarsResponsePB>(() => new GetKDCEnvVarsResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetKDCEnvVarsResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsResponsePB(GetKDCEnvVarsResponsePB other) : this() {
      envVars_ = other.envVars_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsResponsePB Clone() {
      return new GetKDCEnvVarsResponsePB(this);
    }

    /// <summary>Field number for the "env_vars" field.</summary>
    public const int EnvVarsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_envVars_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> envVars_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment variables, mapped from key to value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> EnvVars {
      get { return envVars_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetKDCEnvVarsResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetKDCEnvVarsResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnvVars.Equals(other.EnvVars)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnvVars.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      envVars_.WriteTo(ref output, _map_envVars_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += envVars_.CalculateSize(_map_envVars_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetKDCEnvVarsResponsePB other) {
      if (other == null) {
        return;
      }
      envVars_.Add(other.envVars_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            envVars_.AddEntriesFrom(ref input, _map_envVars_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gets all environment variables another process may need in order to
  /// communicate with this cluster's KDC.
  ///
  /// It is an error to call this on a non-Kerberized cluster.
  /// </summary>
  public sealed partial class GetKDCEnvVarsRequestPB : pb::IMessage<GetKDCEnvVarsRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetKDCEnvVarsRequestPB> _parser = new pb::MessageParser<GetKDCEnvVarsRequestPB>(() => new GetKDCEnvVarsRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetKDCEnvVarsRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsRequestPB(GetKDCEnvVarsRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetKDCEnvVarsRequestPB Clone() {
      return new GetKDCEnvVarsRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetKDCEnvVarsRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetKDCEnvVarsRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetKDCEnvVarsRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Removes all credentials for all principals from the KDC credential cache.
  /// </summary>
  public sealed partial class KdestroyRequestPB : pb::IMessage<KdestroyRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KdestroyRequestPB> _parser = new pb::MessageParser<KdestroyRequestPB>(() => new KdestroyRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KdestroyRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KdestroyRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KdestroyRequestPB(KdestroyRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KdestroyRequestPB Clone() {
      return new KdestroyRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KdestroyRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KdestroyRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KdestroyRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Establishes a new Kerberos ticket cache (equivalent to running 'kinit').
  /// </summary>
  public sealed partial class KinitRequestPB : pb::IMessage<KinitRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KinitRequestPB> _parser = new pb::MessageParser<KinitRequestPB>(() => new KinitRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KinitRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KinitRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KinitRequestPB(KinitRequestPB other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KinitRequestPB Clone() {
      return new KinitRequestPB(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private readonly static string UsernameDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("dGVzdC1hZG1pbg=="), 0, 10);

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KinitRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KinitRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KinitRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Call SetFlag() on the specific daemon.
  /// </summary>
  public sealed partial class SetDaemonFlagRequestPB : pb::IMessage<SetDaemonFlagRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SetDaemonFlagRequestPB> _parser = new pb::MessageParser<SetDaemonFlagRequestPB>(() => new SetDaemonFlagRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetDaemonFlagRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDaemonFlagRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDaemonFlagRequestPB(SetDaemonFlagRequestPB other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      flag_ = other.flag_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDaemonFlagRequestPB Clone() {
      return new SetDaemonFlagRequestPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB id_;
    /// <summary>
    /// The identifier of the daemon to sent the request to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static string FlagDefaultValue = "";

    private string flag_;
    /// <summary>
    /// The name of the flag to set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Flag {
      get { return flag_ ?? FlagDefaultValue; }
      set {
        flag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return flag_ != null; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      flag_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    /// <summary>
    /// Value to set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetDaemonFlagRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetDaemonFlagRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Flag != other.Flag) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (HasFlag) {
        output.WriteRawTag(18);
        output.WriteString(Flag);
      }
      if (HasValue) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Flag);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetDaemonFlagRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Knet.Kudu.Client.Protobuf.Tools.DaemonIdentifierPB();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Flag = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by the control shell in response to a control shell command request.
  /// </summary>
  public sealed partial class ControlShellResponsePB : pb::IMessage<ControlShellResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ControlShellResponsePB> _parser = new pb::MessageParser<ControlShellResponsePB>(() => new ControlShellResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlShellResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellResponsePB(ControlShellResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      switch (other.ResponseCase) {
        case ResponseOneofCase.GetMasters:
          GetMasters = other.GetMasters.Clone();
          break;
        case ResponseOneofCase.GetTservers:
          GetTservers = other.GetTservers.Clone();
          break;
        case ResponseOneofCase.GetKdcEnvVars:
          GetKdcEnvVars = other.GetKdcEnvVars.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellResponsePB Clone() {
      return new ControlShellResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB error_;
    /// <summary>
    /// Only set if there was some kind of shell-side error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "get_masters" field.</summary>
    public const int GetMastersFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB GetMasters {
      get { return responseCase_ == ResponseOneofCase.GetMasters ? (global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.GetMasters;
      }
    }

    /// <summary>Field number for the "get_tservers" field.</summary>
    public const int GetTserversFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB GetTservers {
      get { return responseCase_ == ResponseOneofCase.GetTservers ? (global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.GetTservers;
      }
    }

    /// <summary>Field number for the "get_kdc_env_vars" field.</summary>
    public const int GetKdcEnvVarsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB GetKdcEnvVars {
      get { return responseCase_ == ResponseOneofCase.GetKdcEnvVars ? (global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.GetKdcEnvVars;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      GetMasters = 2,
      GetTservers = 3,
      GetKdcEnvVars = 4,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlShellResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlShellResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(GetMasters, other.GetMasters)) return false;
      if (!object.Equals(GetTservers, other.GetTservers)) return false;
      if (!object.Equals(GetKdcEnvVars, other.GetKdcEnvVars)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (responseCase_ == ResponseOneofCase.GetMasters) hash ^= GetMasters.GetHashCode();
      if (responseCase_ == ResponseOneofCase.GetTservers) hash ^= GetTservers.GetHashCode();
      if (responseCase_ == ResponseOneofCase.GetKdcEnvVars) hash ^= GetKdcEnvVars.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (responseCase_ == ResponseOneofCase.GetMasters) {
        output.WriteRawTag(18);
        output.WriteMessage(GetMasters);
      }
      if (responseCase_ == ResponseOneofCase.GetTservers) {
        output.WriteRawTag(26);
        output.WriteMessage(GetTservers);
      }
      if (responseCase_ == ResponseOneofCase.GetKdcEnvVars) {
        output.WriteRawTag(34);
        output.WriteMessage(GetKdcEnvVars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (responseCase_ == ResponseOneofCase.GetMasters) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMasters);
      }
      if (responseCase_ == ResponseOneofCase.GetTservers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetTservers);
      }
      if (responseCase_ == ResponseOneofCase.GetKdcEnvVars) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetKdcEnvVars);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlShellResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        Error.MergeFrom(other.Error);
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.GetMasters:
          if (GetMasters == null) {
            GetMasters = new global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB();
          }
          GetMasters.MergeFrom(other.GetMasters);
          break;
        case ResponseOneofCase.GetTservers:
          if (GetTservers == null) {
            GetTservers = new global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB();
          }
          GetTservers.MergeFrom(other.GetTservers);
          break;
        case ResponseOneofCase.GetKdcEnvVars:
          if (GetKdcEnvVars == null) {
            GetKdcEnvVars = new global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB();
          }
          GetKdcEnvVars.MergeFrom(other.GetKdcEnvVars);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetMastersResponsePB();
            if (responseCase_ == ResponseOneofCase.GetMasters) {
              subBuilder.MergeFrom(GetMasters);
            }
            input.ReadMessage(subBuilder);
            GetMasters = subBuilder;
            break;
          }
          case 26: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetTServersResponsePB();
            if (responseCase_ == ResponseOneofCase.GetTservers) {
              subBuilder.MergeFrom(GetTservers);
            }
            input.ReadMessage(subBuilder);
            GetTservers = subBuilder;
            break;
          }
          case 34: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsResponsePB();
            if (responseCase_ == ResponseOneofCase.GetKdcEnvVars) {
              subBuilder.MergeFrom(GetKdcEnvVars);
            }
            input.ReadMessage(subBuilder);
            GetKdcEnvVars = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Command sent to the control shell.
  ///
  /// Because the control shell communicates via pipe and not krpc, we can't make
  /// use of service dispatch and must instead multiplex all command requests and
  /// responses via ControlShellRequestPB and ControlShellResponsePB respectively.
  /// </summary>
  public sealed partial class ControlShellRequestPB : pb::IMessage<ControlShellRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ControlShellRequestPB> _parser = new pb::MessageParser<ControlShellRequestPB>(() => new ControlShellRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlShellRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellRequestPB(ControlShellRequestPB other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.CreateCluster:
          CreateCluster = other.CreateCluster.Clone();
          break;
        case RequestOneofCase.DestroyCluster:
          DestroyCluster = other.DestroyCluster.Clone();
          break;
        case RequestOneofCase.StartCluster:
          StartCluster = other.StartCluster.Clone();
          break;
        case RequestOneofCase.StopCluster:
          StopCluster = other.StopCluster.Clone();
          break;
        case RequestOneofCase.StartDaemon:
          StartDaemon = other.StartDaemon.Clone();
          break;
        case RequestOneofCase.StopDaemon:
          StopDaemon = other.StopDaemon.Clone();
          break;
        case RequestOneofCase.GetMasters:
          GetMasters = other.GetMasters.Clone();
          break;
        case RequestOneofCase.GetTservers:
          GetTservers = other.GetTservers.Clone();
          break;
        case RequestOneofCase.GetKdcEnvVars:
          GetKdcEnvVars = other.GetKdcEnvVars.Clone();
          break;
        case RequestOneofCase.Kdestroy:
          Kdestroy = other.Kdestroy.Clone();
          break;
        case RequestOneofCase.Kinit:
          Kinit = other.Kinit.Clone();
          break;
        case RequestOneofCase.SetDaemonFlag:
          SetDaemonFlag = other.SetDaemonFlag.Clone();
          break;
        case RequestOneofCase.PauseDaemon:
          PauseDaemon = other.PauseDaemon.Clone();
          break;
        case RequestOneofCase.ResumeDaemon:
          ResumeDaemon = other.ResumeDaemon.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlShellRequestPB Clone() {
      return new ControlShellRequestPB(this);
    }

    /// <summary>Field number for the "create_cluster" field.</summary>
    public const int CreateClusterFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB CreateCluster {
      get { return requestCase_ == RequestOneofCase.CreateCluster ? (global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreateCluster;
      }
    }

    /// <summary>Field number for the "destroy_cluster" field.</summary>
    public const int DestroyClusterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB DestroyCluster {
      get { return requestCase_ == RequestOneofCase.DestroyCluster ? (global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.DestroyCluster;
      }
    }

    /// <summary>Field number for the "start_cluster" field.</summary>
    public const int StartClusterFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB StartCluster {
      get { return requestCase_ == RequestOneofCase.StartCluster ? (global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StartCluster;
      }
    }

    /// <summary>Field number for the "stop_cluster" field.</summary>
    public const int StopClusterFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB StopCluster {
      get { return requestCase_ == RequestOneofCase.StopCluster ? (global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StopCluster;
      }
    }

    /// <summary>Field number for the "start_daemon" field.</summary>
    public const int StartDaemonFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB StartDaemon {
      get { return requestCase_ == RequestOneofCase.StartDaemon ? (global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StartDaemon;
      }
    }

    /// <summary>Field number for the "stop_daemon" field.</summary>
    public const int StopDaemonFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB StopDaemon {
      get { return requestCase_ == RequestOneofCase.StopDaemon ? (global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StopDaemon;
      }
    }

    /// <summary>Field number for the "get_masters" field.</summary>
    public const int GetMastersFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB GetMasters {
      get { return requestCase_ == RequestOneofCase.GetMasters ? (global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.GetMasters;
      }
    }

    /// <summary>Field number for the "get_tservers" field.</summary>
    public const int GetTserversFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB GetTservers {
      get { return requestCase_ == RequestOneofCase.GetTservers ? (global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.GetTservers;
      }
    }

    /// <summary>Field number for the "get_kdc_env_vars" field.</summary>
    public const int GetKdcEnvVarsFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB GetKdcEnvVars {
      get { return requestCase_ == RequestOneofCase.GetKdcEnvVars ? (global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.GetKdcEnvVars;
      }
    }

    /// <summary>Field number for the "kdestroy" field.</summary>
    public const int KdestroyFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB Kdestroy {
      get { return requestCase_ == RequestOneofCase.Kdestroy ? (global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Kdestroy;
      }
    }

    /// <summary>Field number for the "kinit" field.</summary>
    public const int KinitFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB Kinit {
      get { return requestCase_ == RequestOneofCase.Kinit ? (global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Kinit;
      }
    }

    /// <summary>Field number for the "set_daemon_flag" field.</summary>
    public const int SetDaemonFlagFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB SetDaemonFlag {
      get { return requestCase_ == RequestOneofCase.SetDaemonFlag ? (global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SetDaemonFlag;
      }
    }

    /// <summary>Field number for the "pause_daemon" field.</summary>
    public const int PauseDaemonFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB PauseDaemon {
      get { return requestCase_ == RequestOneofCase.PauseDaemon ? (global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.PauseDaemon;
      }
    }

    /// <summary>Field number for the "resume_daemon" field.</summary>
    public const int ResumeDaemonFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB ResumeDaemon {
      get { return requestCase_ == RequestOneofCase.ResumeDaemon ? (global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ResumeDaemon;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      CreateCluster = 1,
      DestroyCluster = 2,
      StartCluster = 3,
      StopCluster = 4,
      StartDaemon = 5,
      StopDaemon = 6,
      GetMasters = 7,
      GetTservers = 8,
      GetKdcEnvVars = 9,
      Kdestroy = 10,
      Kinit = 11,
      SetDaemonFlag = 12,
      PauseDaemon = 13,
      ResumeDaemon = 14,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlShellRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlShellRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateCluster, other.CreateCluster)) return false;
      if (!object.Equals(DestroyCluster, other.DestroyCluster)) return false;
      if (!object.Equals(StartCluster, other.StartCluster)) return false;
      if (!object.Equals(StopCluster, other.StopCluster)) return false;
      if (!object.Equals(StartDaemon, other.StartDaemon)) return false;
      if (!object.Equals(StopDaemon, other.StopDaemon)) return false;
      if (!object.Equals(GetMasters, other.GetMasters)) return false;
      if (!object.Equals(GetTservers, other.GetTservers)) return false;
      if (!object.Equals(GetKdcEnvVars, other.GetKdcEnvVars)) return false;
      if (!object.Equals(Kdestroy, other.Kdestroy)) return false;
      if (!object.Equals(Kinit, other.Kinit)) return false;
      if (!object.Equals(SetDaemonFlag, other.SetDaemonFlag)) return false;
      if (!object.Equals(PauseDaemon, other.PauseDaemon)) return false;
      if (!object.Equals(ResumeDaemon, other.ResumeDaemon)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.CreateCluster) hash ^= CreateCluster.GetHashCode();
      if (requestCase_ == RequestOneofCase.DestroyCluster) hash ^= DestroyCluster.GetHashCode();
      if (requestCase_ == RequestOneofCase.StartCluster) hash ^= StartCluster.GetHashCode();
      if (requestCase_ == RequestOneofCase.StopCluster) hash ^= StopCluster.GetHashCode();
      if (requestCase_ == RequestOneofCase.StartDaemon) hash ^= StartDaemon.GetHashCode();
      if (requestCase_ == RequestOneofCase.StopDaemon) hash ^= StopDaemon.GetHashCode();
      if (requestCase_ == RequestOneofCase.GetMasters) hash ^= GetMasters.GetHashCode();
      if (requestCase_ == RequestOneofCase.GetTservers) hash ^= GetTservers.GetHashCode();
      if (requestCase_ == RequestOneofCase.GetKdcEnvVars) hash ^= GetKdcEnvVars.GetHashCode();
      if (requestCase_ == RequestOneofCase.Kdestroy) hash ^= Kdestroy.GetHashCode();
      if (requestCase_ == RequestOneofCase.Kinit) hash ^= Kinit.GetHashCode();
      if (requestCase_ == RequestOneofCase.SetDaemonFlag) hash ^= SetDaemonFlag.GetHashCode();
      if (requestCase_ == RequestOneofCase.PauseDaemon) hash ^= PauseDaemon.GetHashCode();
      if (requestCase_ == RequestOneofCase.ResumeDaemon) hash ^= ResumeDaemon.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.CreateCluster) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateCluster);
      }
      if (requestCase_ == RequestOneofCase.DestroyCluster) {
        output.WriteRawTag(18);
        output.WriteMessage(DestroyCluster);
      }
      if (requestCase_ == RequestOneofCase.StartCluster) {
        output.WriteRawTag(26);
        output.WriteMessage(StartCluster);
      }
      if (requestCase_ == RequestOneofCase.StopCluster) {
        output.WriteRawTag(34);
        output.WriteMessage(StopCluster);
      }
      if (requestCase_ == RequestOneofCase.StartDaemon) {
        output.WriteRawTag(42);
        output.WriteMessage(StartDaemon);
      }
      if (requestCase_ == RequestOneofCase.StopDaemon) {
        output.WriteRawTag(50);
        output.WriteMessage(StopDaemon);
      }
      if (requestCase_ == RequestOneofCase.GetMasters) {
        output.WriteRawTag(58);
        output.WriteMessage(GetMasters);
      }
      if (requestCase_ == RequestOneofCase.GetTservers) {
        output.WriteRawTag(66);
        output.WriteMessage(GetTservers);
      }
      if (requestCase_ == RequestOneofCase.GetKdcEnvVars) {
        output.WriteRawTag(74);
        output.WriteMessage(GetKdcEnvVars);
      }
      if (requestCase_ == RequestOneofCase.Kdestroy) {
        output.WriteRawTag(82);
        output.WriteMessage(Kdestroy);
      }
      if (requestCase_ == RequestOneofCase.Kinit) {
        output.WriteRawTag(90);
        output.WriteMessage(Kinit);
      }
      if (requestCase_ == RequestOneofCase.SetDaemonFlag) {
        output.WriteRawTag(98);
        output.WriteMessage(SetDaemonFlag);
      }
      if (requestCase_ == RequestOneofCase.PauseDaemon) {
        output.WriteRawTag(106);
        output.WriteMessage(PauseDaemon);
      }
      if (requestCase_ == RequestOneofCase.ResumeDaemon) {
        output.WriteRawTag(114);
        output.WriteMessage(ResumeDaemon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.CreateCluster) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateCluster);
      }
      if (requestCase_ == RequestOneofCase.DestroyCluster) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyCluster);
      }
      if (requestCase_ == RequestOneofCase.StartCluster) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartCluster);
      }
      if (requestCase_ == RequestOneofCase.StopCluster) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopCluster);
      }
      if (requestCase_ == RequestOneofCase.StartDaemon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDaemon);
      }
      if (requestCase_ == RequestOneofCase.StopDaemon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopDaemon);
      }
      if (requestCase_ == RequestOneofCase.GetMasters) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMasters);
      }
      if (requestCase_ == RequestOneofCase.GetTservers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetTservers);
      }
      if (requestCase_ == RequestOneofCase.GetKdcEnvVars) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetKdcEnvVars);
      }
      if (requestCase_ == RequestOneofCase.Kdestroy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kdestroy);
      }
      if (requestCase_ == RequestOneofCase.Kinit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kinit);
      }
      if (requestCase_ == RequestOneofCase.SetDaemonFlag) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetDaemonFlag);
      }
      if (requestCase_ == RequestOneofCase.PauseDaemon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PauseDaemon);
      }
      if (requestCase_ == RequestOneofCase.ResumeDaemon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResumeDaemon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlShellRequestPB other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.CreateCluster:
          if (CreateCluster == null) {
            CreateCluster = new global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB();
          }
          CreateCluster.MergeFrom(other.CreateCluster);
          break;
        case RequestOneofCase.DestroyCluster:
          if (DestroyCluster == null) {
            DestroyCluster = new global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB();
          }
          DestroyCluster.MergeFrom(other.DestroyCluster);
          break;
        case RequestOneofCase.StartCluster:
          if (StartCluster == null) {
            StartCluster = new global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB();
          }
          StartCluster.MergeFrom(other.StartCluster);
          break;
        case RequestOneofCase.StopCluster:
          if (StopCluster == null) {
            StopCluster = new global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB();
          }
          StopCluster.MergeFrom(other.StopCluster);
          break;
        case RequestOneofCase.StartDaemon:
          if (StartDaemon == null) {
            StartDaemon = new global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB();
          }
          StartDaemon.MergeFrom(other.StartDaemon);
          break;
        case RequestOneofCase.StopDaemon:
          if (StopDaemon == null) {
            StopDaemon = new global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB();
          }
          StopDaemon.MergeFrom(other.StopDaemon);
          break;
        case RequestOneofCase.GetMasters:
          if (GetMasters == null) {
            GetMasters = new global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB();
          }
          GetMasters.MergeFrom(other.GetMasters);
          break;
        case RequestOneofCase.GetTservers:
          if (GetTservers == null) {
            GetTservers = new global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB();
          }
          GetTservers.MergeFrom(other.GetTservers);
          break;
        case RequestOneofCase.GetKdcEnvVars:
          if (GetKdcEnvVars == null) {
            GetKdcEnvVars = new global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB();
          }
          GetKdcEnvVars.MergeFrom(other.GetKdcEnvVars);
          break;
        case RequestOneofCase.Kdestroy:
          if (Kdestroy == null) {
            Kdestroy = new global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB();
          }
          Kdestroy.MergeFrom(other.Kdestroy);
          break;
        case RequestOneofCase.Kinit:
          if (Kinit == null) {
            Kinit = new global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB();
          }
          Kinit.MergeFrom(other.Kinit);
          break;
        case RequestOneofCase.SetDaemonFlag:
          if (SetDaemonFlag == null) {
            SetDaemonFlag = new global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB();
          }
          SetDaemonFlag.MergeFrom(other.SetDaemonFlag);
          break;
        case RequestOneofCase.PauseDaemon:
          if (PauseDaemon == null) {
            PauseDaemon = new global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB();
          }
          PauseDaemon.MergeFrom(other.PauseDaemon);
          break;
        case RequestOneofCase.ResumeDaemon:
          if (ResumeDaemon == null) {
            ResumeDaemon = new global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB();
          }
          ResumeDaemon.MergeFrom(other.ResumeDaemon);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.CreateClusterRequestPB();
            if (requestCase_ == RequestOneofCase.CreateCluster) {
              subBuilder.MergeFrom(CreateCluster);
            }
            input.ReadMessage(subBuilder);
            CreateCluster = subBuilder;
            break;
          }
          case 18: {
            global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.DestroyClusterRequestPB();
            if (requestCase_ == RequestOneofCase.DestroyCluster) {
              subBuilder.MergeFrom(DestroyCluster);
            }
            input.ReadMessage(subBuilder);
            DestroyCluster = subBuilder;
            break;
          }
          case 26: {
            global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.StartClusterRequestPB();
            if (requestCase_ == RequestOneofCase.StartCluster) {
              subBuilder.MergeFrom(StartCluster);
            }
            input.ReadMessage(subBuilder);
            StartCluster = subBuilder;
            break;
          }
          case 34: {
            global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.StopClusterRequestPB();
            if (requestCase_ == RequestOneofCase.StopCluster) {
              subBuilder.MergeFrom(StopCluster);
            }
            input.ReadMessage(subBuilder);
            StopCluster = subBuilder;
            break;
          }
          case 42: {
            global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.StartDaemonRequestPB();
            if (requestCase_ == RequestOneofCase.StartDaemon) {
              subBuilder.MergeFrom(StartDaemon);
            }
            input.ReadMessage(subBuilder);
            StartDaemon = subBuilder;
            break;
          }
          case 50: {
            global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.StopDaemonRequestPB();
            if (requestCase_ == RequestOneofCase.StopDaemon) {
              subBuilder.MergeFrom(StopDaemon);
            }
            input.ReadMessage(subBuilder);
            StopDaemon = subBuilder;
            break;
          }
          case 58: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetMastersRequestPB();
            if (requestCase_ == RequestOneofCase.GetMasters) {
              subBuilder.MergeFrom(GetMasters);
            }
            input.ReadMessage(subBuilder);
            GetMasters = subBuilder;
            break;
          }
          case 66: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetTServersRequestPB();
            if (requestCase_ == RequestOneofCase.GetTservers) {
              subBuilder.MergeFrom(GetTservers);
            }
            input.ReadMessage(subBuilder);
            GetTservers = subBuilder;
            break;
          }
          case 74: {
            global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.GetKDCEnvVarsRequestPB();
            if (requestCase_ == RequestOneofCase.GetKdcEnvVars) {
              subBuilder.MergeFrom(GetKdcEnvVars);
            }
            input.ReadMessage(subBuilder);
            GetKdcEnvVars = subBuilder;
            break;
          }
          case 82: {
            global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.KdestroyRequestPB();
            if (requestCase_ == RequestOneofCase.Kdestroy) {
              subBuilder.MergeFrom(Kdestroy);
            }
            input.ReadMessage(subBuilder);
            Kdestroy = subBuilder;
            break;
          }
          case 90: {
            global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.KinitRequestPB();
            if (requestCase_ == RequestOneofCase.Kinit) {
              subBuilder.MergeFrom(Kinit);
            }
            input.ReadMessage(subBuilder);
            Kinit = subBuilder;
            break;
          }
          case 98: {
            global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.SetDaemonFlagRequestPB();
            if (requestCase_ == RequestOneofCase.SetDaemonFlag) {
              subBuilder.MergeFrom(SetDaemonFlag);
            }
            input.ReadMessage(subBuilder);
            SetDaemonFlag = subBuilder;
            break;
          }
          case 106: {
            global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.PauseDaemonRequestPB();
            if (requestCase_ == RequestOneofCase.PauseDaemon) {
              subBuilder.MergeFrom(PauseDaemon);
            }
            input.ReadMessage(subBuilder);
            PauseDaemon = subBuilder;
            break;
          }
          case 114: {
            global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB subBuilder = new global::Knet.Kudu.Client.Protobuf.Tools.ResumeDaemonRequestPB();
            if (requestCase_ == RequestOneofCase.ResumeDaemon) {
              subBuilder.MergeFrom(ResumeDaemon);
            }
            input.ReadMessage(subBuilder);
            ResumeDaemon = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Results of ksck, the Kudu system check.
  /// See the struct analogues of these messages in ksck_results.h.
  /// </summary>
  public sealed partial class KsckResultsPB : pb::IMessage<KsckResultsPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckResultsPB> _parser = new pb::MessageParser<KsckResultsPB>(() => new KsckResultsPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckResultsPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckResultsPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckResultsPB(KsckResultsPB other) : this() {
      _hasBits0 = other._hasBits0;
      errors_ = other.errors_.Clone();
      masterSummaries_ = other.masterSummaries_.Clone();
      tserverSummaries_ = other.tserverSummaries_.Clone();
      masterUuids_ = other.masterUuids_.Clone();
      masterConsensusConflict_ = other.masterConsensusConflict_;
      masterConsensusStates_ = other.masterConsensusStates_.Clone();
      tabletSummaries_ = other.tabletSummaries_.Clone();
      tableSummaries_ = other.tableSummaries_.Clone();
      systemTableSummaries_ = other.systemTableSummaries_.Clone();
      checksumResults_ = other.checksumResults_ != null ? other.checksumResults_.Clone() : null;
      versionSummaries_ = other.versionSummaries_.Clone();
      countSummaries_ = other.countSummaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckResultsPB Clone() {
      return new KsckResultsPB(this);
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_errors_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> errors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "master_summaries" field.</summary>
    public const int MasterSummariesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> _repeated_masterSummaries_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> masterSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> MasterSummaries {
      get { return masterSummaries_; }
    }

    /// <summary>Field number for the "tserver_summaries" field.</summary>
    public const int TserverSummariesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> _repeated_tserverSummaries_codec
        = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> tserverSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB> TserverSummaries {
      get { return tserverSummaries_; }
    }

    /// <summary>Field number for the "master_uuids" field.</summary>
    public const int MasterUuidsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_masterUuids_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> masterUuids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MasterUuids {
      get { return masterUuids_; }
    }

    /// <summary>Field number for the "master_consensus_conflict" field.</summary>
    public const int MasterConsensusConflictFieldNumber = 5;
    private readonly static bool MasterConsensusConflictDefaultValue = false;

    private bool masterConsensusConflict_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MasterConsensusConflict {
      get { if ((_hasBits0 & 1) != 0) { return masterConsensusConflict_; } else { return MasterConsensusConflictDefaultValue; } }
      set {
        _hasBits0 |= 1;
        masterConsensusConflict_ = value;
      }
    }
    /// <summary>Gets whether the "master_consensus_conflict" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMasterConsensusConflict {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "master_consensus_conflict" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMasterConsensusConflict() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "master_consensus_states" field.</summary>
    public const int MasterConsensusStatesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB> _repeated_masterConsensusStates_codec
        = pb::FieldCodec.ForMessage(50, global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB> masterConsensusStates_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB> MasterConsensusStates {
      get { return masterConsensusStates_; }
    }

    /// <summary>Field number for the "tablet_summaries" field.</summary>
    public const int TabletSummariesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB> _repeated_tabletSummaries_codec
        = pb::FieldCodec.ForMessage(58, global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB> tabletSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TabletSummaryPB> TabletSummaries {
      get { return tabletSummaries_; }
    }

    /// <summary>Field number for the "table_summaries" field.</summary>
    public const int TableSummariesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> _repeated_tableSummaries_codec
        = pb::FieldCodec.ForMessage(66, global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> tableSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> TableSummaries {
      get { return tableSummaries_; }
    }

    /// <summary>Field number for the "system_table_summaries" field.</summary>
    public const int SystemTableSummariesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> _repeated_systemTableSummaries_codec
        = pb::FieldCodec.ForMessage(98, global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> systemTableSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.TableSummaryPB> SystemTableSummaries {
      get { return systemTableSummaries_; }
    }

    /// <summary>Field number for the "checksum_results" field.</summary>
    public const int ChecksumResultsFieldNumber = 9;
    private global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB checksumResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB ChecksumResults {
      get { return checksumResults_; }
      set {
        checksumResults_ = value;
      }
    }

    /// <summary>Field number for the "version_summaries" field.</summary>
    public const int VersionSummariesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB> _repeated_versionSummaries_codec
        = pb::FieldCodec.ForMessage(82, global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB> versionSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckVersionSummaryPB> VersionSummaries {
      get { return versionSummaries_; }
    }

    /// <summary>Field number for the "count_summaries" field.</summary>
    public const int CountSummariesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB> _repeated_countSummaries_codec
        = pb::FieldCodec.ForMessage(90, global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB> countSummaries_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckCountSummaryPB> CountSummaries {
      get { return countSummaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckResultsPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckResultsPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!errors_.Equals(other.errors_)) return false;
      if(!masterSummaries_.Equals(other.masterSummaries_)) return false;
      if(!tserverSummaries_.Equals(other.tserverSummaries_)) return false;
      if(!masterUuids_.Equals(other.masterUuids_)) return false;
      if (MasterConsensusConflict != other.MasterConsensusConflict) return false;
      if(!masterConsensusStates_.Equals(other.masterConsensusStates_)) return false;
      if(!tabletSummaries_.Equals(other.tabletSummaries_)) return false;
      if(!tableSummaries_.Equals(other.tableSummaries_)) return false;
      if(!systemTableSummaries_.Equals(other.systemTableSummaries_)) return false;
      if (!object.Equals(ChecksumResults, other.ChecksumResults)) return false;
      if(!versionSummaries_.Equals(other.versionSummaries_)) return false;
      if(!countSummaries_.Equals(other.countSummaries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= errors_.GetHashCode();
      hash ^= masterSummaries_.GetHashCode();
      hash ^= tserverSummaries_.GetHashCode();
      hash ^= masterUuids_.GetHashCode();
      if (HasMasterConsensusConflict) hash ^= MasterConsensusConflict.GetHashCode();
      hash ^= masterConsensusStates_.GetHashCode();
      hash ^= tabletSummaries_.GetHashCode();
      hash ^= tableSummaries_.GetHashCode();
      hash ^= systemTableSummaries_.GetHashCode();
      if (checksumResults_ != null) hash ^= ChecksumResults.GetHashCode();
      hash ^= versionSummaries_.GetHashCode();
      hash ^= countSummaries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      errors_.WriteTo(ref output, _repeated_errors_codec);
      masterSummaries_.WriteTo(ref output, _repeated_masterSummaries_codec);
      tserverSummaries_.WriteTo(ref output, _repeated_tserverSummaries_codec);
      masterUuids_.WriteTo(ref output, _repeated_masterUuids_codec);
      if (HasMasterConsensusConflict) {
        output.WriteRawTag(40);
        output.WriteBool(MasterConsensusConflict);
      }
      masterConsensusStates_.WriteTo(ref output, _repeated_masterConsensusStates_codec);
      tabletSummaries_.WriteTo(ref output, _repeated_tabletSummaries_codec);
      tableSummaries_.WriteTo(ref output, _repeated_tableSummaries_codec);
      if (checksumResults_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ChecksumResults);
      }
      versionSummaries_.WriteTo(ref output, _repeated_versionSummaries_codec);
      countSummaries_.WriteTo(ref output, _repeated_countSummaries_codec);
      systemTableSummaries_.WriteTo(ref output, _repeated_systemTableSummaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += errors_.CalculateSize(_repeated_errors_codec);
      size += masterSummaries_.CalculateSize(_repeated_masterSummaries_codec);
      size += tserverSummaries_.CalculateSize(_repeated_tserverSummaries_codec);
      size += masterUuids_.CalculateSize(_repeated_masterUuids_codec);
      if (HasMasterConsensusConflict) {
        size += 1 + 1;
      }
      size += masterConsensusStates_.CalculateSize(_repeated_masterConsensusStates_codec);
      size += tabletSummaries_.CalculateSize(_repeated_tabletSummaries_codec);
      size += tableSummaries_.CalculateSize(_repeated_tableSummaries_codec);
      size += systemTableSummaries_.CalculateSize(_repeated_systemTableSummaries_codec);
      if (checksumResults_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChecksumResults);
      }
      size += versionSummaries_.CalculateSize(_repeated_versionSummaries_codec);
      size += countSummaries_.CalculateSize(_repeated_countSummaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckResultsPB other) {
      if (other == null) {
        return;
      }
      errors_.Add(other.errors_);
      masterSummaries_.Add(other.masterSummaries_);
      tserverSummaries_.Add(other.tserverSummaries_);
      masterUuids_.Add(other.masterUuids_);
      if (other.HasMasterConsensusConflict) {
        MasterConsensusConflict = other.MasterConsensusConflict;
      }
      masterConsensusStates_.Add(other.masterConsensusStates_);
      tabletSummaries_.Add(other.tabletSummaries_);
      tableSummaries_.Add(other.tableSummaries_);
      systemTableSummaries_.Add(other.systemTableSummaries_);
      if (other.checksumResults_ != null) {
        if (checksumResults_ == null) {
          ChecksumResults = new global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB();
        }
        ChecksumResults.MergeFrom(other.ChecksumResults);
      }
      versionSummaries_.Add(other.versionSummaries_);
      countSummaries_.Add(other.countSummaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
          case 18: {
            masterSummaries_.AddEntriesFrom(ref input, _repeated_masterSummaries_codec);
            break;
          }
          case 26: {
            tserverSummaries_.AddEntriesFrom(ref input, _repeated_tserverSummaries_codec);
            break;
          }
          case 34: {
            masterUuids_.AddEntriesFrom(ref input, _repeated_masterUuids_codec);
            break;
          }
          case 40: {
            MasterConsensusConflict = input.ReadBool();
            break;
          }
          case 50: {
            masterConsensusStates_.AddEntriesFrom(ref input, _repeated_masterConsensusStates_codec);
            break;
          }
          case 58: {
            tabletSummaries_.AddEntriesFrom(ref input, _repeated_tabletSummaries_codec);
            break;
          }
          case 66: {
            tableSummaries_.AddEntriesFrom(ref input, _repeated_tableSummaries_codec);
            break;
          }
          case 74: {
            if (checksumResults_ == null) {
              ChecksumResults = new global::Knet.Kudu.Client.Protobuf.Tools.KsckChecksumResultsPB();
            }
            input.ReadMessage(ChecksumResults);
            break;
          }
          case 82: {
            versionSummaries_.AddEntriesFrom(ref input, _repeated_versionSummaries_codec);
            break;
          }
          case 90: {
            countSummaries_.AddEntriesFrom(ref input, _repeated_countSummaries_codec);
            break;
          }
          case 98: {
            systemTableSummaries_.AddEntriesFrom(ref input, _repeated_systemTableSummaries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerHealthSummaryPB : pb::IMessage<ServerHealthSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ServerHealthSummaryPB> _parser = new pb::MessageParser<ServerHealthSummaryPB>(() => new ServerHealthSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerHealthSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthSummaryPB(ServerHealthSummaryPB other) : this() {
      _hasBits0 = other._hasBits0;
      uuid_ = other.uuid_;
      address_ = other.address_;
      health_ = other.health_;
      status_ = other.status_;
      version_ = other.version_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthSummaryPB Clone() {
      return new ServerHealthSummaryPB(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static string UuidDefaultValue = "";

    private string uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private readonly static string AddressDefaultValue = "";

    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_ ?? AddressDefaultValue; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddress {
      get { return address_ != null; }
    }
    /// <summary>Clears the value of the "address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddress() {
      address_ = null;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth HealthDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth Health {
      get { if ((_hasBits0 & 1) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 6;
    private readonly static string LocationDefaultValue = "";

    private string location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_ ?? LocationDefaultValue; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocation {
      get { return location_ != null; }
    }
    /// <summary>Clears the value of the "location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocation() {
      location_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerHealthSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerHealthSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Address != other.Address) return false;
      if (Health != other.Health) return false;
      if (Status != other.Status) return false;
      if (Version != other.Version) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (HasAddress) hash ^= Address.GetHashCode();
      if (HasHealth) hash ^= Health.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasLocation) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (HasAddress) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (HasHealth) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (HasStatus) {
        output.WriteRawTag(34);
        output.WriteString(Status);
      }
      if (HasVersion) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (HasLocation) {
        output.WriteRawTag(50);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (HasAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (HasHealth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (HasLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerHealthSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      if (other.HasAddress) {
        Address = other.Address;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasLocation) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 24: {
            Health = (global::Knet.Kudu.Client.Protobuf.Tools.ServerHealthSummaryPB.Types.ServerHealth) input.ReadEnum();
            break;
          }
          case 34: {
            Status = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ServerHealthSummaryPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ServerHealth {
        [pbr::OriginalName("UNKNOWN")] Unknown = 999,
        [pbr::OriginalName("HEALTHY")] Healthy = 0,
        [pbr::OriginalName("UNAVAILABLE")] Unavailable = 1,
        [pbr::OriginalName("WRONG_SERVER_UUID")] WrongServerUuid = 2,
        [pbr::OriginalName("UNAUTHORIZED")] Unauthorized = 3,
      }

    }
    #endregion

  }

  public sealed partial class ConsensusStatePB : pb::IMessage<ConsensusStatePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ConsensusStatePB> _parser = new pb::MessageParser<ConsensusStatePB>(() => new ConsensusStatePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsensusStatePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusStatePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusStatePB(ConsensusStatePB other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      term_ = other.term_;
      opidIndex_ = other.opidIndex_;
      leaderUuid_ = other.leaderUuid_;
      voterUuids_ = other.voterUuids_.Clone();
      nonVoterUuids_ = other.nonVoterUuids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusStatePB Clone() {
      return new ConsensusStatePB(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType TypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "term" field.</summary>
    public const int TermFieldNumber = 2;
    private readonly static long TermDefaultValue = 0L;

    private long term_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Term {
      get { if ((_hasBits0 & 2) != 0) { return term_; } else { return TermDefaultValue; } }
      set {
        _hasBits0 |= 2;
        term_ = value;
      }
    }
    /// <summary>Gets whether the "term" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTerm {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "term" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTerm() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "opid_index" field.</summary>
    public const int OpidIndexFieldNumber = 3;
    private readonly static long OpidIndexDefaultValue = 0L;

    private long opidIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OpidIndex {
      get { if ((_hasBits0 & 4) != 0) { return opidIndex_; } else { return OpidIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        opidIndex_ = value;
      }
    }
    /// <summary>Gets whether the "opid_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpidIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "opid_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpidIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leader_uuid" field.</summary>
    public const int LeaderUuidFieldNumber = 4;
    private readonly static string LeaderUuidDefaultValue = "";

    private string leaderUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LeaderUuid {
      get { return leaderUuid_ ?? LeaderUuidDefaultValue; }
      set {
        leaderUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "leader_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaderUuid {
      get { return leaderUuid_ != null; }
    }
    /// <summary>Clears the value of the "leader_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaderUuid() {
      leaderUuid_ = null;
    }

    /// <summary>Field number for the "voter_uuids" field.</summary>
    public const int VoterUuidsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_voterUuids_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> voterUuids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> VoterUuids {
      get { return voterUuids_; }
    }

    /// <summary>Field number for the "non_voter_uuids" field.</summary>
    public const int NonVoterUuidsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_nonVoterUuids_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> nonVoterUuids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> NonVoterUuids {
      get { return nonVoterUuids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsensusStatePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsensusStatePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Term != other.Term) return false;
      if (OpidIndex != other.OpidIndex) return false;
      if (LeaderUuid != other.LeaderUuid) return false;
      if(!voterUuids_.Equals(other.voterUuids_)) return false;
      if(!nonVoterUuids_.Equals(other.nonVoterUuids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasTerm) hash ^= Term.GetHashCode();
      if (HasOpidIndex) hash ^= OpidIndex.GetHashCode();
      if (HasLeaderUuid) hash ^= LeaderUuid.GetHashCode();
      hash ^= voterUuids_.GetHashCode();
      hash ^= nonVoterUuids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasTerm) {
        output.WriteRawTag(16);
        output.WriteInt64(Term);
      }
      if (HasOpidIndex) {
        output.WriteRawTag(24);
        output.WriteInt64(OpidIndex);
      }
      if (HasLeaderUuid) {
        output.WriteRawTag(34);
        output.WriteString(LeaderUuid);
      }
      voterUuids_.WriteTo(ref output, _repeated_voterUuids_codec);
      nonVoterUuids_.WriteTo(ref output, _repeated_nonVoterUuids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasTerm) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Term);
      }
      if (HasOpidIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OpidIndex);
      }
      if (HasLeaderUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderUuid);
      }
      size += voterUuids_.CalculateSize(_repeated_voterUuids_codec);
      size += nonVoterUuids_.CalculateSize(_repeated_nonVoterUuids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsensusStatePB other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTerm) {
        Term = other.Term;
      }
      if (other.HasOpidIndex) {
        OpidIndex = other.OpidIndex;
      }
      if (other.HasLeaderUuid) {
        LeaderUuid = other.LeaderUuid;
      }
      voterUuids_.Add(other.voterUuids_);
      nonVoterUuids_.Add(other.nonVoterUuids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB.Types.ConfigType) input.ReadEnum();
            break;
          }
          case 16: {
            Term = input.ReadInt64();
            break;
          }
          case 24: {
            OpidIndex = input.ReadInt64();
            break;
          }
          case 34: {
            LeaderUuid = input.ReadString();
            break;
          }
          case 42: {
            voterUuids_.AddEntriesFrom(ref input, _repeated_voterUuids_codec);
            break;
          }
          case 50: {
            nonVoterUuids_.AddEntriesFrom(ref input, _repeated_nonVoterUuids_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConsensusStatePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ConfigType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 999,
        [pbr::OriginalName("MASTER")] Master = 0,
        [pbr::OriginalName("COMMITTED")] Committed = 1,
        [pbr::OriginalName("PENDING")] Pending = 2,
      }

    }
    #endregion

  }

  public sealed partial class TabletSummaryPB : pb::IMessage<TabletSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletSummaryPB> _parser = new pb::MessageParser<TabletSummaryPB>(() => new TabletSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletSummaryPB(TabletSummaryPB other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      tableId_ = other.tableId_;
      tableName_ = other.tableName_;
      health_ = other.health_;
      status_ = other.status_;
      masterCstate_ = other.masterCstate_ != null ? other.masterCstate_.Clone() : null;
      replicas_ = other.replicas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletSummaryPB Clone() {
      return new TabletSummaryPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private readonly static string TableIdDefaultValue = "";

    private string tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 4;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB HealthDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB Health {
      get { if ((_hasBits0 & 1) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "master_cstate" field.</summary>
    public const int MasterCstateFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB masterCstate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB MasterCstate {
      get { return masterCstate_; }
      set {
        masterCstate_ = value;
      }
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB> _repeated_replicas_codec
        = pb::FieldCodec.ForMessage(58, global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB> replicas_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ReplicaSummaryPB> Replicas {
      get { return replicas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TableId != other.TableId) return false;
      if (TableName != other.TableName) return false;
      if (Health != other.Health) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(MasterCstate, other.MasterCstate)) return false;
      if(!replicas_.Equals(other.replicas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasHealth) hash ^= Health.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (masterCstate_ != null) hash ^= MasterCstate.GetHashCode();
      hash ^= replicas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasTableId) {
        output.WriteRawTag(18);
        output.WriteString(TableId);
      }
      if (HasTableName) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasHealth) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Health);
      }
      if (HasStatus) {
        output.WriteRawTag(42);
        output.WriteString(Status);
      }
      if (masterCstate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MasterCstate);
      }
      replicas_.WriteTo(ref output, _repeated_replicas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableId);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasHealth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (masterCstate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MasterCstate);
      }
      size += replicas_.CalculateSize(_repeated_replicas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.masterCstate_ != null) {
        if (masterCstate_ == null) {
          MasterCstate = new global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB();
        }
        MasterCstate.MergeFrom(other.MasterCstate);
      }
      replicas_.Add(other.replicas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            TableId = input.ReadString();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 32: {
            Health = (global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB) input.ReadEnum();
            break;
          }
          case 42: {
            Status = input.ReadString();
            break;
          }
          case 50: {
            if (masterCstate_ == null) {
              MasterCstate = new global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB();
            }
            input.ReadMessage(MasterCstate);
            break;
          }
          case 58: {
            replicas_.AddEntriesFrom(ref input, _repeated_replicas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplicaSummaryPB : pb::IMessage<ReplicaSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReplicaSummaryPB> _parser = new pb::MessageParser<ReplicaSummaryPB>(() => new ReplicaSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReplicaSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaSummaryPB(ReplicaSummaryPB other) : this() {
      _hasBits0 = other._hasBits0;
      tsUuid_ = other.tsUuid_;
      tsAddress_ = other.tsAddress_;
      tsHealthy_ = other.tsHealthy_;
      isLeader_ = other.isLeader_;
      isVoter_ = other.isVoter_;
      state_ = other.state_;
      statusPb_ = other.statusPb_ != null ? other.statusPb_.Clone() : null;
      consensusState_ = other.consensusState_ != null ? other.consensusState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaSummaryPB Clone() {
      return new ReplicaSummaryPB(this);
    }

    /// <summary>Field number for the "ts_uuid" field.</summary>
    public const int TsUuidFieldNumber = 1;
    private readonly static string TsUuidDefaultValue = "";

    private string tsUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TsUuid {
      get { return tsUuid_ ?? TsUuidDefaultValue; }
      set {
        tsUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ts_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTsUuid {
      get { return tsUuid_ != null; }
    }
    /// <summary>Clears the value of the "ts_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTsUuid() {
      tsUuid_ = null;
    }

    /// <summary>Field number for the "ts_address" field.</summary>
    public const int TsAddressFieldNumber = 2;
    private readonly static string TsAddressDefaultValue = "";

    private string tsAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TsAddress {
      get { return tsAddress_ ?? TsAddressDefaultValue; }
      set {
        tsAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ts_address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTsAddress {
      get { return tsAddress_ != null; }
    }
    /// <summary>Clears the value of the "ts_address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTsAddress() {
      tsAddress_ = null;
    }

    /// <summary>Field number for the "ts_healthy" field.</summary>
    public const int TsHealthyFieldNumber = 3;
    private readonly static bool TsHealthyDefaultValue = false;

    private bool tsHealthy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TsHealthy {
      get { if ((_hasBits0 & 1) != 0) { return tsHealthy_; } else { return TsHealthyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tsHealthy_ = value;
      }
    }
    /// <summary>Gets whether the "ts_healthy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTsHealthy {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ts_healthy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTsHealthy() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_leader" field.</summary>
    public const int IsLeaderFieldNumber = 4;
    private readonly static bool IsLeaderDefaultValue = false;

    private bool isLeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLeader {
      get { if ((_hasBits0 & 2) != 0) { return isLeader_; } else { return IsLeaderDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isLeader_ = value;
      }
    }
    /// <summary>Gets whether the "is_leader" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLeader {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_leader" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLeader() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_voter" field.</summary>
    public const int IsVoterFieldNumber = 5;
    private readonly static bool IsVoterDefaultValue = false;

    private bool isVoter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsVoter {
      get { if ((_hasBits0 & 4) != 0) { return isVoter_; } else { return IsVoterDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isVoter_ = value;
      }
    }
    /// <summary>Gets whether the "is_voter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsVoter {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_voter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsVoter() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB State {
      get { if ((_hasBits0 & 8) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "status_pb" field.</summary>
    public const int StatusPbFieldNumber = 7;
    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB statusPb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB StatusPb {
      get { return statusPb_; }
      set {
        statusPb_ = value;
      }
    }

    /// <summary>Field number for the "consensus_state" field.</summary>
    public const int ConsensusStateFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB consensusState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB ConsensusState {
      get { return consensusState_; }
      set {
        consensusState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReplicaSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReplicaSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TsUuid != other.TsUuid) return false;
      if (TsAddress != other.TsAddress) return false;
      if (TsHealthy != other.TsHealthy) return false;
      if (IsLeader != other.IsLeader) return false;
      if (IsVoter != other.IsVoter) return false;
      if (State != other.State) return false;
      if (!object.Equals(StatusPb, other.StatusPb)) return false;
      if (!object.Equals(ConsensusState, other.ConsensusState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTsUuid) hash ^= TsUuid.GetHashCode();
      if (HasTsAddress) hash ^= TsAddress.GetHashCode();
      if (HasTsHealthy) hash ^= TsHealthy.GetHashCode();
      if (HasIsLeader) hash ^= IsLeader.GetHashCode();
      if (HasIsVoter) hash ^= IsVoter.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (statusPb_ != null) hash ^= StatusPb.GetHashCode();
      if (consensusState_ != null) hash ^= ConsensusState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTsUuid) {
        output.WriteRawTag(10);
        output.WriteString(TsUuid);
      }
      if (HasTsAddress) {
        output.WriteRawTag(18);
        output.WriteString(TsAddress);
      }
      if (HasTsHealthy) {
        output.WriteRawTag(24);
        output.WriteBool(TsHealthy);
      }
      if (HasIsLeader) {
        output.WriteRawTag(32);
        output.WriteBool(IsLeader);
      }
      if (HasIsVoter) {
        output.WriteRawTag(40);
        output.WriteBool(IsVoter);
      }
      if (HasState) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (statusPb_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StatusPb);
      }
      if (consensusState_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ConsensusState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTsUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TsUuid);
      }
      if (HasTsAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TsAddress);
      }
      if (HasTsHealthy) {
        size += 1 + 1;
      }
      if (HasIsLeader) {
        size += 1 + 1;
      }
      if (HasIsVoter) {
        size += 1 + 1;
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (statusPb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusPb);
      }
      if (consensusState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsensusState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReplicaSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTsUuid) {
        TsUuid = other.TsUuid;
      }
      if (other.HasTsAddress) {
        TsAddress = other.TsAddress;
      }
      if (other.HasTsHealthy) {
        TsHealthy = other.TsHealthy;
      }
      if (other.HasIsLeader) {
        IsLeader = other.IsLeader;
      }
      if (other.HasIsVoter) {
        IsVoter = other.IsVoter;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.statusPb_ != null) {
        if (statusPb_ == null) {
          StatusPb = new global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB();
        }
        StatusPb.MergeFrom(other.StatusPb);
      }
      if (other.consensusState_ != null) {
        if (consensusState_ == null) {
          ConsensusState = new global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB();
        }
        ConsensusState.MergeFrom(other.ConsensusState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TsUuid = input.ReadString();
            break;
          }
          case 18: {
            TsAddress = input.ReadString();
            break;
          }
          case 24: {
            TsHealthy = input.ReadBool();
            break;
          }
          case 32: {
            IsLeader = input.ReadBool();
            break;
          }
          case 40: {
            IsVoter = input.ReadBool();
            break;
          }
          case 48: {
            State = (global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB) input.ReadEnum();
            break;
          }
          case 58: {
            if (statusPb_ == null) {
              StatusPb = new global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB();
            }
            input.ReadMessage(StatusPb);
            break;
          }
          case 66: {
            if (consensusState_ == null) {
              ConsensusState = new global::Knet.Kudu.Client.Protobuf.Tools.ConsensusStatePB();
            }
            input.ReadMessage(ConsensusState);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableSummaryPB : pb::IMessage<TableSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TableSummaryPB> _parser = new pb::MessageParser<TableSummaryPB>(() => new TableSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TableSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSummaryPB(TableSummaryPB other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      health_ = other.health_;
      replicationFactor_ = other.replicationFactor_;
      totalTablets_ = other.totalTablets_;
      healthyTablets_ = other.healthyTablets_;
      recoveringTablets_ = other.recoveringTablets_;
      underreplicatedTablets_ = other.underreplicatedTablets_;
      unavailableTablets_ = other.unavailableTablets_;
      consensusMismatchTablets_ = other.consensusMismatchTablets_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSummaryPB Clone() {
      return new TableSummaryPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB HealthDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB Health {
      get { if ((_hasBits0 & 1) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "replication_factor" field.</summary>
    public const int ReplicationFactorFieldNumber = 4;
    private readonly static int ReplicationFactorDefaultValue = 0;

    private int replicationFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReplicationFactor {
      get { if ((_hasBits0 & 2) != 0) { return replicationFactor_; } else { return ReplicationFactorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        replicationFactor_ = value;
      }
    }
    /// <summary>Gets whether the "replication_factor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplicationFactor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "replication_factor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplicationFactor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_tablets" field.</summary>
    public const int TotalTabletsFieldNumber = 5;
    private readonly static int TotalTabletsDefaultValue = 0;

    private int totalTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalTablets {
      get { if ((_hasBits0 & 4) != 0) { return totalTablets_; } else { return TotalTabletsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalTablets_ = value;
      }
    }
    /// <summary>Gets whether the "total_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalTablets {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalTablets() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "healthy_tablets" field.</summary>
    public const int HealthyTabletsFieldNumber = 6;
    private readonly static int HealthyTabletsDefaultValue = 0;

    private int healthyTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HealthyTablets {
      get { if ((_hasBits0 & 8) != 0) { return healthyTablets_; } else { return HealthyTabletsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        healthyTablets_ = value;
      }
    }
    /// <summary>Gets whether the "healthy_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealthyTablets {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "healthy_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealthyTablets() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "recovering_tablets" field.</summary>
    public const int RecoveringTabletsFieldNumber = 7;
    private readonly static int RecoveringTabletsDefaultValue = 0;

    private int recoveringTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoveringTablets {
      get { if ((_hasBits0 & 16) != 0) { return recoveringTablets_; } else { return RecoveringTabletsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        recoveringTablets_ = value;
      }
    }
    /// <summary>Gets whether the "recovering_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecoveringTablets {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "recovering_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecoveringTablets() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "underreplicated_tablets" field.</summary>
    public const int UnderreplicatedTabletsFieldNumber = 8;
    private readonly static int UnderreplicatedTabletsDefaultValue = 0;

    private int underreplicatedTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnderreplicatedTablets {
      get { if ((_hasBits0 & 32) != 0) { return underreplicatedTablets_; } else { return UnderreplicatedTabletsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        underreplicatedTablets_ = value;
      }
    }
    /// <summary>Gets whether the "underreplicated_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnderreplicatedTablets {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "underreplicated_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnderreplicatedTablets() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "unavailable_tablets" field.</summary>
    public const int UnavailableTabletsFieldNumber = 9;
    private readonly static int UnavailableTabletsDefaultValue = 0;

    private int unavailableTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnavailableTablets {
      get { if ((_hasBits0 & 64) != 0) { return unavailableTablets_; } else { return UnavailableTabletsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        unavailableTablets_ = value;
      }
    }
    /// <summary>Gets whether the "unavailable_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnavailableTablets {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "unavailable_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnavailableTablets() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "consensus_mismatch_tablets" field.</summary>
    public const int ConsensusMismatchTabletsFieldNumber = 10;
    private readonly static int ConsensusMismatchTabletsDefaultValue = 0;

    private int consensusMismatchTablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConsensusMismatchTablets {
      get { if ((_hasBits0 & 128) != 0) { return consensusMismatchTablets_; } else { return ConsensusMismatchTabletsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        consensusMismatchTablets_ = value;
      }
    }
    /// <summary>Gets whether the "consensus_mismatch_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConsensusMismatchTablets {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "consensus_mismatch_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConsensusMismatchTablets() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TableSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TableSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Health != other.Health) return false;
      if (ReplicationFactor != other.ReplicationFactor) return false;
      if (TotalTablets != other.TotalTablets) return false;
      if (HealthyTablets != other.HealthyTablets) return false;
      if (RecoveringTablets != other.RecoveringTablets) return false;
      if (UnderreplicatedTablets != other.UnderreplicatedTablets) return false;
      if (UnavailableTablets != other.UnavailableTablets) return false;
      if (ConsensusMismatchTablets != other.ConsensusMismatchTablets) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasHealth) hash ^= Health.GetHashCode();
      if (HasReplicationFactor) hash ^= ReplicationFactor.GetHashCode();
      if (HasTotalTablets) hash ^= TotalTablets.GetHashCode();
      if (HasHealthyTablets) hash ^= HealthyTablets.GetHashCode();
      if (HasRecoveringTablets) hash ^= RecoveringTablets.GetHashCode();
      if (HasUnderreplicatedTablets) hash ^= UnderreplicatedTablets.GetHashCode();
      if (HasUnavailableTablets) hash ^= UnavailableTablets.GetHashCode();
      if (HasConsensusMismatchTablets) hash ^= ConsensusMismatchTablets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasHealth) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (HasReplicationFactor) {
        output.WriteRawTag(32);
        output.WriteInt32(ReplicationFactor);
      }
      if (HasTotalTablets) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalTablets);
      }
      if (HasHealthyTablets) {
        output.WriteRawTag(48);
        output.WriteInt32(HealthyTablets);
      }
      if (HasRecoveringTablets) {
        output.WriteRawTag(56);
        output.WriteInt32(RecoveringTablets);
      }
      if (HasUnderreplicatedTablets) {
        output.WriteRawTag(64);
        output.WriteInt32(UnderreplicatedTablets);
      }
      if (HasUnavailableTablets) {
        output.WriteRawTag(72);
        output.WriteInt32(UnavailableTablets);
      }
      if (HasConsensusMismatchTablets) {
        output.WriteRawTag(80);
        output.WriteInt32(ConsensusMismatchTablets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasHealth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (HasReplicationFactor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplicationFactor);
      }
      if (HasTotalTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalTablets);
      }
      if (HasHealthyTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HealthyTablets);
      }
      if (HasRecoveringTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecoveringTablets);
      }
      if (HasUnderreplicatedTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnderreplicatedTablets);
      }
      if (HasUnavailableTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnavailableTablets);
      }
      if (HasConsensusMismatchTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConsensusMismatchTablets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TableSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasReplicationFactor) {
        ReplicationFactor = other.ReplicationFactor;
      }
      if (other.HasTotalTablets) {
        TotalTablets = other.TotalTablets;
      }
      if (other.HasHealthyTablets) {
        HealthyTablets = other.HealthyTablets;
      }
      if (other.HasRecoveringTablets) {
        RecoveringTablets = other.RecoveringTablets;
      }
      if (other.HasUnderreplicatedTablets) {
        UnderreplicatedTablets = other.UnderreplicatedTablets;
      }
      if (other.HasUnavailableTablets) {
        UnavailableTablets = other.UnavailableTablets;
      }
      if (other.HasConsensusMismatchTablets) {
        ConsensusMismatchTablets = other.ConsensusMismatchTablets;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Health = (global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletHealthPB) input.ReadEnum();
            break;
          }
          case 32: {
            ReplicationFactor = input.ReadInt32();
            break;
          }
          case 40: {
            TotalTablets = input.ReadInt32();
            break;
          }
          case 48: {
            HealthyTablets = input.ReadInt32();
            break;
          }
          case 56: {
            RecoveringTablets = input.ReadInt32();
            break;
          }
          case 64: {
            UnderreplicatedTablets = input.ReadInt32();
            break;
          }
          case 72: {
            UnavailableTablets = input.ReadInt32();
            break;
          }
          case 80: {
            ConsensusMismatchTablets = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckChecksumResultsPB : pb::IMessage<KsckChecksumResultsPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckChecksumResultsPB> _parser = new pb::MessageParser<KsckChecksumResultsPB>(() => new KsckChecksumResultsPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckChecksumResultsPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckChecksumResultsPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckChecksumResultsPB(KsckChecksumResultsPB other) : this() {
      _hasBits0 = other._hasBits0;
      snapshotTimestamp_ = other.snapshotTimestamp_;
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckChecksumResultsPB Clone() {
      return new KsckChecksumResultsPB(this);
    }

    /// <summary>Field number for the "snapshot_timestamp" field.</summary>
    public const int SnapshotTimestampFieldNumber = 1;
    private readonly static ulong SnapshotTimestampDefaultValue = 0UL;

    private ulong snapshotTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SnapshotTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return snapshotTimestamp_; } else { return SnapshotTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        snapshotTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "snapshot_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshotTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "snapshot_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshotTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB> tables_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTableChecksumPB> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckChecksumResultsPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckChecksumResultsPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnapshotTimestamp != other.SnapshotTimestamp) return false;
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnapshotTimestamp) hash ^= SnapshotTimestamp.GetHashCode();
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSnapshotTimestamp) {
        output.WriteRawTag(9);
        output.WriteFixed64(SnapshotTimestamp);
      }
      tables_.WriteTo(ref output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSnapshotTimestamp) {
        size += 1 + 8;
      }
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckChecksumResultsPB other) {
      if (other == null) {
        return;
      }
      if (other.HasSnapshotTimestamp) {
        SnapshotTimestamp = other.SnapshotTimestamp;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SnapshotTimestamp = input.ReadFixed64();
            break;
          }
          case 18: {
            tables_.AddEntriesFrom(ref input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckTableChecksumPB : pb::IMessage<KsckTableChecksumPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckTableChecksumPB> _parser = new pb::MessageParser<KsckTableChecksumPB>(() => new KsckTableChecksumPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckTableChecksumPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTableChecksumPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTableChecksumPB(KsckTableChecksumPB other) : this() {
      name_ = other.name_;
      tablets_ = other.tablets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTableChecksumPB Clone() {
      return new KsckTableChecksumPB(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "tablets" field.</summary>
    public const int TabletsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB> _repeated_tablets_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB> tablets_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckTabletChecksumPB> Tablets {
      get { return tablets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckTableChecksumPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckTableChecksumPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!tablets_.Equals(other.tablets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= tablets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      tablets_.WriteTo(ref output, _repeated_tablets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += tablets_.CalculateSize(_repeated_tablets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckTableChecksumPB other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      tablets_.Add(other.tablets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            tablets_.AddEntriesFrom(ref input, _repeated_tablets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckTabletChecksumPB : pb::IMessage<KsckTabletChecksumPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckTabletChecksumPB> _parser = new pb::MessageParser<KsckTabletChecksumPB>(() => new KsckTabletChecksumPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckTabletChecksumPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTabletChecksumPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTabletChecksumPB(KsckTabletChecksumPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      mismatch_ = other.mismatch_;
      replicaChecksums_ = other.replicaChecksums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckTabletChecksumPB Clone() {
      return new KsckTabletChecksumPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static string TabletIdDefaultValue = "";

    private string tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "mismatch" field.</summary>
    public const int MismatchFieldNumber = 2;
    private readonly static bool MismatchDefaultValue = false;

    private bool mismatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mismatch {
      get { if ((_hasBits0 & 1) != 0) { return mismatch_; } else { return MismatchDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mismatch_ = value;
      }
    }
    /// <summary>Gets whether the "mismatch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMismatch {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mismatch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMismatch() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "replica_checksums" field.</summary>
    public const int ReplicaChecksumsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB> _repeated_replicaChecksums_codec
        = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB> replicaChecksums_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.KsckReplicaChecksumPB> ReplicaChecksums {
      get { return replicaChecksums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckTabletChecksumPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckTabletChecksumPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (Mismatch != other.Mismatch) return false;
      if(!replicaChecksums_.Equals(other.replicaChecksums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasMismatch) hash ^= Mismatch.GetHashCode();
      hash ^= replicaChecksums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteString(TabletId);
      }
      if (HasMismatch) {
        output.WriteRawTag(16);
        output.WriteBool(Mismatch);
      }
      replicaChecksums_.WriteTo(ref output, _repeated_replicaChecksums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabletId);
      }
      if (HasMismatch) {
        size += 1 + 1;
      }
      size += replicaChecksums_.CalculateSize(_repeated_replicaChecksums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckTabletChecksumPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasMismatch) {
        Mismatch = other.Mismatch;
      }
      replicaChecksums_.Add(other.replicaChecksums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadString();
            break;
          }
          case 16: {
            Mismatch = input.ReadBool();
            break;
          }
          case 26: {
            replicaChecksums_.AddEntriesFrom(ref input, _repeated_replicaChecksums_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckReplicaChecksumPB : pb::IMessage<KsckReplicaChecksumPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckReplicaChecksumPB> _parser = new pb::MessageParser<KsckReplicaChecksumPB>(() => new KsckReplicaChecksumPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckReplicaChecksumPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckReplicaChecksumPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckReplicaChecksumPB(KsckReplicaChecksumPB other) : this() {
      _hasBits0 = other._hasBits0;
      tsAddress_ = other.tsAddress_;
      tsUuid_ = other.tsUuid_;
      status_ = other.status_;
      checksum_ = other.checksum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckReplicaChecksumPB Clone() {
      return new KsckReplicaChecksumPB(this);
    }

    /// <summary>Field number for the "ts_address" field.</summary>
    public const int TsAddressFieldNumber = 1;
    private readonly static string TsAddressDefaultValue = "";

    private string tsAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TsAddress {
      get { return tsAddress_ ?? TsAddressDefaultValue; }
      set {
        tsAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ts_address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTsAddress {
      get { return tsAddress_ != null; }
    }
    /// <summary>Clears the value of the "ts_address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTsAddress() {
      tsAddress_ = null;
    }

    /// <summary>Field number for the "ts_uuid" field.</summary>
    public const int TsUuidFieldNumber = 2;
    private readonly static string TsUuidDefaultValue = "";

    private string tsUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TsUuid {
      get { return tsUuid_ ?? TsUuidDefaultValue; }
      set {
        tsUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ts_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTsUuid {
      get { return tsUuid_ != null; }
    }
    /// <summary>Clears the value of the "ts_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTsUuid() {
      tsUuid_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 4;
    private readonly static ulong ChecksumDefaultValue = 0UL;

    private ulong checksum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Checksum {
      get { if ((_hasBits0 & 1) != 0) { return checksum_; } else { return ChecksumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        checksum_ = value;
      }
    }
    /// <summary>Gets whether the "checksum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChecksum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "checksum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChecksum() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckReplicaChecksumPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckReplicaChecksumPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TsAddress != other.TsAddress) return false;
      if (TsUuid != other.TsUuid) return false;
      if (Status != other.Status) return false;
      if (Checksum != other.Checksum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTsAddress) hash ^= TsAddress.GetHashCode();
      if (HasTsUuid) hash ^= TsUuid.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasChecksum) hash ^= Checksum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTsAddress) {
        output.WriteRawTag(10);
        output.WriteString(TsAddress);
      }
      if (HasTsUuid) {
        output.WriteRawTag(18);
        output.WriteString(TsUuid);
      }
      if (HasStatus) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (HasChecksum) {
        output.WriteRawTag(33);
        output.WriteFixed64(Checksum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTsAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TsAddress);
      }
      if (HasTsUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TsUuid);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (HasChecksum) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckReplicaChecksumPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTsAddress) {
        TsAddress = other.TsAddress;
      }
      if (other.HasTsUuid) {
        TsUuid = other.TsUuid;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasChecksum) {
        Checksum = other.Checksum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TsAddress = input.ReadString();
            break;
          }
          case 18: {
            TsUuid = input.ReadString();
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
          case 33: {
            Checksum = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckVersionSummaryPB : pb::IMessage<KsckVersionSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckVersionSummaryPB> _parser = new pb::MessageParser<KsckVersionSummaryPB>(() => new KsckVersionSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckVersionSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckVersionSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckVersionSummaryPB(KsckVersionSummaryPB other) : this() {
      version_ = other.version_;
      servers_ = other.servers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckVersionSummaryPB Clone() {
      return new KsckVersionSummaryPB(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "servers" field.</summary>
    public const int ServersFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_servers_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> servers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Servers {
      get { return servers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckVersionSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckVersionSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!servers_.Equals(other.servers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= servers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      servers_.WriteTo(ref output, _repeated_servers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += servers_.CalculateSize(_repeated_servers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckVersionSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      servers_.Add(other.servers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            servers_.AddEntriesFrom(ref input, _repeated_servers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KsckCountSummaryPB : pb::IMessage<KsckCountSummaryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<KsckCountSummaryPB> _parser = new pb::MessageParser<KsckCountSummaryPB>(() => new KsckCountSummaryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KsckCountSummaryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckCountSummaryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckCountSummaryPB(KsckCountSummaryPB other) : this() {
      _hasBits0 = other._hasBits0;
      masters_ = other.masters_;
      tservers_ = other.tservers_;
      tables_ = other.tables_;
      tablets_ = other.tablets_;
      replicas_ = other.replicas_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KsckCountSummaryPB Clone() {
      return new KsckCountSummaryPB(this);
    }

    /// <summary>Field number for the "masters" field.</summary>
    public const int MastersFieldNumber = 1;
    private readonly static int MastersDefaultValue = 0;

    private int masters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Masters {
      get { if ((_hasBits0 & 1) != 0) { return masters_; } else { return MastersDefaultValue; } }
      set {
        _hasBits0 |= 1;
        masters_ = value;
      }
    }
    /// <summary>Gets whether the "masters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMasters {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "masters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMasters() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tservers" field.</summary>
    public const int TserversFieldNumber = 2;
    private readonly static int TserversDefaultValue = 0;

    private int tservers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tservers {
      get { if ((_hasBits0 & 2) != 0) { return tservers_; } else { return TserversDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tservers_ = value;
      }
    }
    /// <summary>Gets whether the "tservers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTservers {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tservers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTservers() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 3;
    private readonly static int TablesDefaultValue = 0;

    private int tables_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tables {
      get { if ((_hasBits0 & 4) != 0) { return tables_; } else { return TablesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tables_ = value;
      }
    }
    /// <summary>Gets whether the "tables" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTables {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tables" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTables() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tablets" field.</summary>
    public const int TabletsFieldNumber = 4;
    private readonly static int TabletsDefaultValue = 0;

    private int tablets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tablets {
      get { if ((_hasBits0 & 8) != 0) { return tablets_; } else { return TabletsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        tablets_ = value;
      }
    }
    /// <summary>Gets whether the "tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTablets {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTablets() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 5;
    private readonly static int ReplicasDefaultValue = 0;

    private int replicas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Replicas {
      get { if ((_hasBits0 & 16) != 0) { return replicas_; } else { return ReplicasDefaultValue; } }
      set {
        _hasBits0 |= 16;
        replicas_ = value;
      }
    }
    /// <summary>Gets whether the "replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplicas {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplicas() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KsckCountSummaryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KsckCountSummaryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Masters != other.Masters) return false;
      if (Tservers != other.Tservers) return false;
      if (Tables != other.Tables) return false;
      if (Tablets != other.Tablets) return false;
      if (Replicas != other.Replicas) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMasters) hash ^= Masters.GetHashCode();
      if (HasTservers) hash ^= Tservers.GetHashCode();
      if (HasTables) hash ^= Tables.GetHashCode();
      if (HasTablets) hash ^= Tablets.GetHashCode();
      if (HasReplicas) hash ^= Replicas.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMasters) {
        output.WriteRawTag(8);
        output.WriteInt32(Masters);
      }
      if (HasTservers) {
        output.WriteRawTag(16);
        output.WriteInt32(Tservers);
      }
      if (HasTables) {
        output.WriteRawTag(24);
        output.WriteInt32(Tables);
      }
      if (HasTablets) {
        output.WriteRawTag(32);
        output.WriteInt32(Tablets);
      }
      if (HasReplicas) {
        output.WriteRawTag(40);
        output.WriteInt32(Replicas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMasters) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Masters);
      }
      if (HasTservers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tservers);
      }
      if (HasTables) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tables);
      }
      if (HasTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tablets);
      }
      if (HasReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Replicas);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KsckCountSummaryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasMasters) {
        Masters = other.Masters;
      }
      if (other.HasTservers) {
        Tservers = other.Tservers;
      }
      if (other.HasTables) {
        Tables = other.Tables;
      }
      if (other.HasTablets) {
        Tablets = other.Tablets;
      }
      if (other.HasReplicas) {
        Replicas = other.Replicas;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Masters = input.ReadInt32();
            break;
          }
          case 16: {
            Tservers = input.ReadInt32();
            break;
          }
          case 24: {
            Tables = input.ReadInt32();
            break;
          }
          case 32: {
            Tablets = input.ReadInt32();
            break;
          }
          case 40: {
            Replicas = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColumnPB : pb::IMessage<ColumnPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ColumnPB> _parser = new pb::MessageParser<ColumnPB>(() => new ColumnPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnPB(ColumnPB other) : this() {
      _hasBits0 = other._hasBits0;
      columnName_ = other.columnName_;
      columnType_ = other.columnType_;
      isNullable_ = other.isNullable_;
      defaultValue_ = other.defaultValue_;
      comment_ = other.comment_;
      encoding_ = other.encoding_;
      compression_ = other.compression_;
      typeAttributes_ = other.typeAttributes_ != null ? other.typeAttributes_.Clone() : null;
      cfileBlockSize_ = other.cfileBlockSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnPB Clone() {
      return new ColumnPB(this);
    }

    /// <summary>Field number for the "column_name" field.</summary>
    public const int ColumnNameFieldNumber = 1;
    private readonly static string ColumnNameDefaultValue = "";

    private string columnName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ColumnName {
      get { return columnName_ ?? ColumnNameDefaultValue; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "column_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColumnName {
      get { return columnName_ != null; }
    }
    /// <summary>Clears the value of the "column_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColumnName() {
      columnName_ = null;
    }

    /// <summary>Field number for the "column_type" field.</summary>
    public const int ColumnTypeFieldNumber = 2;
    private readonly static string ColumnTypeDefaultValue = "";

    private string columnType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ColumnType {
      get { return columnType_ ?? ColumnTypeDefaultValue; }
      set {
        columnType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "column_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColumnType {
      get { return columnType_ != null; }
    }
    /// <summary>Clears the value of the "column_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColumnType() {
      columnType_ = null;
    }

    /// <summary>Field number for the "is_nullable" field.</summary>
    public const int IsNullableFieldNumber = 3;
    private readonly static bool IsNullableDefaultValue = false;

    private bool isNullable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNullable {
      get { if ((_hasBits0 & 1) != 0) { return isNullable_; } else { return IsNullableDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isNullable_ = value;
      }
    }
    /// <summary>Gets whether the "is_nullable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsNullable {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_nullable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsNullable() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "default_value" field.</summary>
    public const int DefaultValueFieldNumber = 4;
    private readonly static string DefaultValueDefaultValue = "";

    private string defaultValue_;
    /// <summary>
    /// The default value takes the form of a literal string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultValue {
      get { return defaultValue_ ?? DefaultValueDefaultValue; }
      set {
        defaultValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "default_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultValue {
      get { return defaultValue_ != null; }
    }
    /// <summary>Clears the value of the "default_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultValue() {
      defaultValue_ = null;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 5;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB EncodingDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB.AutoEncoding;

    private global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB encoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB Encoding {
      get { if ((_hasBits0 & 2) != 0) { return encoding_; } else { return EncodingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        encoding_ = value;
      }
    }
    /// <summary>Gets whether the "encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncoding {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncoding() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 7;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB CompressionDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB.DefaultCompression;

    private global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB compression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB Compression {
      get { if ((_hasBits0 & 4) != 0) { return compression_; } else { return CompressionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        compression_ = value;
      }
    }
    /// <summary>Gets whether the "compression" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCompression {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "compression" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCompression() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type_attributes" field.</summary>
    public const int TypeAttributesFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB typeAttributes_;
    /// <summary>
    /// Column's attribute, used for DECIMAL and VARCHAR type columns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB TypeAttributes {
      get { return typeAttributes_; }
      set {
        typeAttributes_ = value;
      }
    }

    /// <summary>Field number for the "cfile_block_size" field.</summary>
    public const int CfileBlockSizeFieldNumber = 9;
    private readonly static int CfileBlockSizeDefaultValue = 0;

    private int cfileBlockSize_;
    /// <summary>
    /// The preferred block size for cfile blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CfileBlockSize {
      get { if ((_hasBits0 & 8) != 0) { return cfileBlockSize_; } else { return CfileBlockSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        cfileBlockSize_ = value;
      }
    }
    /// <summary>Gets whether the "cfile_block_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfileBlockSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cfile_block_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfileBlockSize() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ColumnName != other.ColumnName) return false;
      if (ColumnType != other.ColumnType) return false;
      if (IsNullable != other.IsNullable) return false;
      if (DefaultValue != other.DefaultValue) return false;
      if (Comment != other.Comment) return false;
      if (Encoding != other.Encoding) return false;
      if (Compression != other.Compression) return false;
      if (!object.Equals(TypeAttributes, other.TypeAttributes)) return false;
      if (CfileBlockSize != other.CfileBlockSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasColumnName) hash ^= ColumnName.GetHashCode();
      if (HasColumnType) hash ^= ColumnType.GetHashCode();
      if (HasIsNullable) hash ^= IsNullable.GetHashCode();
      if (HasDefaultValue) hash ^= DefaultValue.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasEncoding) hash ^= Encoding.GetHashCode();
      if (HasCompression) hash ^= Compression.GetHashCode();
      if (typeAttributes_ != null) hash ^= TypeAttributes.GetHashCode();
      if (HasCfileBlockSize) hash ^= CfileBlockSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasColumnName) {
        output.WriteRawTag(10);
        output.WriteString(ColumnName);
      }
      if (HasColumnType) {
        output.WriteRawTag(18);
        output.WriteString(ColumnType);
      }
      if (HasIsNullable) {
        output.WriteRawTag(24);
        output.WriteBool(IsNullable);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(34);
        output.WriteString(DefaultValue);
      }
      if (HasComment) {
        output.WriteRawTag(42);
        output.WriteString(Comment);
      }
      if (HasEncoding) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Encoding);
      }
      if (HasCompression) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Compression);
      }
      if (typeAttributes_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TypeAttributes);
      }
      if (HasCfileBlockSize) {
        output.WriteRawTag(72);
        output.WriteInt32(CfileBlockSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasColumnName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (HasColumnType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnType);
      }
      if (HasIsNullable) {
        size += 1 + 1;
      }
      if (HasDefaultValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultValue);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (HasEncoding) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Encoding);
      }
      if (HasCompression) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (typeAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeAttributes);
      }
      if (HasCfileBlockSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfileBlockSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnPB other) {
      if (other == null) {
        return;
      }
      if (other.HasColumnName) {
        ColumnName = other.ColumnName;
      }
      if (other.HasColumnType) {
        ColumnType = other.ColumnType;
      }
      if (other.HasIsNullable) {
        IsNullable = other.IsNullable;
      }
      if (other.HasDefaultValue) {
        DefaultValue = other.DefaultValue;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasEncoding) {
        Encoding = other.Encoding;
      }
      if (other.HasCompression) {
        Compression = other.Compression;
      }
      if (other.typeAttributes_ != null) {
        if (typeAttributes_ == null) {
          TypeAttributes = new global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB();
        }
        TypeAttributes.MergeFrom(other.TypeAttributes);
      }
      if (other.HasCfileBlockSize) {
        CfileBlockSize = other.CfileBlockSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ColumnName = input.ReadString();
            break;
          }
          case 18: {
            ColumnType = input.ReadString();
            break;
          }
          case 24: {
            IsNullable = input.ReadBool();
            break;
          }
          case 34: {
            DefaultValue = input.ReadString();
            break;
          }
          case 42: {
            Comment = input.ReadString();
            break;
          }
          case 48: {
            Encoding = (global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.EncodingTypePB) input.ReadEnum();
            break;
          }
          case 56: {
            Compression = (global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.CompressionTypePB) input.ReadEnum();
            break;
          }
          case 66: {
            if (typeAttributes_ == null) {
              TypeAttributes = new global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Types.ColumnAttributesPB();
            }
            input.ReadMessage(TypeAttributes);
            break;
          }
          case 72: {
            CfileBlockSize = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ColumnPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EncodingTypePB {
        [pbr::OriginalName("AUTO_ENCODING")] AutoEncoding = 0,
        [pbr::OriginalName("PLAIN_ENCODING")] PlainEncoding = 1,
        [pbr::OriginalName("PREFIX_ENCODING")] PrefixEncoding = 2,
        [pbr::OriginalName("RLE")] Rle = 3,
        [pbr::OriginalName("DICT_ENCODING")] DictEncoding = 4,
        [pbr::OriginalName("BIT_SHUFFLE")] BitShuffle = 5,
      }

      public enum CompressionTypePB {
        [pbr::OriginalName("DEFAULT_COMPRESSION")] DefaultCompression = 0,
        [pbr::OriginalName("NO_COMPRESSION")] NoCompression = 1,
        [pbr::OriginalName("SNAPPY")] Snappy = 2,
        [pbr::OriginalName("LZ4")] Lz4 = 3,
        [pbr::OriginalName("ZLIB")] Zlib = 4,
      }

      public sealed partial class ColumnAttributesPB : pb::IMessage<ColumnAttributesPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<ColumnAttributesPB> _parser = new pb::MessageParser<ColumnAttributesPB>(() => new ColumnAttributesPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ColumnAttributesPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnAttributesPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnAttributesPB(ColumnAttributesPB other) : this() {
          _hasBits0 = other._hasBits0;
          precision_ = other.precision_;
          scale_ = other.scale_;
          length_ = other.length_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnAttributesPB Clone() {
          return new ColumnAttributesPB(this);
        }

        /// <summary>Field number for the "precision" field.</summary>
        public const int PrecisionFieldNumber = 1;
        private readonly static int PrecisionDefaultValue = 0;

        private int precision_;
        /// <summary>
        /// For decimal columns.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Precision {
          get { if ((_hasBits0 & 1) != 0) { return precision_; } else { return PrecisionDefaultValue; } }
          set {
            _hasBits0 |= 1;
            precision_ = value;
          }
        }
        /// <summary>Gets whether the "precision" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPrecision {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "precision" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPrecision() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 2;
        private readonly static int ScaleDefaultValue = 0;

        private int scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Scale {
          get { if ((_hasBits0 & 2) != 0) { return scale_; } else { return ScaleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            scale_ = value;
          }
        }
        /// <summary>Gets whether the "scale" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasScale {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "scale" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearScale() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 3;
        private readonly static int LengthDefaultValue = 0;

        private int length_;
        /// <summary>
        /// For varchar columns.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Length {
          get { if ((_hasBits0 & 4) != 0) { return length_; } else { return LengthDefaultValue; } }
          set {
            _hasBits0 |= 4;
            length_ = value;
          }
        }
        /// <summary>Gets whether the "length" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLength {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "length" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLength() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ColumnAttributesPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ColumnAttributesPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Precision != other.Precision) return false;
          if (Scale != other.Scale) return false;
          if (Length != other.Length) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPrecision) hash ^= Precision.GetHashCode();
          if (HasScale) hash ^= Scale.GetHashCode();
          if (HasLength) hash ^= Length.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPrecision) {
            output.WriteRawTag(8);
            output.WriteInt32(Precision);
          }
          if (HasScale) {
            output.WriteRawTag(16);
            output.WriteInt32(Scale);
          }
          if (HasLength) {
            output.WriteRawTag(24);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPrecision) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
          }
          if (HasScale) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scale);
          }
          if (HasLength) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ColumnAttributesPB other) {
          if (other == null) {
            return;
          }
          if (other.HasPrecision) {
            Precision = other.Precision;
          }
          if (other.HasScale) {
            Scale = other.Scale;
          }
          if (other.HasLength) {
            Length = other.Length;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Precision = input.ReadInt32();
                break;
              }
              case 16: {
                Scale = input.ReadInt32();
                break;
              }
              case 24: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PartitionPB : pb::IMessage<PartitionPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PartitionPB> _parser = new pb::MessageParser<PartitionPB>(() => new PartitionPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PartitionPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionPB(PartitionPB other) : this() {
      hashPartitions_ = other.hashPartitions_.Clone();
      rangePartition_ = other.rangePartition_ != null ? other.rangePartition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionPB Clone() {
      return new PartitionPB(this);
    }

    /// <summary>Field number for the "hash_partitions" field.</summary>
    public const int HashPartitionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB> _repeated_hashPartitions_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB> hashPartitions_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB>();
    /// <summary>
    /// Hash partition message. Support zero or more hash partition levels .
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.HashPartitionPB> HashPartitions {
      get { return hashPartitions_; }
    }

    /// <summary>Field number for the "range_partition" field.</summary>
    public const int RangePartitionFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB rangePartition_;
    /// <summary>
    /// range partition message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB RangePartition {
      get { return rangePartition_; }
      set {
        rangePartition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PartitionPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PartitionPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashPartitions_.Equals(other.hashPartitions_)) return false;
      if (!object.Equals(RangePartition, other.RangePartition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashPartitions_.GetHashCode();
      if (rangePartition_ != null) hash ^= RangePartition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      hashPartitions_.WriteTo(ref output, _repeated_hashPartitions_codec);
      if (rangePartition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RangePartition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += hashPartitions_.CalculateSize(_repeated_hashPartitions_codec);
      if (rangePartition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangePartition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PartitionPB other) {
      if (other == null) {
        return;
      }
      hashPartitions_.Add(other.hashPartitions_);
      if (other.rangePartition_ != null) {
        if (rangePartition_ == null) {
          RangePartition = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB();
        }
        RangePartition.MergeFrom(other.RangePartition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            hashPartitions_.AddEntriesFrom(ref input, _repeated_hashPartitions_codec);
            break;
          }
          case 18: {
            if (rangePartition_ == null) {
              RangePartition = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB();
            }
            input.ReadMessage(RangePartition);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PartitionPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class RangePartitionPB : pb::IMessage<RangePartitionPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<RangePartitionPB> _parser = new pb::MessageParser<RangePartitionPB>(() => new RangePartitionPB());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RangePartitionPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangePartitionPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangePartitionPB(RangePartitionPB other) : this() {
          columns_ = other.columns_.Clone();
          rangeBounds_ = other.rangeBounds_.Clone();
          rangeSplits_ = other.rangeSplits_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangePartitionPB Clone() {
          return new RangePartitionPB(this);
        }

        /// <summary>Field number for the "columns" field.</summary>
        public const int ColumnsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_columns_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Column names of columns included in the range. All columns must be
        /// a component of the primary key.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Columns {
          get { return columns_; }
        }

        /// <summary>Field number for the "range_bounds" field.</summary>
        public const int RangeBoundsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB> _repeated_rangeBounds_codec
            = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB.Parser);
        private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB> rangeBounds_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB>();
        /// <summary>
        /// Range bound.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.RangeBoundPB> RangeBounds {
          get { return rangeBounds_; }
        }

        /// <summary>Field number for the "range_splits" field.</summary>
        public const int RangeSplitsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB> _repeated_rangeSplits_codec
            = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB.Parser);
        private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB> rangeSplits_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB>();
        /// <summary>
        /// Range split.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.SplitValuePB> RangeSplits {
          get { return rangeSplits_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RangePartitionPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RangePartitionPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!columns_.Equals(other.columns_)) return false;
          if(!rangeBounds_.Equals(other.rangeBounds_)) return false;
          if(!rangeSplits_.Equals(other.rangeSplits_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= columns_.GetHashCode();
          hash ^= rangeBounds_.GetHashCode();
          hash ^= rangeSplits_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          columns_.WriteTo(ref output, _repeated_columns_codec);
          rangeBounds_.WriteTo(ref output, _repeated_rangeBounds_codec);
          rangeSplits_.WriteTo(ref output, _repeated_rangeSplits_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += columns_.CalculateSize(_repeated_columns_codec);
          size += rangeBounds_.CalculateSize(_repeated_rangeBounds_codec);
          size += rangeSplits_.CalculateSize(_repeated_rangeSplits_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RangePartitionPB other) {
          if (other == null) {
            return;
          }
          columns_.Add(other.columns_);
          rangeBounds_.Add(other.rangeBounds_);
          rangeSplits_.Add(other.rangeSplits_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
                break;
              }
              case 18: {
                rangeBounds_.AddEntriesFrom(ref input, _repeated_rangeBounds_codec);
                break;
              }
              case 26: {
                rangeSplits_.AddEntriesFrom(ref input, _repeated_rangeSplits_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RangePartitionPB message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class BoundPB : pb::IMessage<BoundPB>
              , pb::IBufferMessage
          {
            private static readonly pb::MessageParser<BoundPB> _parser = new pb::MessageParser<BoundPB>(() => new BoundPB());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<BoundPB> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BoundPB() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BoundPB(BoundPB other) : this() {
              _hasBits0 = other._hasBits0;
              boundType_ = other.boundType_;
              boundValues_ = other.boundValues_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BoundPB Clone() {
              return new BoundPB(this);
            }

            /// <summary>Field number for the "bound_type" field.</summary>
            public const int BoundTypeFieldNumber = 1;
            private readonly static global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type BoundTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type.UnknownBound;

            private global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type boundType_;
            /// <summary>
            /// The type of range partition bound, "INCLUSIVE" or "EXCLUSIVE"
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type BoundType {
              get { if ((_hasBits0 & 1) != 0) { return boundType_; } else { return BoundTypeDefaultValue; } }
              set {
                _hasBits0 |= 1;
                boundType_ = value;
              }
            }
            /// <summary>Gets whether the "bound_type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasBoundType {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "bound_type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearBoundType() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "bound_values" field.</summary>
            public const int BoundValuesFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_boundValues_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> boundValues_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The start or end partition key values. Bounds value should be simply the
            /// exact string value for the bound.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> BoundValues {
              get { return boundValues_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as BoundPB);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(BoundPB other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (BoundType != other.BoundType) return false;
              if(!boundValues_.Equals(other.boundValues_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasBoundType) hash ^= BoundType.GetHashCode();
              hash ^= boundValues_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
              output.WriteRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasBoundType) {
                output.WriteRawTag(8);
                output.WriteEnum((int) BoundType);
              }
              boundValues_.WriteTo(ref output, _repeated_boundValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasBoundType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BoundType);
              }
              size += boundValues_.CalculateSize(_repeated_boundValues_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(BoundPB other) {
              if (other == null) {
                return;
              }
              if (other.HasBoundType) {
                BoundType = other.BoundType;
              }
              boundValues_.Add(other.boundValues_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
              input.ReadRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    BoundType = (global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    boundValues_.AddEntriesFrom(ref input, _repeated_boundValues_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the BoundPB message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum Type {
                [pbr::OriginalName("UNKNOWN_BOUND")] UnknownBound = 0,
                [pbr::OriginalName("EXCLUSIVE")] Exclusive = 1,
                [pbr::OriginalName("INCLUSIVE")] Inclusive = 2,
              }

            }
            #endregion

          }

          public sealed partial class RangeBoundPB : pb::IMessage<RangeBoundPB>
              , pb::IBufferMessage
          {
            private static readonly pb::MessageParser<RangeBoundPB> _parser = new pb::MessageParser<RangeBoundPB>(() => new RangeBoundPB());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<RangeBoundPB> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RangeBoundPB() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RangeBoundPB(RangeBoundPB other) : this() {
              lowerBound_ = other.lowerBound_ != null ? other.lowerBound_.Clone() : null;
              upperBound_ = other.upperBound_ != null ? other.upperBound_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RangeBoundPB Clone() {
              return new RangeBoundPB(this);
            }

            /// <summary>Field number for the "lower_bound" field.</summary>
            public const int LowerBoundFieldNumber = 1;
            private global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB lowerBound_;
            /// <summary>
            /// The lower bound.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB LowerBound {
              get { return lowerBound_; }
              set {
                lowerBound_ = value;
              }
            }

            /// <summary>Field number for the "upper_bound" field.</summary>
            public const int UpperBoundFieldNumber = 2;
            private global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB upperBound_;
            /// <summary>
            /// The upper bound.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB UpperBound {
              get { return upperBound_; }
              set {
                upperBound_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as RangeBoundPB);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(RangeBoundPB other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(LowerBound, other.LowerBound)) return false;
              if (!object.Equals(UpperBound, other.UpperBound)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (lowerBound_ != null) hash ^= LowerBound.GetHashCode();
              if (upperBound_ != null) hash ^= UpperBound.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
              output.WriteRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (lowerBound_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(LowerBound);
              }
              if (upperBound_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(UpperBound);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (lowerBound_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowerBound);
              }
              if (upperBound_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpperBound);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(RangeBoundPB other) {
              if (other == null) {
                return;
              }
              if (other.lowerBound_ != null) {
                if (lowerBound_ == null) {
                  LowerBound = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB();
                }
                LowerBound.MergeFrom(other.LowerBound);
              }
              if (other.upperBound_ != null) {
                if (upperBound_ == null) {
                  UpperBound = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB();
                }
                UpperBound.MergeFrom(other.UpperBound);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
              input.ReadRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (lowerBound_ == null) {
                      LowerBound = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB();
                    }
                    input.ReadMessage(LowerBound);
                    break;
                  }
                  case 18: {
                    if (upperBound_ == null) {
                      UpperBound = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Types.BoundPB();
                    }
                    input.ReadMessage(UpperBound);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class SplitValuePB : pb::IMessage<SplitValuePB>
              , pb::IBufferMessage
          {
            private static readonly pb::MessageParser<SplitValuePB> _parser = new pb::MessageParser<SplitValuePB>(() => new SplitValuePB());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<SplitValuePB> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Types.RangePartitionPB.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SplitValuePB() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SplitValuePB(SplitValuePB other) : this() {
              splitValues_ = other.splitValues_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SplitValuePB Clone() {
              return new SplitValuePB(this);
            }

            /// <summary>Field number for the "split_values" field.</summary>
            public const int SplitValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_splitValues_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> splitValues_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The split values of range partition keys. Split value should be simply the
            /// exact string value for the bound.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> SplitValues {
              get { return splitValues_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as SplitValuePB);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(SplitValuePB other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!splitValues_.Equals(other.splitValues_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= splitValues_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
              output.WriteRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              splitValues_.WriteTo(ref output, _repeated_splitValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += splitValues_.CalculateSize(_repeated_splitValues_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(SplitValuePB other) {
              if (other == null) {
                return;
              }
              splitValues_.Add(other.splitValues_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
              input.ReadRawMessage(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    splitValues_.AddEntriesFrom(ref input, _repeated_splitValues_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class HashPartitionPB : pb::IMessage<HashPartitionPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<HashPartitionPB> _parser = new pb::MessageParser<HashPartitionPB>(() => new HashPartitionPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<HashPartitionPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HashPartitionPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HashPartitionPB(HashPartitionPB other) : this() {
          _hasBits0 = other._hasBits0;
          columns_ = other.columns_.Clone();
          numBuckets_ = other.numBuckets_;
          seed_ = other.seed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HashPartitionPB Clone() {
          return new HashPartitionPB(this);
        }

        /// <summary>Field number for the "columns" field.</summary>
        public const int ColumnsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_columns_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Column names of columns included in the hash. Every column must be
        /// a component of the primary key.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Columns {
          get { return columns_; }
        }

        /// <summary>Field number for the "num_buckets" field.</summary>
        public const int NumBucketsFieldNumber = 2;
        private readonly static int NumBucketsDefaultValue = 0;

        private int numBuckets_;
        /// <summary>
        /// Number of buckets into which columns will be hashed. Must be at least 2.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumBuckets {
          get { if ((_hasBits0 & 1) != 0) { return numBuckets_; } else { return NumBucketsDefaultValue; } }
          set {
            _hasBits0 |= 1;
            numBuckets_ = value;
          }
        }
        /// <summary>Gets whether the "num_buckets" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNumBuckets {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "num_buckets" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNumBuckets() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "seed" field.</summary>
        public const int SeedFieldNumber = 3;
        private readonly static uint SeedDefaultValue = 0;

        private uint seed_;
        /// <summary>
        /// Seed value for hash calculation. Administrators may set a seed value
        /// on a per-table basis in order to randomize the mapping of rows to
        /// buckets. Setting a seed provides some amount of protection against denial
        /// of service attacks when the hash bucket columns contain user provided
        /// input.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Seed {
          get { if ((_hasBits0 & 2) != 0) { return seed_; } else { return SeedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            seed_ = value;
          }
        }
        /// <summary>Gets whether the "seed" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSeed {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "seed" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSeed() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as HashPartitionPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(HashPartitionPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!columns_.Equals(other.columns_)) return false;
          if (NumBuckets != other.NumBuckets) return false;
          if (Seed != other.Seed) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= columns_.GetHashCode();
          if (HasNumBuckets) hash ^= NumBuckets.GetHashCode();
          if (HasSeed) hash ^= Seed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          columns_.WriteTo(ref output, _repeated_columns_codec);
          if (HasNumBuckets) {
            output.WriteRawTag(16);
            output.WriteInt32(NumBuckets);
          }
          if (HasSeed) {
            output.WriteRawTag(24);
            output.WriteUInt32(Seed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += columns_.CalculateSize(_repeated_columns_codec);
          if (HasNumBuckets) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumBuckets);
          }
          if (HasSeed) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seed);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(HashPartitionPB other) {
          if (other == null) {
            return;
          }
          columns_.Add(other.columns_);
          if (other.HasNumBuckets) {
            NumBuckets = other.NumBuckets;
          }
          if (other.HasSeed) {
            Seed = other.Seed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
                break;
              }
              case 16: {
                NumBuckets = input.ReadInt32();
                break;
              }
              case 24: {
                Seed = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExtraConfigPB : pb::IMessage<ExtraConfigPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ExtraConfigPB> _parser = new pb::MessageParser<ExtraConfigPB>(() => new ExtraConfigPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExtraConfigPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtraConfigPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtraConfigPB(ExtraConfigPB other) : this() {
      configs_ = other.configs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtraConfigPB Clone() {
      return new ExtraConfigPB(this);
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_configs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> configs_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Configs {
      get { return configs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExtraConfigPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExtraConfigPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Configs.Equals(other.Configs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Configs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      configs_.WriteTo(ref output, _map_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += configs_.CalculateSize(_map_configs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExtraConfigPB other) {
      if (other == null) {
        return;
      }
      configs_.Add(other.configs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            configs_.AddEntriesFrom(ref input, _map_configs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SchemaPB : pb::IMessage<SchemaPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SchemaPB> _parser = new pb::MessageParser<SchemaPB>(() => new SchemaPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchemaPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaPB(SchemaPB other) : this() {
      columns_ = other.columns_.Clone();
      keyColumnNames_ = other.keyColumnNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaPB Clone() {
      return new SchemaPB(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB> columns_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB>();
    /// <summary>
    /// Representation of table's columns, include more than one column message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tools.ColumnPB> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "key_column_names" field.</summary>
    public const int KeyColumnNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_keyColumnNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> keyColumnNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The table's primary keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> KeyColumnNames {
      get { return keyColumnNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchemaPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchemaPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      if(!keyColumnNames_.Equals(other.keyColumnNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      hash ^= keyColumnNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      keyColumnNames_.WriteTo(ref output, _repeated_keyColumnNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += keyColumnNames_.CalculateSize(_repeated_keyColumnNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchemaPB other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      keyColumnNames_.Add(other.keyColumnNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 18: {
            keyColumnNames_.AddEntriesFrom(ref input, _repeated_keyColumnNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Create table protobuffer message. The JSON message provided by user
  /// is converted to the PB. Used for creating a new table by kudu tool.
  /// </summary>
  public sealed partial class CreateTablePB : pb::IMessage<CreateTablePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<CreateTablePB> _parser = new pb::MessageParser<CreateTablePB>(() => new CreateTablePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTablePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tools.ToolReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTablePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTablePB(CreateTablePB other) : this() {
      _hasBits0 = other._hasBits0;
      tableName_ = other.tableName_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      partition_ = other.partition_ != null ? other.partition_.Clone() : null;
      numReplicas_ = other.numReplicas_;
      extraConfigs_ = other.extraConfigs_ != null ? other.extraConfigs_.Clone() : null;
      dimensionLabel_ = other.dimensionLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTablePB Clone() {
      return new CreateTablePB(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB schema_;
    /// <summary>
    /// Representation of a table's schema, include columns's message and
    /// primary keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB partition_;
    /// <summary>
    /// The table partition message, include hash partition and range partition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 4;
    private readonly static int NumReplicasDefaultValue = 0;

    private int numReplicas_;
    /// <summary>
    ///Number of tablet replica
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { if ((_hasBits0 & 1) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numReplicas_ = value;
      }
    }
    /// <summary>Gets whether the "num_replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumReplicas {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumReplicas() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "extra_configs" field.</summary>
    public const int ExtraConfigsFieldNumber = 5;
    private global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB extraConfigs_;
    /// <summary>
    /// The table's extra configuration properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB ExtraConfigs {
      get { return extraConfigs_; }
      set {
        extraConfigs_ = value;
      }
    }

    /// <summary>Field number for the "dimension_label" field.</summary>
    public const int DimensionLabelFieldNumber = 6;
    private readonly static string DimensionLabelDefaultValue = "";

    private string dimensionLabel_;
    /// <summary>
    /// The dimension label for tablets that were created during table creation. Used for
    /// dimension-specific placement of tablet replicas corresponding to the partitions of
    /// the newly created table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DimensionLabel {
      get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
      set {
        dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dimension_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDimensionLabel {
      get { return dimensionLabel_ != null; }
    }
    /// <summary>Clears the value of the "dimension_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDimensionLabel() {
      dimensionLabel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTablePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTablePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(Partition, other.Partition)) return false;
      if (NumReplicas != other.NumReplicas) return false;
      if (!object.Equals(ExtraConfigs, other.ExtraConfigs)) return false;
      if (DimensionLabel != other.DimensionLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (partition_ != null) hash ^= Partition.GetHashCode();
      if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
      if (extraConfigs_ != null) hash ^= ExtraConfigs.GetHashCode();
      if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (schema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (partition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Partition);
      }
      if (HasNumReplicas) {
        output.WriteRawTag(32);
        output.WriteInt32(NumReplicas);
      }
      if (extraConfigs_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtraConfigs);
      }
      if (HasDimensionLabel) {
        output.WriteRawTag(50);
        output.WriteString(DimensionLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (partition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partition);
      }
      if (HasNumReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (extraConfigs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraConfigs);
      }
      if (HasDimensionLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTablePB other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.partition_ != null) {
        if (partition_ == null) {
          Partition = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB();
        }
        Partition.MergeFrom(other.Partition);
      }
      if (other.HasNumReplicas) {
        NumReplicas = other.NumReplicas;
      }
      if (other.extraConfigs_ != null) {
        if (extraConfigs_ == null) {
          ExtraConfigs = new global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB();
        }
        ExtraConfigs.MergeFrom(other.ExtraConfigs);
      }
      if (other.HasDimensionLabel) {
        DimensionLabel = other.DimensionLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.Tools.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 26: {
            if (partition_ == null) {
              Partition = new global::Knet.Kudu.Client.Protobuf.Tools.PartitionPB();
            }
            input.ReadMessage(Partition);
            break;
          }
          case 32: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 42: {
            if (extraConfigs_ == null) {
              ExtraConfigs = new global::Knet.Kudu.Client.Protobuf.Tools.ExtraConfigPB();
            }
            input.ReadMessage(ExtraConfigs);
            break;
          }
          case 50: {
            DimensionLabel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
