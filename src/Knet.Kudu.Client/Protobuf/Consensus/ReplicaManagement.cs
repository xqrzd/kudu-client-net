// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/consensus/replica_management.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf.Consensus {

  /// <summary>Holder for reflection information generated from kudu/consensus/replica_management.proto</summary>
  public static partial class ReplicaManagementReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/consensus/replica_management.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReplicaManagementReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidrdWR1L2NvbnNlbnN1cy9yZXBsaWNhX21hbmFnZW1lbnQucHJvdG8SDmt1",
            "ZHUuY29uc2Vuc3VzIs0BChdSZXBsaWNhTWFuYWdlbWVudEluZm9QQhJVChJy",
            "ZXBsYWNlbWVudF9zY2hlbWUYASABKA4yOS5rdWR1LmNvbnNlbnN1cy5SZXBs",
            "aWNhTWFuYWdlbWVudEluZm9QQi5SZXBsYWNlbWVudFNjaGVtZSJbChFSZXBs",
            "YWNlbWVudFNjaGVtZRIMCgdVTktOT1dOEOcHEg8KC0VWSUNUX0ZJUlNUEAAS",
            "JwojUFJFUEFSRV9SRVBMQUNFTUVOVF9CRUZPUkVfRVZJQ1RJT04QAUJBChlv",
            "cmcuYXBhY2hlLmt1ZHUuY29uc2Vuc3VzqgIjS25ldC5LdWR1LkNsaWVudC5Q",
            "cm90b2J1Zi5Db25zZW5zdXM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB), global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Parser, new[]{ "ReplacementScheme" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Communicates replica management information between servers.
  /// </summary>
  public sealed partial class ReplicaManagementInfoPB : pb::IMessage<ReplicaManagementInfoPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReplicaManagementInfoPB> _parser = new pb::MessageParser<ReplicaManagementInfoPB>(() => new ReplicaManagementInfoPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReplicaManagementInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaManagementInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaManagementInfoPB(ReplicaManagementInfoPB other) : this() {
      _hasBits0 = other._hasBits0;
      replacementScheme_ = other.replacementScheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplicaManagementInfoPB Clone() {
      return new ReplicaManagementInfoPB(this);
    }

    /// <summary>Field number for the "replacement_scheme" field.</summary>
    public const int ReplacementSchemeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme ReplacementSchemeDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme replacementScheme_;
    /// <summary>
    /// Using 'optional' instead of 'required' because at some point we may decide
    /// to obsolete this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme ReplacementScheme {
      get { if ((_hasBits0 & 1) != 0) { return replacementScheme_; } else { return ReplacementSchemeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        replacementScheme_ = value;
      }
    }
    /// <summary>Gets whether the "replacement_scheme" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplacementScheme {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "replacement_scheme" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplacementScheme() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReplicaManagementInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReplicaManagementInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReplacementScheme != other.ReplacementScheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReplacementScheme) hash ^= ReplacementScheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReplacementScheme) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReplacementScheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReplacementScheme) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplacementScheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReplicaManagementInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.HasReplacementScheme) {
        ReplacementScheme = other.ReplacementScheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReplacementScheme = (global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB.Types.ReplacementScheme) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReplicaManagementInfoPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Replica replacement schemes.
      /// </summary>
      public enum ReplacementScheme {
        [pbr::OriginalName("UNKNOWN")] Unknown = 999,
        /// <summary>
        /// The leader replica evicts the failed replica first, and then the new
        /// voter replica is added (a.k.a. '3-2-3' replica management scheme).
        /// </summary>
        [pbr::OriginalName("EVICT_FIRST")] EvictFirst = 0,
        /// <summary>
        /// Add a new non-voter replica, promote the replica to voter once it
        /// caught up with the leader, and only after that evict the failed replica
        /// (a.k.a. '3-4-3' replica managment scheme).
        /// </summary>
        [pbr::OriginalName("PREPARE_REPLACEMENT_BEFORE_EVICTION")] PrepareReplacementBeforeEviction = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
