// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/fs/fs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf {

  /// <summary>Holder for reflection information generated from kudu/fs/fs.proto</summary>
  public static partial class FsReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/fs/fs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBrdWR1L2ZzL2ZzLnByb3RvEgRrdWR1IjgKEkluc3RhbmNlTWV0YWRhdGFQ",
            "QhIMCgR1dWlkGAEgAigMEhQKDGZvcm1hdF9zdGFtcBgCIAIoCSIrCghEaXJT",
            "ZXRQQhIMCgR1dWlkGAEgAigMEhEKCWFsbF91dWlkcxgCIAMoDCJvChVEaXJJ",
            "bnN0YW5jZU1ldGFkYXRhUEISHwoHZGlyX3NldBgBIAIoCzIOLmt1ZHUuRGly",
            "U2V0UEISEAoIZGlyX3R5cGUYAiACKAkSIwobZmlsZXN5c3RlbV9ibG9ja19z",
            "aXplX2J5dGVzGAMgASgEIhcKCUJsb2NrSWRQQhIKCgJpZBgBIAIoBiKQAQoN",
            "QmxvY2tSZWNvcmRQQhIhCghibG9ja19pZBgBIAIoCzIPLmt1ZHUuQmxvY2tJ",
            "ZFBCEiYKB29wX3R5cGUYAiACKA4yFS5rdWR1LkJsb2NrUmVjb3JkVHlwZRIU",
            "Cgx0aW1lc3RhbXBfdXMYAyACKAQSDgoGb2Zmc2V0GAQgASgDEg4KBmxlbmd0",
            "aBgFIAEoAyIfCg5EYXRhRGlyR3JvdXBQQhINCgV1dWlkcxgBIAMoDCo2Cg9C",
            "bG9ja1JlY29yZFR5cGUSCwoHVU5LTk9XThAAEgoKBkNSRUFURRABEgoKBkRF",
            "TEVURRACQi0KD29yZy5hcGFjaGUua3VkdaoCGUtuZXQuS3VkdS5DbGllbnQu",
            "UHJvdG9idWY="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Knet.Kudu.Client.Protobuf.BlockRecordType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.InstanceMetadataPB), global::Knet.Kudu.Client.Protobuf.InstanceMetadataPB.Parser, new[]{ "Uuid", "FormatStamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.DirSetPB), global::Knet.Kudu.Client.Protobuf.DirSetPB.Parser, new[]{ "Uuid", "AllUuids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.DirInstanceMetadataPB), global::Knet.Kudu.Client.Protobuf.DirInstanceMetadataPB.Parser, new[]{ "DirSet", "DirType", "FilesystemBlockSizeBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.BlockIdPB), global::Knet.Kudu.Client.Protobuf.BlockIdPB.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.BlockRecordPB), global::Knet.Kudu.Client.Protobuf.BlockRecordPB.Parser, new[]{ "BlockId", "OpType", "TimestampUs", "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.DataDirGroupPB), global::Knet.Kudu.Client.Protobuf.DataDirGroupPB.Parser, new[]{ "Uuids" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The kind of record.
  /// </summary>
  public enum BlockRecordType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("CREATE")] Create = 1,
    [pbr::OriginalName("DELETE")] Delete = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// When any server initializes a new filesystem (eg a new node is created in the
  /// cluster), it creates this structure and stores it persistently.
  /// </summary>
  public sealed partial class InstanceMetadataPB : pb::IMessage<InstanceMetadataPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<InstanceMetadataPB> _parser = new pb::MessageParser<InstanceMetadataPB>(() => new InstanceMetadataPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceMetadataPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceMetadataPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceMetadataPB(InstanceMetadataPB other) : this() {
      uuid_ = other.uuid_;
      formatStamp_ = other.formatStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceMetadataPB Clone() {
      return new InstanceMetadataPB(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static pb::ByteString UuidDefaultValue = pb::ByteString.Empty;

    private pb::ByteString uuid_;
    /// <summary>
    /// The UUID which is assigned when the instance is first formatted. This uniquely
    /// identifies the node in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "format_stamp" field.</summary>
    public const int FormatStampFieldNumber = 2;
    private readonly static string FormatStampDefaultValue = "";

    private string formatStamp_;
    /// <summary>
    /// Human-readable string indicating when and where the node was first
    /// initialized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FormatStamp {
      get { return formatStamp_ ?? FormatStampDefaultValue; }
      set {
        formatStamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "format_stamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormatStamp {
      get { return formatStamp_ != null; }
    }
    /// <summary>Clears the value of the "format_stamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormatStamp() {
      formatStamp_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceMetadataPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceMetadataPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (FormatStamp != other.FormatStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (HasFormatStamp) hash ^= FormatStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteBytes(Uuid);
      }
      if (HasFormatStamp) {
        output.WriteRawTag(18);
        output.WriteString(FormatStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Uuid);
      }
      if (HasFormatStamp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatStamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceMetadataPB other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      if (other.HasFormatStamp) {
        FormatStamp = other.FormatStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadBytes();
            break;
          }
          case 18: {
            FormatStamp = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Describes a collection of filesystem directory instances and the membership
  /// of a particular instance in the collection.
  ///
  /// In a healthy filesystem (see below), a directory instance can be referred to
  /// via its UUID's position in all_uuids instead of via the UUID itself. This is
  /// useful when there are many such references, as the position is much shorter
  /// than the UUID.
  /// </summary>
  public sealed partial class DirSetPB : pb::IMessage<DirSetPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DirSetPB> _parser = new pb::MessageParser<DirSetPB>(() => new DirSetPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DirSetPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirSetPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirSetPB(DirSetPB other) : this() {
      uuid_ = other.uuid_;
      allUuids_ = other.allUuids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirSetPB Clone() {
      return new DirSetPB(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static pb::ByteString UuidDefaultValue = pb::ByteString.Empty;

    private pb::ByteString uuid_;
    /// <summary>
    /// Globally unique identifier for this directory instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "all_uuids" field.</summary>
    public const int AllUuidsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_allUuids_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> allUuids_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// All UUIDs in this dir instance set. In a healthy filesystem:
    /// 1. There exists an on-disk DirInstanceMetadataPB for each listed UUID, and
    /// 2. Every DirSetPB contains an identical copy of all_uuids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> AllUuids {
      get { return allUuids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DirSetPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DirSetPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if(!allUuids_.Equals(other.allUuids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      hash ^= allUuids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteBytes(Uuid);
      }
      allUuids_.WriteTo(ref output, _repeated_allUuids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Uuid);
      }
      size += allUuids_.CalculateSize(_repeated_allUuids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DirSetPB other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      allUuids_.Add(other.allUuids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadBytes();
            break;
          }
          case 18: {
            allUuids_.AddEntriesFrom(ref input, _repeated_allUuids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A filesystem instance can contain multiple directories. One of these
  /// structures is persisted in each directory when the filesystem instance is
  /// created.
  /// </summary>
  public sealed partial class DirInstanceMetadataPB : pb::IMessage<DirInstanceMetadataPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DirInstanceMetadataPB> _parser = new pb::MessageParser<DirInstanceMetadataPB>(() => new DirInstanceMetadataPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DirInstanceMetadataPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirInstanceMetadataPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirInstanceMetadataPB(DirInstanceMetadataPB other) : this() {
      _hasBits0 = other._hasBits0;
      dirSet_ = other.dirSet_ != null ? other.dirSet_.Clone() : null;
      dirType_ = other.dirType_;
      filesystemBlockSizeBytes_ = other.filesystemBlockSizeBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirInstanceMetadataPB Clone() {
      return new DirInstanceMetadataPB(this);
    }

    /// <summary>Field number for the "dir_set" field.</summary>
    public const int DirSetFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.DirSetPB dirSet_;
    /// <summary>
    /// Describes this directory instance as well as all of the other directory
    /// instances that, taken together, describe a complete directory set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.DirSetPB DirSet {
      get { return dirSet_; }
      set {
        dirSet_ = value;
      }
    }

    /// <summary>Field number for the "dir_type" field.</summary>
    public const int DirTypeFieldNumber = 2;
    private readonly static string DirTypeDefaultValue = "";

    private string dirType_;
    /// <summary>
    /// Textual representation of the directory type for which this directory was
    /// formatted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DirType {
      get { return dirType_ ?? DirTypeDefaultValue; }
      set {
        dirType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dir_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirType {
      get { return dirType_ != null; }
    }
    /// <summary>Clears the value of the "dir_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirType() {
      dirType_ = null;
    }

    /// <summary>Field number for the "filesystem_block_size_bytes" field.</summary>
    public const int FilesystemBlockSizeBytesFieldNumber = 3;
    private readonly static ulong FilesystemBlockSizeBytesDefaultValue = 0UL;

    private ulong filesystemBlockSizeBytes_;
    /// <summary>
    /// Block size on the filesystem where this instance was created. If the
    /// instance (and its data) are ever copied to another location, the block
    /// size in that location must be the same.
    /// This must be present if this instance belongs to a data directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FilesystemBlockSizeBytes {
      get { if ((_hasBits0 & 1) != 0) { return filesystemBlockSizeBytes_; } else { return FilesystemBlockSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        filesystemBlockSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "filesystem_block_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesystemBlockSizeBytes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "filesystem_block_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesystemBlockSizeBytes() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DirInstanceMetadataPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DirInstanceMetadataPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DirSet, other.DirSet)) return false;
      if (DirType != other.DirType) return false;
      if (FilesystemBlockSizeBytes != other.FilesystemBlockSizeBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dirSet_ != null) hash ^= DirSet.GetHashCode();
      if (HasDirType) hash ^= DirType.GetHashCode();
      if (HasFilesystemBlockSizeBytes) hash ^= FilesystemBlockSizeBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dirSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DirSet);
      }
      if (HasDirType) {
        output.WriteRawTag(18);
        output.WriteString(DirType);
      }
      if (HasFilesystemBlockSizeBytes) {
        output.WriteRawTag(24);
        output.WriteUInt64(FilesystemBlockSizeBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dirSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirSet);
      }
      if (HasDirType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirType);
      }
      if (HasFilesystemBlockSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FilesystemBlockSizeBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DirInstanceMetadataPB other) {
      if (other == null) {
        return;
      }
      if (other.dirSet_ != null) {
        if (dirSet_ == null) {
          DirSet = new global::Knet.Kudu.Client.Protobuf.DirSetPB();
        }
        DirSet.MergeFrom(other.DirSet);
      }
      if (other.HasDirType) {
        DirType = other.DirType;
      }
      if (other.HasFilesystemBlockSizeBytes) {
        FilesystemBlockSizeBytes = other.FilesystemBlockSizeBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dirSet_ == null) {
              DirSet = new global::Knet.Kudu.Client.Protobuf.DirSetPB();
            }
            input.ReadMessage(DirSet);
            break;
          }
          case 18: {
            DirType = input.ReadString();
            break;
          }
          case 24: {
            FilesystemBlockSizeBytes = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockIdPB : pb::IMessage<BlockIdPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<BlockIdPB> _parser = new pb::MessageParser<BlockIdPB>(() => new BlockIdPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlockIdPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockIdPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockIdPB(BlockIdPB other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockIdPB Clone() {
      return new BlockIdPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static ulong IdDefaultValue = 0UL;

    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlockIdPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlockIdPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(9);
        output.WriteFixed64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlockIdPB other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Id = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An element found in a container metadata file of the log-backed block
  /// storage implementation.
  ///
  /// Each one tracks the existence (creation) or non-existence (deletion)
  /// of a particular block. They are written sequentially, with subsequent
  /// messages taking precedence over earlier ones (e.g. "CREATE foo" followed
  /// by "DELETE foo" means that block foo does not exist).
  /// </summary>
  public sealed partial class BlockRecordPB : pb::IMessage<BlockRecordPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<BlockRecordPB> _parser = new pb::MessageParser<BlockRecordPB>(() => new BlockRecordPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlockRecordPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRecordPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRecordPB(BlockRecordPB other) : this() {
      _hasBits0 = other._hasBits0;
      blockId_ = other.blockId_ != null ? other.blockId_.Clone() : null;
      opType_ = other.opType_;
      timestampUs_ = other.timestampUs_;
      offset_ = other.offset_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRecordPB Clone() {
      return new BlockRecordPB(this);
    }

    /// <summary>Field number for the "block_id" field.</summary>
    public const int BlockIdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.BlockIdPB blockId_;
    /// <summary>
    /// The unique identifier of the block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.BlockIdPB BlockId {
      get { return blockId_; }
      set {
        blockId_ = value;
      }
    }

    /// <summary>Field number for the "op_type" field.</summary>
    public const int OpTypeFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.BlockRecordType OpTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.BlockRecordType.Unknown;

    private global::Knet.Kudu.Client.Protobuf.BlockRecordType opType_;
    /// <summary>
    /// Whether this is a CREATE or a DELETE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.BlockRecordType OpType {
      get { if ((_hasBits0 & 1) != 0) { return opType_; } else { return OpTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        opType_ = value;
      }
    }
    /// <summary>Gets whether the "op_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "op_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp_us" field.</summary>
    public const int TimestampUsFieldNumber = 3;
    private readonly static ulong TimestampUsDefaultValue = 0UL;

    private ulong timestampUs_;
    /// <summary>
    /// The time at which this block record was created, expressed in terms of
    /// microseconds since the epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimestampUs {
      get { if ((_hasBits0 & 2) != 0) { return timestampUs_; } else { return TimestampUsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestampUs_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp_us" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestampUs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp_us" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestampUs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 4;
    private readonly static long OffsetDefaultValue = 0L;

    private long offset_;
    /// <summary>
    /// The offset of the block in the container data file.
    ///
    /// Required for CREATE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Offset {
      get { if ((_hasBits0 & 4) != 0) { return offset_; } else { return OffsetDefaultValue; } }
      set {
        _hasBits0 |= 4;
        offset_ = value;
      }
    }
    /// <summary>Gets whether the "offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOffset {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOffset() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private readonly static long LengthDefaultValue = 0L;

    private long length_;
    /// <summary>
    /// The length of the block in the container data file.
    ///
    /// Required for CREATE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Length {
      get { if ((_hasBits0 & 8) != 0) { return length_; } else { return LengthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        length_ = value;
      }
    }
    /// <summary>Gets whether the "length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLength {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLength() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlockRecordPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlockRecordPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockId, other.BlockId)) return false;
      if (OpType != other.OpType) return false;
      if (TimestampUs != other.TimestampUs) return false;
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (blockId_ != null) hash ^= BlockId.GetHashCode();
      if (HasOpType) hash ^= OpType.GetHashCode();
      if (HasTimestampUs) hash ^= TimestampUs.GetHashCode();
      if (HasOffset) hash ^= Offset.GetHashCode();
      if (HasLength) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (blockId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockId);
      }
      if (HasOpType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OpType);
      }
      if (HasTimestampUs) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampUs);
      }
      if (HasOffset) {
        output.WriteRawTag(32);
        output.WriteInt64(Offset);
      }
      if (HasLength) {
        output.WriteRawTag(40);
        output.WriteInt64(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (blockId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockId);
      }
      if (HasOpType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpType);
      }
      if (HasTimestampUs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampUs);
      }
      if (HasOffset) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (HasLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlockRecordPB other) {
      if (other == null) {
        return;
      }
      if (other.blockId_ != null) {
        if (blockId_ == null) {
          BlockId = new global::Knet.Kudu.Client.Protobuf.BlockIdPB();
        }
        BlockId.MergeFrom(other.BlockId);
      }
      if (other.HasOpType) {
        OpType = other.OpType;
      }
      if (other.HasTimestampUs) {
        TimestampUs = other.TimestampUs;
      }
      if (other.HasOffset) {
        Offset = other.Offset;
      }
      if (other.HasLength) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (blockId_ == null) {
              BlockId = new global::Knet.Kudu.Client.Protobuf.BlockIdPB();
            }
            input.ReadMessage(BlockId);
            break;
          }
          case 16: {
            OpType = (global::Knet.Kudu.Client.Protobuf.BlockRecordType) input.ReadEnum();
            break;
          }
          case 24: {
            TimestampUs = input.ReadUInt64();
            break;
          }
          case 32: {
            Offset = input.ReadInt64();
            break;
          }
          case 40: {
            Length = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Tablet data is spread across a specified number of data directories. The
  /// group is represented by the UUIDs of the data directories it consists of.
  /// </summary>
  public sealed partial class DataDirGroupPB : pb::IMessage<DataDirGroupPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DataDirGroupPB> _parser = new pb::MessageParser<DataDirGroupPB>(() => new DataDirGroupPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataDirGroupPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.FsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataDirGroupPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataDirGroupPB(DataDirGroupPB other) : this() {
      uuids_ = other.uuids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataDirGroupPB Clone() {
      return new DataDirGroupPB(this);
    }

    /// <summary>Field number for the "uuids" field.</summary>
    public const int UuidsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_uuids_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> uuids_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// List of data directory UUIDs that make up the group. Must not be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Uuids {
      get { return uuids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataDirGroupPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataDirGroupPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uuids_.Equals(other.uuids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uuids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      uuids_.WriteTo(ref output, _repeated_uuids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += uuids_.CalculateSize(_repeated_uuids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataDirGroupPB other) {
      if (other == null) {
        return;
      }
      uuids_.Add(other.uuids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uuids_.AddEntriesFrom(ref input, _repeated_uuids_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
