// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/common/wire_protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf {

  /// <summary>Holder for reflection information generated from kudu/common/wire_protocol.proto</summary>
  public static partial class WireProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/common/wire_protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WireProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9rdWR1L2NvbW1vbi93aXJlX3Byb3RvY29sLnByb3RvEgRrdWR1GhhrdWR1",
            "L2NvbW1vbi9jb21tb24ucHJvdG8aHWt1ZHUvY29uc2Vuc3VzL21ldGFkYXRh",
            "LnByb3RvIuIDCgtBcHBTdGF0dXNQQhIpCgRjb2RlGAEgAigOMhsua3VkdS5B",
            "cHBTdGF0dXNQQi5FcnJvckNvZGUSDwoHbWVzc2FnZRgCIAEoCRISCgpwb3Np",
            "eF9jb2RlGAQgASgFIoIDCglFcnJvckNvZGUSEgoNVU5LTk9XTl9FUlJPUhDn",
            "BxIGCgJPSxAAEg0KCU5PVF9GT1VORBABEg4KCkNPUlJVUFRJT04QAhIRCg1O",
            "T1RfU1VQUE9SVEVEEAMSFAoQSU5WQUxJRF9BUkdVTUVOVBAEEgwKCElPX0VS",
            "Uk9SEAUSEwoPQUxSRUFEWV9QUkVTRU5UEAYSEQoNUlVOVElNRV9FUlJPUhAH",
            "EhEKDU5FVFdPUktfRVJST1IQCBIRCg1JTExFR0FMX1NUQVRFEAkSEgoOTk9U",
            "X0FVVEhPUklaRUQQChILCgdBQk9SVEVEEAsSEAoMUkVNT1RFX0VSUk9SEAwS",
            "FwoTU0VSVklDRV9VTkFWQUlMQUJMRRANEg0KCVRJTUVEX09VVBAOEhEKDVVO",
            "SU5JVElBTElaRUQQDxIXChNDT05GSUdVUkFUSU9OX0VSUk9SEBASDgoKSU5D",
            "T01QTEVURRAREg8KC0VORF9PRl9GSUxFEBISDQoJQ0FOQ0VMTEVEEBMiQAoO",
            "Tm9kZUluc3RhbmNlUEISFgoOcGVybWFuZW50X3V1aWQYASACKAwSFgoOaW5z",
            "dGFuY2Vfc2Vxbm8YAiACKAMizwEKFFNlcnZlclJlZ2lzdHJhdGlvblBCEicK",
            "DXJwY19hZGRyZXNzZXMYASADKAsyEC5rdWR1Lkhvc3RQb3J0UEISKAoOaHR0",
            "cF9hZGRyZXNzZXMYAiADKAsyEC5rdWR1Lkhvc3RQb3J0UEISGAoQc29mdHdh",
            "cmVfdmVyc2lvbhgDIAEoCRIVCg1odHRwc19lbmFibGVkGAQgASgIEhIKCnN0",
            "YXJ0X3RpbWUYBSABKAMSHwoXdW5peF9kb21haW5fc29ja2V0X3BhdGgYBiAB",
            "KAkijQIKDVNlcnZlckVudHJ5UEISIAoFZXJyb3IYASABKAsyES5rdWR1LkFw",
            "cFN0YXR1c1BCEikKC2luc3RhbmNlX2lkGAIgASgLMhQua3VkdS5Ob2RlSW5z",
            "dGFuY2VQQhIwCgxyZWdpc3RyYXRpb24YAyABKAsyGi5rdWR1LlNlcnZlclJl",
            "Z2lzdHJhdGlvblBCEi0KBHJvbGUYBCABKA4yHy5rdWR1LmNvbnNlbnN1cy5S",
            "YWZ0UGVlclBCLlJvbGUSEgoKY2x1c3Rlcl9pZBgFIAEoCRI6CgttZW1iZXJf",
            "dHlwZRgGIAEoDjIlLmt1ZHUuY29uc2Vuc3VzLlJhZnRQZWVyUEIuTWVtYmVy",
            "VHlwZSJdChFSb3d3aXNlUm93QmxvY2tQQhITCghudW1fcm93cxgBIAEoBToB",
            "MBIUCgxyb3dzX3NpZGVjYXIYAiABKAUSHQoVaW5kaXJlY3RfZGF0YV9zaWRl",
            "Y2FyGAMgASgFIrYBChJDb2x1bW5hclJvd0Jsb2NrUEISMAoHY29sdW1ucxgB",
            "IAMoCzIfLmt1ZHUuQ29sdW1uYXJSb3dCbG9ja1BCLkNvbHVtbhIQCghudW1f",
            "cm93cxgCIAEoAxpcCgZDb2x1bW4SFAoMZGF0YV9zaWRlY2FyGAEgASgFEhsK",
            "E3Zhcmxlbl9kYXRhX3NpZGVjYXIYAiABKAUSHwoXbm9uX251bGxfYml0bWFw",
            "X3NpZGVjYXIYAyABKAVCLQoPb3JnLmFwYWNoZS5rdWR1qgIZS25ldC5LdWR1",
            "LkNsaWVudC5Qcm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Knet.Kudu.Client.Protobuf.CommonReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Consensus.MetadataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.AppStatusPB), global::Knet.Kudu.Client.Protobuf.AppStatusPB.Parser, new[]{ "Code", "Message", "PosixCode" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.NodeInstancePB), global::Knet.Kudu.Client.Protobuf.NodeInstancePB.Parser, new[]{ "PermanentUuid", "InstanceSeqno" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB), global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB.Parser, new[]{ "RpcAddresses", "HttpAddresses", "SoftwareVersion", "HttpsEnabled", "StartTime", "UnixDomainSocketPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.ServerEntryPB), global::Knet.Kudu.Client.Protobuf.ServerEntryPB.Parser, new[]{ "Error", "InstanceId", "Registration", "Role", "ClusterId", "MemberType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB), global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB.Parser, new[]{ "NumRows", "RowsSidecar", "IndirectDataSidecar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB), global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Parser, new[]{ "Columns", "NumRows" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column), global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column.Parser, new[]{ "DataSidecar", "VarlenDataSidecar", "NonNullBitmapSidecar" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Error status returned by any RPC method.
  /// Every RPC method which could generate an application-level error
  /// should have this (or a more complex error result) as an optional field
  /// in its response.
  ///
  /// This maps to kudu::Status in C++ and org.apache.kudu.Status in Java.
  /// </summary>
  public sealed partial class AppStatusPB : pb::IMessage<AppStatusPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<AppStatusPB> _parser = new pb::MessageParser<AppStatusPB>(() => new AppStatusPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AppStatusPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStatusPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStatusPB(AppStatusPB other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      message_ = other.message_;
      posixCode_ = other.posixCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStatusPB Clone() {
      return new AppStatusPB(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode CodeDefaultValue = global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode.UnknownError;

    private global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    /// <summary>Field number for the "posix_code" field.</summary>
    public const int PosixCodeFieldNumber = 4;
    private readonly static int PosixCodeDefaultValue = 0;

    private int posixCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosixCode {
      get { if ((_hasBits0 & 2) != 0) { return posixCode_; } else { return PosixCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posixCode_ = value;
      }
    }
    /// <summary>Gets whether the "posix_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosixCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "posix_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosixCode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AppStatusPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AppStatusPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (PosixCode != other.PosixCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (HasPosixCode) hash ^= PosixCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (HasPosixCode) {
        output.WriteRawTag(32);
        output.WriteInt32(PosixCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (HasPosixCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosixCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AppStatusPB other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      if (other.HasPosixCode) {
        PosixCode = other.PosixCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Knet.Kudu.Client.Protobuf.AppStatusPB.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            PosixCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AppStatusPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("UNKNOWN_ERROR")] UnknownError = 999,
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("NOT_FOUND")] NotFound = 1,
        [pbr::OriginalName("CORRUPTION")] Corruption = 2,
        [pbr::OriginalName("NOT_SUPPORTED")] NotSupported = 3,
        [pbr::OriginalName("INVALID_ARGUMENT")] InvalidArgument = 4,
        [pbr::OriginalName("IO_ERROR")] IoError = 5,
        [pbr::OriginalName("ALREADY_PRESENT")] AlreadyPresent = 6,
        [pbr::OriginalName("RUNTIME_ERROR")] RuntimeError = 7,
        [pbr::OriginalName("NETWORK_ERROR")] NetworkError = 8,
        [pbr::OriginalName("ILLEGAL_STATE")] IllegalState = 9,
        [pbr::OriginalName("NOT_AUTHORIZED")] NotAuthorized = 10,
        [pbr::OriginalName("ABORTED")] Aborted = 11,
        [pbr::OriginalName("REMOTE_ERROR")] RemoteError = 12,
        [pbr::OriginalName("SERVICE_UNAVAILABLE")] ServiceUnavailable = 13,
        [pbr::OriginalName("TIMED_OUT")] TimedOut = 14,
        [pbr::OriginalName("UNINITIALIZED")] Uninitialized = 15,
        [pbr::OriginalName("CONFIGURATION_ERROR")] ConfigurationError = 16,
        [pbr::OriginalName("INCOMPLETE")] Incomplete = 17,
        [pbr::OriginalName("END_OF_FILE")] EndOfFile = 18,
        [pbr::OriginalName("CANCELLED")] Cancelled = 19,
      }

    }
    #endregion

  }

  /// <summary>
  /// Uniquely identify a particular instance of a particular server in the
  /// cluster.
  /// </summary>
  public sealed partial class NodeInstancePB : pb::IMessage<NodeInstancePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<NodeInstancePB> _parser = new pb::MessageParser<NodeInstancePB>(() => new NodeInstancePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeInstancePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInstancePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInstancePB(NodeInstancePB other) : this() {
      _hasBits0 = other._hasBits0;
      permanentUuid_ = other.permanentUuid_;
      instanceSeqno_ = other.instanceSeqno_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInstancePB Clone() {
      return new NodeInstancePB(this);
    }

    /// <summary>Field number for the "permanent_uuid" field.</summary>
    public const int PermanentUuidFieldNumber = 1;
    private readonly static pb::ByteString PermanentUuidDefaultValue = pb::ByteString.Empty;

    private pb::ByteString permanentUuid_;
    /// <summary>
    /// Unique ID which is created when the server is first started
    /// up. This is stored persistently on disk.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PermanentUuid {
      get { return permanentUuid_ ?? PermanentUuidDefaultValue; }
      set {
        permanentUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "permanent_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermanentUuid {
      get { return permanentUuid_ != null; }
    }
    /// <summary>Clears the value of the "permanent_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermanentUuid() {
      permanentUuid_ = null;
    }

    /// <summary>Field number for the "instance_seqno" field.</summary>
    public const int InstanceSeqnoFieldNumber = 2;
    private readonly static long InstanceSeqnoDefaultValue = 0L;

    private long instanceSeqno_;
    /// <summary>
    /// Sequence number incremented on every start-up of the server.
    /// This makes it easy to detect when an instance has restarted (and
    /// thus can be assumed to have forgotten any soft state it had in
    /// memory).
    ///
    /// On a freshly initialized server, the first sequence number
    /// should be 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long InstanceSeqno {
      get { if ((_hasBits0 & 1) != 0) { return instanceSeqno_; } else { return InstanceSeqnoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        instanceSeqno_ = value;
      }
    }
    /// <summary>Gets whether the "instance_seqno" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstanceSeqno {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "instance_seqno" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstanceSeqno() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeInstancePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeInstancePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PermanentUuid != other.PermanentUuid) return false;
      if (InstanceSeqno != other.InstanceSeqno) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPermanentUuid) hash ^= PermanentUuid.GetHashCode();
      if (HasInstanceSeqno) hash ^= InstanceSeqno.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPermanentUuid) {
        output.WriteRawTag(10);
        output.WriteBytes(PermanentUuid);
      }
      if (HasInstanceSeqno) {
        output.WriteRawTag(16);
        output.WriteInt64(InstanceSeqno);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPermanentUuid) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PermanentUuid);
      }
      if (HasInstanceSeqno) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceSeqno);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeInstancePB other) {
      if (other == null) {
        return;
      }
      if (other.HasPermanentUuid) {
        PermanentUuid = other.PermanentUuid;
      }
      if (other.HasInstanceSeqno) {
        InstanceSeqno = other.InstanceSeqno;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PermanentUuid = input.ReadBytes();
            break;
          }
          case 16: {
            InstanceSeqno = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Some basic properties common to both masters and tservers.
  /// They are guaranteed not to change unless the server is restarted.
  /// </summary>
  public sealed partial class ServerRegistrationPB : pb::IMessage<ServerRegistrationPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ServerRegistrationPB> _parser = new pb::MessageParser<ServerRegistrationPB>(() => new ServerRegistrationPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerRegistrationPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerRegistrationPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerRegistrationPB(ServerRegistrationPB other) : this() {
      _hasBits0 = other._hasBits0;
      rpcAddresses_ = other.rpcAddresses_.Clone();
      httpAddresses_ = other.httpAddresses_.Clone();
      softwareVersion_ = other.softwareVersion_;
      httpsEnabled_ = other.httpsEnabled_;
      startTime_ = other.startTime_;
      unixDomainSocketPath_ = other.unixDomainSocketPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerRegistrationPB Clone() {
      return new ServerRegistrationPB(this);
    }

    /// <summary>Field number for the "rpc_addresses" field.</summary>
    public const int RpcAddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.HostPortPB> _repeated_rpcAddresses_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.HostPortPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> rpcAddresses_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> RpcAddresses {
      get { return rpcAddresses_; }
    }

    /// <summary>Field number for the "http_addresses" field.</summary>
    public const int HttpAddressesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.HostPortPB> _repeated_httpAddresses_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.HostPortPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> httpAddresses_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> HttpAddresses {
      get { return httpAddresses_; }
    }

    /// <summary>Field number for the "software_version" field.</summary>
    public const int SoftwareVersionFieldNumber = 3;
    private readonly static string SoftwareVersionDefaultValue = "";

    private string softwareVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SoftwareVersion {
      get { return softwareVersion_ ?? SoftwareVersionDefaultValue; }
      set {
        softwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "software_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoftwareVersion {
      get { return softwareVersion_ != null; }
    }
    /// <summary>Clears the value of the "software_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoftwareVersion() {
      softwareVersion_ = null;
    }

    /// <summary>Field number for the "https_enabled" field.</summary>
    public const int HttpsEnabledFieldNumber = 4;
    private readonly static bool HttpsEnabledDefaultValue = false;

    private bool httpsEnabled_;
    /// <summary>
    /// True if HTTPS has been enabled for the web interface.
    /// In this case, https:// URLs should be generated for the above
    /// 'http_addresses' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HttpsEnabled {
      get { if ((_hasBits0 & 1) != 0) { return httpsEnabled_; } else { return HttpsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        httpsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "https_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHttpsEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "https_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHttpsEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    /// <summary>
    /// The wall clock time when the server started as seconds since the Epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { if ((_hasBits0 & 2) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "unix_domain_socket_path" field.</summary>
    public const int UnixDomainSocketPathFieldNumber = 6;
    private readonly static string UnixDomainSocketPathDefaultValue = "";

    private string unixDomainSocketPath_;
    /// <summary>
    /// The path of a UNIX domain socket where the server is listening.
    /// An '@' prefix indicates the abstract namespace. May be missing
    /// if this feature is not enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnixDomainSocketPath {
      get { return unixDomainSocketPath_ ?? UnixDomainSocketPathDefaultValue; }
      set {
        unixDomainSocketPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unix_domain_socket_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnixDomainSocketPath {
      get { return unixDomainSocketPath_ != null; }
    }
    /// <summary>Clears the value of the "unix_domain_socket_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnixDomainSocketPath() {
      unixDomainSocketPath_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerRegistrationPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerRegistrationPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rpcAddresses_.Equals(other.rpcAddresses_)) return false;
      if(!httpAddresses_.Equals(other.httpAddresses_)) return false;
      if (SoftwareVersion != other.SoftwareVersion) return false;
      if (HttpsEnabled != other.HttpsEnabled) return false;
      if (StartTime != other.StartTime) return false;
      if (UnixDomainSocketPath != other.UnixDomainSocketPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rpcAddresses_.GetHashCode();
      hash ^= httpAddresses_.GetHashCode();
      if (HasSoftwareVersion) hash ^= SoftwareVersion.GetHashCode();
      if (HasHttpsEnabled) hash ^= HttpsEnabled.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasUnixDomainSocketPath) hash ^= UnixDomainSocketPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rpcAddresses_.WriteTo(ref output, _repeated_rpcAddresses_codec);
      httpAddresses_.WriteTo(ref output, _repeated_httpAddresses_codec);
      if (HasSoftwareVersion) {
        output.WriteRawTag(26);
        output.WriteString(SoftwareVersion);
      }
      if (HasHttpsEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(HttpsEnabled);
      }
      if (HasStartTime) {
        output.WriteRawTag(40);
        output.WriteInt64(StartTime);
      }
      if (HasUnixDomainSocketPath) {
        output.WriteRawTag(50);
        output.WriteString(UnixDomainSocketPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rpcAddresses_.CalculateSize(_repeated_rpcAddresses_codec);
      size += httpAddresses_.CalculateSize(_repeated_httpAddresses_codec);
      if (HasSoftwareVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftwareVersion);
      }
      if (HasHttpsEnabled) {
        size += 1 + 1;
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasUnixDomainSocketPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnixDomainSocketPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerRegistrationPB other) {
      if (other == null) {
        return;
      }
      rpcAddresses_.Add(other.rpcAddresses_);
      httpAddresses_.Add(other.httpAddresses_);
      if (other.HasSoftwareVersion) {
        SoftwareVersion = other.SoftwareVersion;
      }
      if (other.HasHttpsEnabled) {
        HttpsEnabled = other.HttpsEnabled;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasUnixDomainSocketPath) {
        UnixDomainSocketPath = other.UnixDomainSocketPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rpcAddresses_.AddEntriesFrom(ref input, _repeated_rpcAddresses_codec);
            break;
          }
          case 18: {
            httpAddresses_.AddEntriesFrom(ref input, _repeated_httpAddresses_codec);
            break;
          }
          case 26: {
            SoftwareVersion = input.ReadString();
            break;
          }
          case 32: {
            HttpsEnabled = input.ReadBool();
            break;
          }
          case 40: {
            StartTime = input.ReadInt64();
            break;
          }
          case 50: {
            UnixDomainSocketPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerEntryPB : pb::IMessage<ServerEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ServerEntryPB> _parser = new pb::MessageParser<ServerEntryPB>(() => new ServerEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerEntryPB(ServerEntryPB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      registration_ = other.registration_ != null ? other.registration_.Clone() : null;
      role_ = other.role_;
      clusterId_ = other.clusterId_;
      memberType_ = other.memberType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerEntryPB Clone() {
      return new ServerEntryPB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB error_;
    /// <summary>
    /// If there is an error communicating with the server (or retrieving
    /// the server registration on the server itself), this field will be
    /// set to contain the error.
    ///
    /// All subsequent fields are optional, as they may not be set if
    /// an error is encountered communicating with the individual server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.NodeInstancePB instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.NodeInstancePB InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB registration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 4;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

    private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
    /// <summary>
    /// If an error has occurred earlier in the RPC call, the role
    /// may be not be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
      get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 5;
    private readonly static string ClusterIdDefaultValue = "";

    private string clusterId_;
    /// <summary>
    /// The unique cluster ID of the cluster this server belongs too.
    /// TODO(ghenke): Currently only set for masters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_ ?? ClusterIdDefaultValue; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cluster_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClusterId {
      get { return clusterId_ != null; }
    }
    /// <summary>Clears the value of the "cluster_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClusterId() {
      clusterId_ = null;
    }

    /// <summary>Field number for the "member_type" field.</summary>
    public const int MemberTypeFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType MemberTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType.UnknownMemberType;

    private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType memberType_;
    /// <summary>
    /// If an error has occurred earlier in the RPC call, the
    /// member_type may not be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType MemberType {
      get { if ((_hasBits0 & 2) != 0) { return memberType_; } else { return MemberTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        memberType_ = value;
      }
    }
    /// <summary>Gets whether the "member_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMemberType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "member_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMemberType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (!object.Equals(Registration, other.Registration)) return false;
      if (Role != other.Role) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MemberType != other.MemberType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (registration_ != null) hash ^= Registration.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasClusterId) hash ^= ClusterId.GetHashCode();
      if (HasMemberType) hash ^= MemberType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      if (registration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Registration);
      }
      if (HasRole) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Role);
      }
      if (HasClusterId) {
        output.WriteRawTag(42);
        output.WriteString(ClusterId);
      }
      if (HasMemberType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MemberType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (HasClusterId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (HasMemberType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MemberType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
        }
        Registration.MergeFrom(other.Registration);
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasClusterId) {
        ClusterId = other.ClusterId;
      }
      if (other.HasMemberType) {
        MemberType = other.MemberType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 26: {
            if (registration_ == null) {
              Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 32: {
            Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
            break;
          }
          case 42: {
            ClusterId = input.ReadString();
            break;
          }
          case 48: {
            MemberType = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A row block in which each row is stored contiguously.
  /// </summary>
  public sealed partial class RowwiseRowBlockPB : pb::IMessage<RowwiseRowBlockPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<RowwiseRowBlockPB> _parser = new pb::MessageParser<RowwiseRowBlockPB>(() => new RowwiseRowBlockPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RowwiseRowBlockPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RowwiseRowBlockPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RowwiseRowBlockPB(RowwiseRowBlockPB other) : this() {
      _hasBits0 = other._hasBits0;
      numRows_ = other.numRows_;
      rowsSidecar_ = other.rowsSidecar_;
      indirectDataSidecar_ = other.indirectDataSidecar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RowwiseRowBlockPB Clone() {
      return new RowwiseRowBlockPB(this);
    }

    /// <summary>Field number for the "num_rows" field.</summary>
    public const int NumRowsFieldNumber = 1;
    private readonly static int NumRowsDefaultValue = 0;

    private int numRows_;
    /// <summary>
    /// The number of rows in the block. This can typically be calculated
    /// by dividing rows.size() by the width of the row, but in the case that
    /// the client is scanning an empty projection (i.e a COUNT(*)), this
    /// field is the only way to determine how many rows were returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumRows {
      get { if ((_hasBits0 & 1) != 0) { return numRows_; } else { return NumRowsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numRows_ = value;
      }
    }
    /// <summary>Gets whether the "num_rows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumRows {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_rows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumRows() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rows_sidecar" field.</summary>
    public const int RowsSidecarFieldNumber = 2;
    private readonly static int RowsSidecarDefaultValue = 0;

    private int rowsSidecar_;
    /// <summary>
    /// Sidecar index for the row data.
    ///
    /// In the sidecar, each row is stored in the same in-memory format
    /// as kudu::ContiguousRow (i.e the raw unencoded data followed by
    /// a null bitmap).
    ///
    /// The data for NULL cells will be present with undefined contents --
    /// typically it will be filled with \x00s but this is not guaranteed,
    /// and clients may choose to initialize NULL cells with whatever they
    /// like. Setting to some constant improves RPC compression, though.
    ///
    /// Any pointers are made relative to the beginning of the indirect
    /// data sidecar.
    ///
    /// See rpc/rpc_sidecar.h for more information on where the data is
    /// actually stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RowsSidecar {
      get { if ((_hasBits0 & 2) != 0) { return rowsSidecar_; } else { return RowsSidecarDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rowsSidecar_ = value;
      }
    }
    /// <summary>Gets whether the "rows_sidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRowsSidecar {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rows_sidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRowsSidecar() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "indirect_data_sidecar" field.</summary>
    public const int IndirectDataSidecarFieldNumber = 3;
    private readonly static int IndirectDataSidecarDefaultValue = 0;

    private int indirectDataSidecar_;
    /// <summary>
    /// Sidecar index for the indirect data.
    ///
    /// In the sidecar, "indirect" data types in the block are stored
    /// contiguously. For example, STRING values in the block will be
    /// stored using the normal Slice in-memory format, except that
    /// instead of being pointers in RAM, the pointer portion will be an
    /// offset into this protobuf field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IndirectDataSidecar {
      get { if ((_hasBits0 & 4) != 0) { return indirectDataSidecar_; } else { return IndirectDataSidecarDefaultValue; } }
      set {
        _hasBits0 |= 4;
        indirectDataSidecar_ = value;
      }
    }
    /// <summary>Gets whether the "indirect_data_sidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndirectDataSidecar {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "indirect_data_sidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndirectDataSidecar() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RowwiseRowBlockPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RowwiseRowBlockPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumRows != other.NumRows) return false;
      if (RowsSidecar != other.RowsSidecar) return false;
      if (IndirectDataSidecar != other.IndirectDataSidecar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumRows) hash ^= NumRows.GetHashCode();
      if (HasRowsSidecar) hash ^= RowsSidecar.GetHashCode();
      if (HasIndirectDataSidecar) hash ^= IndirectDataSidecar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNumRows) {
        output.WriteRawTag(8);
        output.WriteInt32(NumRows);
      }
      if (HasRowsSidecar) {
        output.WriteRawTag(16);
        output.WriteInt32(RowsSidecar);
      }
      if (HasIndirectDataSidecar) {
        output.WriteRawTag(24);
        output.WriteInt32(IndirectDataSidecar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNumRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumRows);
      }
      if (HasRowsSidecar) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowsSidecar);
      }
      if (HasIndirectDataSidecar) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndirectDataSidecar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RowwiseRowBlockPB other) {
      if (other == null) {
        return;
      }
      if (other.HasNumRows) {
        NumRows = other.NumRows;
      }
      if (other.HasRowsSidecar) {
        RowsSidecar = other.RowsSidecar;
      }
      if (other.HasIndirectDataSidecar) {
        IndirectDataSidecar = other.IndirectDataSidecar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumRows = input.ReadInt32();
            break;
          }
          case 16: {
            RowsSidecar = input.ReadInt32();
            break;
          }
          case 24: {
            IndirectDataSidecar = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A block of rows in columnar layout.
  /// </summary>
  public sealed partial class ColumnarRowBlockPB : pb::IMessage<ColumnarRowBlockPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ColumnarRowBlockPB> _parser = new pb::MessageParser<ColumnarRowBlockPB>(() => new ColumnarRowBlockPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnarRowBlockPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnarRowBlockPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnarRowBlockPB(ColumnarRowBlockPB other) : this() {
      _hasBits0 = other._hasBits0;
      columns_ = other.columns_.Clone();
      numRows_ = other.numRows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnarRowBlockPB Clone() {
      return new ColumnarRowBlockPB(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column> columns_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Types.Column> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "num_rows" field.</summary>
    public const int NumRowsFieldNumber = 2;
    private readonly static long NumRowsDefaultValue = 0L;

    private long numRows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NumRows {
      get { if ((_hasBits0 & 1) != 0) { return numRows_; } else { return NumRowsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numRows_ = value;
      }
    }
    /// <summary>Gets whether the "num_rows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumRows {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_rows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumRows() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnarRowBlockPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnarRowBlockPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      if (NumRows != other.NumRows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      if (HasNumRows) hash ^= NumRows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (HasNumRows) {
        output.WriteRawTag(16);
        output.WriteInt64(NumRows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (HasNumRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumRows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnarRowBlockPB other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      if (other.HasNumRows) {
        NumRows = other.NumRows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 16: {
            NumRows = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ColumnarRowBlockPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Column : pb::IMessage<Column>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Column> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Column() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Column(Column other) : this() {
          _hasBits0 = other._hasBits0;
          dataSidecar_ = other.dataSidecar_;
          varlenDataSidecar_ = other.varlenDataSidecar_;
          nonNullBitmapSidecar_ = other.nonNullBitmapSidecar_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Column Clone() {
          return new Column(this);
        }

        /// <summary>Field number for the "data_sidecar" field.</summary>
        public const int DataSidecarFieldNumber = 1;
        private readonly static int DataSidecarDefaultValue = 0;

        private int dataSidecar_;
        /// <summary>
        /// The index of the sidecar containing cell data of the column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DataSidecar {
          get { if ((_hasBits0 & 1) != 0) { return dataSidecar_; } else { return DataSidecarDefaultValue; } }
          set {
            _hasBits0 |= 1;
            dataSidecar_ = value;
          }
        }
        /// <summary>Gets whether the "data_sidecar" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDataSidecar {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "data_sidecar" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDataSidecar() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "varlen_data_sidecar" field.</summary>
        public const int VarlenDataSidecarFieldNumber = 2;
        private readonly static int VarlenDataSidecarDefaultValue = 0;

        private int varlenDataSidecar_;
        /// <summary>
        /// The index of the sidecar containing any data referred to by binary/string data.
        /// In this case, the `data` sidecar will contain an array of `num_rows + 1` uint32s
        /// pointing to offsets in this sidecar.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int VarlenDataSidecar {
          get { if ((_hasBits0 & 2) != 0) { return varlenDataSidecar_; } else { return VarlenDataSidecarDefaultValue; } }
          set {
            _hasBits0 |= 2;
            varlenDataSidecar_ = value;
          }
        }
        /// <summary>Gets whether the "varlen_data_sidecar" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVarlenDataSidecar {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "varlen_data_sidecar" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVarlenDataSidecar() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "non_null_bitmap_sidecar" field.</summary>
        public const int NonNullBitmapSidecarFieldNumber = 3;
        private readonly static int NonNullBitmapSidecarDefaultValue = 0;

        private int nonNullBitmapSidecar_;
        /// <summary>
        /// If the column is nullable, The index of the sidecar containing a bitmap with a set
        /// bit for all non-null cells.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NonNullBitmapSidecar {
          get { if ((_hasBits0 & 4) != 0) { return nonNullBitmapSidecar_; } else { return NonNullBitmapSidecarDefaultValue; } }
          set {
            _hasBits0 |= 4;
            nonNullBitmapSidecar_ = value;
          }
        }
        /// <summary>Gets whether the "non_null_bitmap_sidecar" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNonNullBitmapSidecar {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "non_null_bitmap_sidecar" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNonNullBitmapSidecar() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Column);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Column other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DataSidecar != other.DataSidecar) return false;
          if (VarlenDataSidecar != other.VarlenDataSidecar) return false;
          if (NonNullBitmapSidecar != other.NonNullBitmapSidecar) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDataSidecar) hash ^= DataSidecar.GetHashCode();
          if (HasVarlenDataSidecar) hash ^= VarlenDataSidecar.GetHashCode();
          if (HasNonNullBitmapSidecar) hash ^= NonNullBitmapSidecar.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasDataSidecar) {
            output.WriteRawTag(8);
            output.WriteInt32(DataSidecar);
          }
          if (HasVarlenDataSidecar) {
            output.WriteRawTag(16);
            output.WriteInt32(VarlenDataSidecar);
          }
          if (HasNonNullBitmapSidecar) {
            output.WriteRawTag(24);
            output.WriteInt32(NonNullBitmapSidecar);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasDataSidecar) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataSidecar);
          }
          if (HasVarlenDataSidecar) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VarlenDataSidecar);
          }
          if (HasNonNullBitmapSidecar) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NonNullBitmapSidecar);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Column other) {
          if (other == null) {
            return;
          }
          if (other.HasDataSidecar) {
            DataSidecar = other.DataSidecar;
          }
          if (other.HasVarlenDataSidecar) {
            VarlenDataSidecar = other.VarlenDataSidecar;
          }
          if (other.HasNonNullBitmapSidecar) {
            NonNullBitmapSidecar = other.NonNullBitmapSidecar;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DataSidecar = input.ReadInt32();
                break;
              }
              case 16: {
                VarlenDataSidecar = input.ReadInt32();
                break;
              }
              case 24: {
                NonNullBitmapSidecar = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
