// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/tablet/tablet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf.Tablet {

  /// <summary>Holder for reflection information generated from kudu/tablet/tablet.proto</summary>
  public static partial class TabletReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/tablet/tablet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TabletReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhrdWR1L3RhYmxldC90YWJsZXQucHJvdG8SC2t1ZHUudGFibGV0GhhrdWR1",
            "L2NvbW1vbi9jb21tb24ucHJvdG8aH2t1ZHUvY29tbW9uL3dpcmVfcHJvdG9j",
            "b2wucHJvdG8aGmt1ZHUvdGFibGV0L21ldGFkYXRhLnByb3RvImQKEE1lbVN0",
            "b3JlVGFyZ2V0UEISEgoGbXJzX2lkGAEgASgDOgItMRIRCgVyc19pZBgCIAEo",
            "AzoCLTESEgoGZG1zX2lkGAMgASgDOgItMRIVCglyc190eG5faWQYBCABKAM6",
            "Ai0xIpMBChFPcGVyYXRpb25SZXN1bHRQQhIdCg5za2lwX29uX3JlcGxheRgB",
            "IAEoCDoFZmFsc2USKAoNZmFpbGVkX3N0YXR1cxgCIAEoCzIRLmt1ZHUuQXBw",
            "U3RhdHVzUEISNQoObXV0YXRlZF9zdG9yZXMYAyADKAsyHS5rdWR1LnRhYmxl",
            "dC5NZW1TdG9yZVRhcmdldFBCIjkKClR4UmVzdWx0UEISKwoDb3BzGAEgAygL",
            "Mh4ua3VkdS50YWJsZXQuT3BlcmF0aW9uUmVzdWx0UEIi4gEKDERlbHRhU3Rh",
            "dHNQQhIUCgxkZWxldGVfY291bnQYASACKAMSGQoOcmVpbnNlcnRfY291bnQY",
            "BiABKAM6ATASFQoNbWluX3RpbWVzdGFtcBgDIAIoBhIVCg1tYXhfdGltZXN0",
            "YW1wGAQgAigGEjsKDGNvbHVtbl9zdGF0cxgFIAMoCzIlLmt1ZHUudGFibGV0",
            "LkRlbHRhU3RhdHNQQi5Db2x1bW5TdGF0cxo2CgtDb2x1bW5TdGF0cxIOCgZj",
            "b2xfaWQYASACKAUSFwoMdXBkYXRlX2NvdW50GAIgASgDOgEwIssCCg5UYWJs",
            "ZXRTdGF0dXNQQhIRCgl0YWJsZXRfaWQYASACKAkSEgoKdGFibGVfbmFtZRgC",
            "IAIoCRIyCgVzdGF0ZRgDIAEoDjIaLmt1ZHUudGFibGV0LlRhYmxldFN0YXRl",
            "UEI6B1VOS05PV04STAoRdGFibGV0X2RhdGFfc3RhdGUYCCABKA4yHC5rdWR1",
            "LnRhYmxldC5UYWJsZXREYXRhU3RhdGU6E1RBQkxFVF9EQVRBX1VOS05PV04S",
            "EwoLbGFzdF9zdGF0dXMYBCACKAkSEQoJc3RhcnRfa2V5GAUgASgMEg8KB2Vu",
            "ZF9rZXkYBiABKAwSJAoJcGFydGl0aW9uGAkgASgLMhEua3VkdS5QYXJ0aXRp",
            "b25QQhIeChZlc3RpbWF0ZWRfb25fZGlza19zaXplGAcgASgDEhEKCWRhdGFf",
            "ZGlycxgKIAMoDEI7ChZvcmcuYXBhY2hlLmt1ZHUudGFibGV0qgIgS25ldC5L",
            "dWR1LkNsaWVudC5Qcm90b2J1Zi5UYWJsZXQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Knet.Kudu.Client.Protobuf.CommonReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Tablet.MetadataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB), global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB.Parser, new[]{ "MrsId", "RsId", "DmsId", "RsTxnId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB), global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB.Parser, new[]{ "SkipOnReplay", "FailedStatus", "MutatedStores" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.TxResultPB), global::Knet.Kudu.Client.Protobuf.Tablet.TxResultPB.Parser, new[]{ "Ops" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB), global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Parser, new[]{ "DeleteCount", "ReinsertCount", "MinTimestamp", "MaxTimestamp", "ColumnStats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats), global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats.Parser, new[]{ "ColId", "UpdateCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB), global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB.Parser, new[]{ "TabletId", "TableName", "State", "TabletDataState", "LastStatus", "StartKey", "EndKey", "Partition", "EstimatedOnDiskSize", "DataDirs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Stores the id of the MemRowSet (for inserts or mutations against MRS)
  /// or of the (row set, delta ID) pair for mutations against a DiskRowSet.
  /// </summary>
  public sealed partial class MemStoreTargetPB : pb::IMessage<MemStoreTargetPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<MemStoreTargetPB> _parser = new pb::MessageParser<MemStoreTargetPB>(() => new MemStoreTargetPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MemStoreTargetPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemStoreTargetPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemStoreTargetPB(MemStoreTargetPB other) : this() {
      _hasBits0 = other._hasBits0;
      mrsId_ = other.mrsId_;
      rsId_ = other.rsId_;
      dmsId_ = other.dmsId_;
      rsTxnId_ = other.rsTxnId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemStoreTargetPB Clone() {
      return new MemStoreTargetPB(this);
    }

    /// <summary>Field number for the "mrs_id" field.</summary>
    public const int MrsIdFieldNumber = 1;
    private readonly static long MrsIdDefaultValue = -1L;

    private long mrsId_;
    /// <summary>
    /// Either this field...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MrsId {
      get { if ((_hasBits0 & 1) != 0) { return mrsId_; } else { return MrsIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mrsId_ = value;
      }
    }
    /// <summary>Gets whether the "mrs_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMrsId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mrs_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMrsId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rs_id" field.</summary>
    public const int RsIdFieldNumber = 2;
    private readonly static long RsIdDefaultValue = -1L;

    private long rsId_;
    /// <summary>
    /// ... or both of the following fields are set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RsId {
      get { if ((_hasBits0 & 2) != 0) { return rsId_; } else { return RsIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rsId_ = value;
      }
    }
    /// <summary>Gets whether the "rs_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRsId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rs_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRsId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dms_id" field.</summary>
    public const int DmsIdFieldNumber = 3;
    private readonly static long DmsIdDefaultValue = -1L;

    private long dmsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DmsId {
      get { if ((_hasBits0 & 4) != 0) { return dmsId_; } else { return DmsIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dmsId_ = value;
      }
    }
    /// <summary>Gets whether the "dms_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDmsId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dms_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDmsId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rs_txn_id" field.</summary>
    public const int RsTxnIdFieldNumber = 4;
    private readonly static long RsTxnIdDefaultValue = -1L;

    private long rsTxnId_;
    /// <summary>
    /// If the mutation landed in a rowset whose base data was inserted as a part
    /// of a transaction, the rowset will have a transaction ID associated with
    /// it that differentiates it from rowsets that were not inserted as a part of
    /// a transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RsTxnId {
      get { if ((_hasBits0 & 8) != 0) { return rsTxnId_; } else { return RsTxnIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rsTxnId_ = value;
      }
    }
    /// <summary>Gets whether the "rs_txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRsTxnId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rs_txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRsTxnId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MemStoreTargetPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MemStoreTargetPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MrsId != other.MrsId) return false;
      if (RsId != other.RsId) return false;
      if (DmsId != other.DmsId) return false;
      if (RsTxnId != other.RsTxnId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMrsId) hash ^= MrsId.GetHashCode();
      if (HasRsId) hash ^= RsId.GetHashCode();
      if (HasDmsId) hash ^= DmsId.GetHashCode();
      if (HasRsTxnId) hash ^= RsTxnId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMrsId) {
        output.WriteRawTag(8);
        output.WriteInt64(MrsId);
      }
      if (HasRsId) {
        output.WriteRawTag(16);
        output.WriteInt64(RsId);
      }
      if (HasDmsId) {
        output.WriteRawTag(24);
        output.WriteInt64(DmsId);
      }
      if (HasRsTxnId) {
        output.WriteRawTag(32);
        output.WriteInt64(RsTxnId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMrsId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MrsId);
      }
      if (HasRsId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RsId);
      }
      if (HasDmsId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DmsId);
      }
      if (HasRsTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RsTxnId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MemStoreTargetPB other) {
      if (other == null) {
        return;
      }
      if (other.HasMrsId) {
        MrsId = other.MrsId;
      }
      if (other.HasRsId) {
        RsId = other.RsId;
      }
      if (other.HasDmsId) {
        DmsId = other.DmsId;
      }
      if (other.HasRsTxnId) {
        RsTxnId = other.RsTxnId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MrsId = input.ReadInt64();
            break;
          }
          case 16: {
            RsId = input.ReadInt64();
            break;
          }
          case 24: {
            DmsId = input.ReadInt64();
            break;
          }
          case 32: {
            RsTxnId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Stores the result of an Insert or Mutate.
  /// </summary>
  public sealed partial class OperationResultPB : pb::IMessage<OperationResultPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<OperationResultPB> _parser = new pb::MessageParser<OperationResultPB>(() => new OperationResultPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OperationResultPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationResultPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationResultPB(OperationResultPB other) : this() {
      _hasBits0 = other._hasBits0;
      skipOnReplay_ = other.skipOnReplay_;
      failedStatus_ = other.failedStatus_ != null ? other.failedStatus_.Clone() : null;
      mutatedStores_ = other.mutatedStores_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationResultPB Clone() {
      return new OperationResultPB(this);
    }

    /// <summary>Field number for the "skip_on_replay" field.</summary>
    public const int SkipOnReplayFieldNumber = 1;
    private readonly static bool SkipOnReplayDefaultValue = false;

    private bool skipOnReplay_;
    /// <summary>
    /// set on replay to reflect that this operation was already flushed or had previously
    /// failed and should not be applied again.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SkipOnReplay {
      get { if ((_hasBits0 & 1) != 0) { return skipOnReplay_; } else { return SkipOnReplayDefaultValue; } }
      set {
        _hasBits0 |= 1;
        skipOnReplay_ = value;
      }
    }
    /// <summary>Gets whether the "skip_on_replay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkipOnReplay {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "skip_on_replay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkipOnReplay() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "failed_status" field.</summary>
    public const int FailedStatusFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB failedStatus_;
    /// <summary>
    /// set if this particular operation failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB FailedStatus {
      get { return failedStatus_; }
      set {
        failedStatus_ = value;
      }
    }

    /// <summary>Field number for the "mutated_stores" field.</summary>
    public const int MutatedStoresFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB> _repeated_mutatedStores_codec
        = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB> mutatedStores_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB>();
    /// <summary>
    /// The stores that the operation affected.
    /// For INSERTs, this will always be just one store.
    /// For MUTATE, it may be more than one if the mutation arrived during
    /// a compaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.MemStoreTargetPB> MutatedStores {
      get { return mutatedStores_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OperationResultPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OperationResultPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkipOnReplay != other.SkipOnReplay) return false;
      if (!object.Equals(FailedStatus, other.FailedStatus)) return false;
      if(!mutatedStores_.Equals(other.mutatedStores_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSkipOnReplay) hash ^= SkipOnReplay.GetHashCode();
      if (failedStatus_ != null) hash ^= FailedStatus.GetHashCode();
      hash ^= mutatedStores_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSkipOnReplay) {
        output.WriteRawTag(8);
        output.WriteBool(SkipOnReplay);
      }
      if (failedStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FailedStatus);
      }
      mutatedStores_.WriteTo(ref output, _repeated_mutatedStores_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSkipOnReplay) {
        size += 1 + 1;
      }
      if (failedStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FailedStatus);
      }
      size += mutatedStores_.CalculateSize(_repeated_mutatedStores_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OperationResultPB other) {
      if (other == null) {
        return;
      }
      if (other.HasSkipOnReplay) {
        SkipOnReplay = other.SkipOnReplay;
      }
      if (other.failedStatus_ != null) {
        if (failedStatus_ == null) {
          FailedStatus = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        FailedStatus.MergeFrom(other.FailedStatus);
      }
      mutatedStores_.Add(other.mutatedStores_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkipOnReplay = input.ReadBool();
            break;
          }
          case 18: {
            if (failedStatus_ == null) {
              FailedStatus = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(FailedStatus);
            break;
          }
          case 26: {
            mutatedStores_.AddEntriesFrom(ref input, _repeated_mutatedStores_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The final result of an op, including the result of each individual
  /// operation.
  /// </summary>
  public sealed partial class TxResultPB : pb::IMessage<TxResultPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TxResultPB> _parser = new pb::MessageParser<TxResultPB>(() => new TxResultPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TxResultPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxResultPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxResultPB(TxResultPB other) : this() {
      ops_ = other.ops_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxResultPB Clone() {
      return new TxResultPB(this);
    }

    /// <summary>Field number for the "ops" field.</summary>
    public const int OpsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB> _repeated_ops_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB> ops_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB>();
    /// <summary>
    /// all the operations in this op
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.OperationResultPB> Ops {
      get { return ops_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TxResultPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TxResultPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ops_.Equals(other.ops_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ops_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ops_.WriteTo(ref output, _repeated_ops_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ops_.CalculateSize(_repeated_ops_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TxResultPB other) {
      if (other == null) {
        return;
      }
      ops_.Add(other.ops_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ops_.AddEntriesFrom(ref input, _repeated_ops_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Delta statistics for a flushed deltastore
  /// </summary>
  public sealed partial class DeltaStatsPB : pb::IMessage<DeltaStatsPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DeltaStatsPB> _parser = new pb::MessageParser<DeltaStatsPB>(() => new DeltaStatsPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeltaStatsPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaStatsPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaStatsPB(DeltaStatsPB other) : this() {
      _hasBits0 = other._hasBits0;
      deleteCount_ = other.deleteCount_;
      reinsertCount_ = other.reinsertCount_;
      minTimestamp_ = other.minTimestamp_;
      maxTimestamp_ = other.maxTimestamp_;
      columnStats_ = other.columnStats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaStatsPB Clone() {
      return new DeltaStatsPB(this);
    }

    /// <summary>Field number for the "delete_count" field.</summary>
    public const int DeleteCountFieldNumber = 1;
    private readonly static long DeleteCountDefaultValue = 0L;

    private long deleteCount_;
    /// <summary>
    /// Number of deletes (deletes result in deletion of an entire row)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DeleteCount {
      get { if ((_hasBits0 & 1) != 0) { return deleteCount_; } else { return DeleteCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleteCount_ = value;
      }
    }
    /// <summary>Gets whether the "delete_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeleteCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "delete_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeleteCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reinsert_count" field.</summary>
    public const int ReinsertCountFieldNumber = 6;
    private readonly static long ReinsertCountDefaultValue = 0L;

    private long reinsertCount_;
    /// <summary>
    /// Number of reinserts.
    /// Optional for data format compatibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReinsertCount {
      get { if ((_hasBits0 & 8) != 0) { return reinsertCount_; } else { return ReinsertCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        reinsertCount_ = value;
      }
    }
    /// <summary>Gets whether the "reinsert_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReinsertCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "reinsert_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReinsertCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "min_timestamp" field.</summary>
    public const int MinTimestampFieldNumber = 3;
    private readonly static ulong MinTimestampDefaultValue = 0UL;

    private ulong minTimestamp_;
    /// <summary>
    /// The min Timestamp that was stored in this delta.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MinTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return minTimestamp_; } else { return MinTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "min_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_timestamp" field.</summary>
    public const int MaxTimestampFieldNumber = 4;
    private readonly static ulong MaxTimestampDefaultValue = 0UL;

    private ulong maxTimestamp_;
    /// <summary>
    /// The max Timestamp that was stored in this delta.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MaxTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return maxTimestamp_; } else { return MaxTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "max_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxTimestamp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "column_stats" field.</summary>
    public const int ColumnStatsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats> _repeated_columnStats_codec
        = pb::FieldCodec.ForMessage(42, global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats> columnStats_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Types.ColumnStats> ColumnStats {
      get { return columnStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeltaStatsPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeltaStatsPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteCount != other.DeleteCount) return false;
      if (ReinsertCount != other.ReinsertCount) return false;
      if (MinTimestamp != other.MinTimestamp) return false;
      if (MaxTimestamp != other.MaxTimestamp) return false;
      if(!columnStats_.Equals(other.columnStats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeleteCount) hash ^= DeleteCount.GetHashCode();
      if (HasReinsertCount) hash ^= ReinsertCount.GetHashCode();
      if (HasMinTimestamp) hash ^= MinTimestamp.GetHashCode();
      if (HasMaxTimestamp) hash ^= MaxTimestamp.GetHashCode();
      hash ^= columnStats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeleteCount) {
        output.WriteRawTag(8);
        output.WriteInt64(DeleteCount);
      }
      if (HasMinTimestamp) {
        output.WriteRawTag(25);
        output.WriteFixed64(MinTimestamp);
      }
      if (HasMaxTimestamp) {
        output.WriteRawTag(33);
        output.WriteFixed64(MaxTimestamp);
      }
      columnStats_.WriteTo(ref output, _repeated_columnStats_codec);
      if (HasReinsertCount) {
        output.WriteRawTag(48);
        output.WriteInt64(ReinsertCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeleteCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeleteCount);
      }
      if (HasReinsertCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReinsertCount);
      }
      if (HasMinTimestamp) {
        size += 1 + 8;
      }
      if (HasMaxTimestamp) {
        size += 1 + 8;
      }
      size += columnStats_.CalculateSize(_repeated_columnStats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeltaStatsPB other) {
      if (other == null) {
        return;
      }
      if (other.HasDeleteCount) {
        DeleteCount = other.DeleteCount;
      }
      if (other.HasReinsertCount) {
        ReinsertCount = other.ReinsertCount;
      }
      if (other.HasMinTimestamp) {
        MinTimestamp = other.MinTimestamp;
      }
      if (other.HasMaxTimestamp) {
        MaxTimestamp = other.MaxTimestamp;
      }
      columnStats_.Add(other.columnStats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeleteCount = input.ReadInt64();
            break;
          }
          case 25: {
            MinTimestamp = input.ReadFixed64();
            break;
          }
          case 33: {
            MaxTimestamp = input.ReadFixed64();
            break;
          }
          case 42: {
            columnStats_.AddEntriesFrom(ref input, _repeated_columnStats_codec);
            break;
          }
          case 48: {
            ReinsertCount = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeltaStatsPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Per-column statistics about this delta file.
      /// </summary>
      public sealed partial class ColumnStats : pb::IMessage<ColumnStats>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<ColumnStats> _parser = new pb::MessageParser<ColumnStats>(() => new ColumnStats());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ColumnStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tablet.DeltaStatsPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnStats(ColumnStats other) : this() {
          _hasBits0 = other._hasBits0;
          colId_ = other.colId_;
          updateCount_ = other.updateCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ColumnStats Clone() {
          return new ColumnStats(this);
        }

        /// <summary>Field number for the "col_id" field.</summary>
        public const int ColIdFieldNumber = 1;
        private readonly static int ColIdDefaultValue = 0;

        private int colId_;
        /// <summary>
        /// The column ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ColId {
          get { if ((_hasBits0 & 1) != 0) { return colId_; } else { return ColIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            colId_ = value;
          }
        }
        /// <summary>Gets whether the "col_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasColId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "col_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearColId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "update_count" field.</summary>
        public const int UpdateCountFieldNumber = 2;
        private readonly static long UpdateCountDefaultValue = 0L;

        private long updateCount_;
        /// <summary>
        /// The number of updates which refer to this column ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long UpdateCount {
          get { if ((_hasBits0 & 2) != 0) { return updateCount_; } else { return UpdateCountDefaultValue; } }
          set {
            _hasBits0 |= 2;
            updateCount_ = value;
          }
        }
        /// <summary>Gets whether the "update_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUpdateCount {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "update_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUpdateCount() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ColumnStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ColumnStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ColId != other.ColId) return false;
          if (UpdateCount != other.UpdateCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasColId) hash ^= ColId.GetHashCode();
          if (HasUpdateCount) hash ^= UpdateCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasColId) {
            output.WriteRawTag(8);
            output.WriteInt32(ColId);
          }
          if (HasUpdateCount) {
            output.WriteRawTag(16);
            output.WriteInt64(UpdateCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasColId) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColId);
          }
          if (HasUpdateCount) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ColumnStats other) {
          if (other == null) {
            return;
          }
          if (other.HasColId) {
            ColId = other.ColId;
          }
          if (other.HasUpdateCount) {
            UpdateCount = other.UpdateCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ColId = input.ReadInt32();
                break;
              }
              case 16: {
                UpdateCount = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TabletStatusPB : pb::IMessage<TabletStatusPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletStatusPB> _parser = new pb::MessageParser<TabletStatusPB>(() => new TabletStatusPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletStatusPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletStatusPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletStatusPB(TabletStatusPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      tableName_ = other.tableName_;
      state_ = other.state_;
      tabletDataState_ = other.tabletDataState_;
      lastStatus_ = other.lastStatus_;
      startKey_ = other.startKey_;
      endKey_ = other.endKey_;
      partition_ = other.partition_ != null ? other.partition_.Clone() : null;
      estimatedOnDiskSize_ = other.estimatedOnDiskSize_;
      dataDirs_ = other.dataDirs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletStatusPB Clone() {
      return new TabletStatusPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static string TabletIdDefaultValue = "";

    private string tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 2;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tablet_data_state" field.</summary>
    public const int TabletDataStateFieldNumber = 8;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState TabletDataStateDefaultValue = global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState.TabletDataUnknown;

    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState tabletDataState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState TabletDataState {
      get { if ((_hasBits0 & 4) != 0) { return tabletDataState_; } else { return TabletDataStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tabletDataState_ = value;
      }
    }
    /// <summary>Gets whether the "tablet_data_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletDataState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tablet_data_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletDataState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "last_status" field.</summary>
    public const int LastStatusFieldNumber = 4;
    private readonly static string LastStatusDefaultValue = "";

    private string lastStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastStatus {
      get { return lastStatus_ ?? LastStatusDefaultValue; }
      set {
        lastStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastStatus {
      get { return lastStatus_ != null; }
    }
    /// <summary>Clears the value of the "last_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastStatus() {
      lastStatus_ = null;
    }

    /// <summary>Field number for the "start_key" field.</summary>
    public const int StartKeyFieldNumber = 5;
    private readonly static pb::ByteString StartKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString startKey_;
    /// <summary>
    /// DEPRECATED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StartKey {
      get { return startKey_ ?? StartKeyDefaultValue; }
      set {
        startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartKey {
      get { return startKey_ != null; }
    }
    /// <summary>Clears the value of the "start_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartKey() {
      startKey_ = null;
    }

    /// <summary>Field number for the "end_key" field.</summary>
    public const int EndKeyFieldNumber = 6;
    private readonly static pb::ByteString EndKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString endKey_;
    /// <summary>
    /// DEPRECATED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EndKey {
      get { return endKey_ ?? EndKeyDefaultValue; }
      set {
        endKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndKey {
      get { return endKey_ != null; }
    }
    /// <summary>Clears the value of the "end_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndKey() {
      endKey_ = null;
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 9;
    private global::Knet.Kudu.Client.Protobuf.PartitionPB partition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionPB Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "estimated_on_disk_size" field.</summary>
    public const int EstimatedOnDiskSizeFieldNumber = 7;
    private readonly static long EstimatedOnDiskSizeDefaultValue = 0L;

    private long estimatedOnDiskSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EstimatedOnDiskSize {
      get { if ((_hasBits0 & 2) != 0) { return estimatedOnDiskSize_; } else { return EstimatedOnDiskSizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        estimatedOnDiskSize_ = value;
      }
    }
    /// <summary>Gets whether the "estimated_on_disk_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEstimatedOnDiskSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "estimated_on_disk_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEstimatedOnDiskSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "data_dirs" field.</summary>
    public const int DataDirsFieldNumber = 10;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_dataDirs_codec
        = pb::FieldCodec.ForBytes(82);
    private readonly pbc::RepeatedField<pb::ByteString> dataDirs_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> DataDirs {
      get { return dataDirs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletStatusPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletStatusPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (TableName != other.TableName) return false;
      if (State != other.State) return false;
      if (TabletDataState != other.TabletDataState) return false;
      if (LastStatus != other.LastStatus) return false;
      if (StartKey != other.StartKey) return false;
      if (EndKey != other.EndKey) return false;
      if (!object.Equals(Partition, other.Partition)) return false;
      if (EstimatedOnDiskSize != other.EstimatedOnDiskSize) return false;
      if(!dataDirs_.Equals(other.dataDirs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasTabletDataState) hash ^= TabletDataState.GetHashCode();
      if (HasLastStatus) hash ^= LastStatus.GetHashCode();
      if (HasStartKey) hash ^= StartKey.GetHashCode();
      if (HasEndKey) hash ^= EndKey.GetHashCode();
      if (partition_ != null) hash ^= Partition.GetHashCode();
      if (HasEstimatedOnDiskSize) hash ^= EstimatedOnDiskSize.GetHashCode();
      hash ^= dataDirs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteString(TabletId);
      }
      if (HasTableName) {
        output.WriteRawTag(18);
        output.WriteString(TableName);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (HasLastStatus) {
        output.WriteRawTag(34);
        output.WriteString(LastStatus);
      }
      if (HasStartKey) {
        output.WriteRawTag(42);
        output.WriteBytes(StartKey);
      }
      if (HasEndKey) {
        output.WriteRawTag(50);
        output.WriteBytes(EndKey);
      }
      if (HasEstimatedOnDiskSize) {
        output.WriteRawTag(56);
        output.WriteInt64(EstimatedOnDiskSize);
      }
      if (HasTabletDataState) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TabletDataState);
      }
      if (partition_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Partition);
      }
      dataDirs_.WriteTo(ref output, _repeated_dataDirs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabletId);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasTabletDataState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TabletDataState);
      }
      if (HasLastStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastStatus);
      }
      if (HasStartKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartKey);
      }
      if (HasEndKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndKey);
      }
      if (partition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partition);
      }
      if (HasEstimatedOnDiskSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedOnDiskSize);
      }
      size += dataDirs_.CalculateSize(_repeated_dataDirs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletStatusPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasTabletDataState) {
        TabletDataState = other.TabletDataState;
      }
      if (other.HasLastStatus) {
        LastStatus = other.LastStatus;
      }
      if (other.HasStartKey) {
        StartKey = other.StartKey;
      }
      if (other.HasEndKey) {
        EndKey = other.EndKey;
      }
      if (other.partition_ != null) {
        if (partition_ == null) {
          Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
        }
        Partition.MergeFrom(other.Partition);
      }
      if (other.HasEstimatedOnDiskSize) {
        EstimatedOnDiskSize = other.EstimatedOnDiskSize;
      }
      dataDirs_.Add(other.dataDirs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadString();
            break;
          }
          case 18: {
            TableName = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB) input.ReadEnum();
            break;
          }
          case 34: {
            LastStatus = input.ReadString();
            break;
          }
          case 42: {
            StartKey = input.ReadBytes();
            break;
          }
          case 50: {
            EndKey = input.ReadBytes();
            break;
          }
          case 56: {
            EstimatedOnDiskSize = input.ReadInt64();
            break;
          }
          case 64: {
            TabletDataState = (global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState) input.ReadEnum();
            break;
          }
          case 74: {
            if (partition_ == null) {
              Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
            }
            input.ReadMessage(Partition);
            break;
          }
          case 82: {
            dataDirs_.AddEntriesFrom(ref input, _repeated_dataDirs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
