// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/master/master.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf.Master {

  /// <summary>Holder for reflection information generated from kudu/master/master.proto</summary>
  public static partial class MasterReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/master/master.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MasterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhrdWR1L21hc3Rlci9tYXN0ZXIucHJvdG8SC2t1ZHUubWFzdGVyGhhrdWR1",
            "L2NvbW1vbi9jb21tb24ucHJvdG8aIGt1ZHUvY29tbW9uL3Jvd19vcGVyYXRp",
            "b25zLnByb3RvGh9rdWR1L2NvbW1vbi93aXJlX3Byb3RvY29sLnByb3RvGh1r",
            "dWR1L2NvbnNlbnN1cy9tZXRhZGF0YS5wcm90bxona3VkdS9jb25zZW5zdXMv",
            "cmVwbGljYV9tYW5hZ2VtZW50LnByb3RvGhlrdWR1L3JwYy9ycGNfaGVhZGVy",
            "LnByb3RvGhlrdWR1L3NlY3VyaXR5L3Rva2VuLnByb3RvGhprdWR1L3RhYmxl",
            "dC9tZXRhZGF0YS5wcm90bxoXa3VkdS91dGlsL3BiX3V0aWwucHJvdG8i9QMK",
            "DU1hc3RlckVycm9yUEISLQoEY29kZRgBIAIoDjIfLmt1ZHUubWFzdGVyLk1h",
            "c3RlckVycm9yUEIuQ29kZRIhCgZzdGF0dXMYAiACKAsyES5rdWR1LkFwcFN0",
            "YXR1c1BCIpEDCgRDb2RlEhEKDVVOS05PV05fRVJST1IQARISCg5JTlZBTElE",
            "X1NDSEVNQRACEhMKD1RBQkxFX05PVF9GT1VORBADEhkKFVRBQkxFX0FMUkVB",
            "RFlfUFJFU0VOVBAEEhQKEFRPT19NQU5ZX1RBQkxFVFMQBRIjCh9DQVRBTE9H",
            "X01BTkFHRVJfTk9UX0lOSVRJQUxJWkVEEAYSEgoOTk9UX1RIRV9MRUFERVIQ",
            "BxIfChtSRVBMSUNBVElPTl9GQUNUT1JfVE9PX0hJR0gQCBIWChJUQUJMRVRf",
            "Tk9UX1JVTk5JTkcQCRIbChdFVkVOX1JFUExJQ0FUSU9OX0ZBQ1RPUhAKEh4K",
            "GklMTEVHQUxfUkVQTElDQVRJT05fRkFDVE9SEAsSIwofSU5DT01QQVRJQkxF",
            "X1JFUExJQ0FfTUFOQUdFTUVOVBAMEhgKFEhJVkVfTUVUQVNUT1JFX0VSUk9S",
            "EA0SEgoOTk9UX0FVVEhPUklaRUQQDhIaChZNQVNURVJfQUxSRUFEWV9QUkVT",
            "RU5UEA8iPwoSVFNUb01hc3RlckNvbW1vblBCEikKC3RzX2luc3RhbmNlGAEg",
            "AigLMhQua3VkdS5Ob2RlSW5zdGFuY2VQQiI5ChFUYWJsZUlkZW50aWZpZXJQ",
            "QhIQCgh0YWJsZV9pZBgBIAEoDBISCgp0YWJsZV9uYW1lGAIgASgJIoYDChFT",
            "eXNUYWJsZXRzRW50cnlQQhIcChRERVBSRUNBVEVEX3N0YXJ0X2tleRgBIAEo",
            "DBIaChJERVBSRUNBVEVEX2VuZF9rZXkYAiABKAwSJAoJcGFydGl0aW9uGAcg",
            "ASgLMhEua3VkdS5QYXJ0aXRpb25QQhI5Cg9jb25zZW5zdXNfc3RhdGUYAyAB",
            "KAsyIC5rdWR1LmNvbnNlbnN1cy5Db25zZW5zdXNTdGF0ZVBCEjwKBXN0YXRl",
            "GAQgASgOMiQua3VkdS5tYXN0ZXIuU3lzVGFibGV0c0VudHJ5UEIuU3RhdGU6",
            "B1VOS05PV04SEQoJc3RhdGVfbXNnGAUgASgMEhAKCHRhYmxlX2lkGAYgAigM",
            "EhcKD2RpbWVuc2lvbl9sYWJlbBgIIAEoCSJaCgVTdGF0ZRIMCgdVTktOT1dO",
            "EOcHEg0KCVBSRVBBUklORxAAEgwKCENSRUFUSU5HEAESCwoHUlVOTklORxAC",
            "EgwKCFJFUExBQ0VEEAMSCwoHREVMRVRFRBAEIuUEChBTeXNUYWJsZXNFbnRy",
            "eVBCEgwKBG5hbWUYASACKAwSDwoHdmVyc2lvbhgCIAIoDRIeCgZzY2hlbWEY",
            "AyACKAsyDi5rdWR1LlNjaGVtYVBCEiwKFGZ1bGx5X2FwcGxpZWRfc2NoZW1h",
            "GAQgASgLMg4ua3VkdS5TY2hlbWFQQhIxChBwYXJ0aXRpb25fc2NoZW1hGAkg",
            "ASgLMhcua3VkdS5QYXJ0aXRpb25TY2hlbWFQQhIWCg5uZXh0X2NvbHVtbl9p",
            "ZBgIIAEoBRIUCgxudW1fcmVwbGljYXMYBSACKAUSOwoFc3RhdGUYBiABKA4y",
            "Iy5rdWR1Lm1hc3Rlci5TeXNUYWJsZXNFbnRyeVBCLlN0YXRlOgdVTktOT1dO",
            "EhEKCXN0YXRlX21zZxgHIAEoDBIYChBjcmVhdGVfdGltZXN0YW1wGAogASgD",
            "EhcKD2FsdGVyX3RpbWVzdGFtcBgLIAEoAxIuCgxleHRyYV9jb25maWcYDCAB",
            "KAsyGC5rdWR1LlRhYmxlRXh0cmFDb25maWdQQhINCgVvd25lchgNIAEoCRIl",
            "Cgp0YWJsZV90eXBlGA4gASgOMhEua3VkdS5UYWJsZVR5cGVQQhIdChV0YWJs",
            "ZV9kaXNrX3NpemVfbGltaXQYDyABKAMSHQoVdGFibGVfcm93X2NvdW50X2xp",
            "bWl0GBAgASgDEg8KB2NvbW1lbnQYESABKAkiSwoFU3RhdGUSCwoHVU5LTk9X",
            "ThAAEg0KCVBSRVBBUklORxABEgsKB1JVTk5JTkcQAhIMCghBTFRFUklORxAD",
            "EgsKB1JFTU9WRUQQBCJPChdTeXNDZXJ0QXV0aG9yaXR5RW50cnlQQhIZCgtw",
            "cml2YXRlX2tleRgBIAIoDEIEiLUYARIZCgtjZXJ0aWZpY2F0ZRgCIAIoDEIE",
            "iLUYASJFCg1TeXNUc2tFbnRyeVBCEjQKA3RzaxgBIAIoCzInLmt1ZHUuc2Vj",
            "dXJpdHkuVG9rZW5TaWduaW5nUHJpdmF0ZUtleVBCIkcKG1N5c05vdGlmaWNh",
            "dGlvbkxvZ0V2ZW50SWRQQhIoCiBsYXRlc3Rfbm90aWZpY2F0aW9uX2xvZ19l",
            "dmVudF9pZBgBIAEoAyIpChNTeXNDbHVzdGVySWRFbnRyeVBCEhIKCmNsdXN0",
            "ZXJfaWQYASABKAkiXAoWU3lzVFNlcnZlclN0YXRlRW50cnlQQhIqCgVzdGF0",
            "ZRgBIAEoDjIbLmt1ZHUubWFzdGVyLlRTZXJ2ZXJTdGF0ZVBCEhYKDnRpbWVz",
            "dGFtcF9zZWNzGAIgASgDIg8KDVBpbmdSZXF1ZXN0UEIiEAoOUGluZ1Jlc3Bv",
            "bnNlUEIizwIKEFJlcG9ydGVkVGFibGV0UEISEQoJdGFibGV0X2lkGAEgAigM",
            "EjIKBXN0YXRlGAIgASgOMhoua3VkdS50YWJsZXQuVGFibGV0U3RhdGVQQjoH",
            "VU5LTk9XThJMChF0YWJsZXRfZGF0YV9zdGF0ZRgGIAEoDjIcLmt1ZHUudGFi",
            "bGV0LlRhYmxldERhdGFTdGF0ZToTVEFCTEVUX0RBVEFfVU5LTk9XThI5Cg9j",
            "b25zZW5zdXNfc3RhdGUYAyABKAsyIC5rdWR1LmNvbnNlbnN1cy5Db25zZW5z",
            "dXNTdGF0ZVBCEiAKBWVycm9yGAQgASgLMhEua3VkdS5BcHBTdGF0dXNQQhIW",
            "Cg5zY2hlbWFfdmVyc2lvbhgFIAEoDRIxCgVzdGF0cxgHIAEoCzIiLmt1ZHUu",
            "dGFibGV0LlJlcG9ydGVkVGFibGV0U3RhdHNQQiKVAQoOVGFibGV0UmVwb3J0",
            "UEISFgoOaXNfaW5jcmVtZW50YWwYASACKAgSNgoPdXBkYXRlZF90YWJsZXRz",
            "GAIgAygLMh0ua3VkdS5tYXN0ZXIuUmVwb3J0ZWRUYWJsZXRQQhIaChJyZW1v",
            "dmVkX3RhYmxldF9pZHMYAyADKAwSFwoPc2VxdWVuY2VfbnVtYmVyGAQgAigF",
            "Ij8KF1JlcG9ydGVkVGFibGV0VXBkYXRlc1BCEhEKCXRhYmxldF9pZBgBIAIo",
            "DBIRCglzdGF0ZV9tc2cYAiABKAkiTgoVVGFibGV0UmVwb3J0VXBkYXRlc1BC",
            "EjUKB3RhYmxldHMYASADKAsyJC5rdWR1Lm1hc3Rlci5SZXBvcnRlZFRhYmxl",
            "dFVwZGF0ZXNQQiLpAwoUVFNIZWFydGJlYXRSZXF1ZXN0UEISLwoGY29tbW9u",
            "GAEgAigLMh8ua3VkdS5tYXN0ZXIuVFNUb01hc3RlckNvbW1vblBCEjAKDHJl",
            "Z2lzdHJhdGlvbhgCIAEoCzIaLmt1ZHUuU2VydmVyUmVnaXN0cmF0aW9uUEIS",
            "MgoNdGFibGV0X3JlcG9ydBgDIAEoCzIbLmt1ZHUubWFzdGVyLlRhYmxldFJl",
            "cG9ydFBCEhgKEG51bV9saXZlX3RhYmxldHMYBCABKAUSDwoHY3NyX2RlchgF",
            "IAEoDBIaChJsYXRlc3RfdHNrX3NlcV9udW0YBiABKAMSSAoXcmVwbGljYV9t",
            "YW5hZ2VtZW50X2luZm8YByABKAsyJy5rdWR1LmNvbnNlbnN1cy5SZXBsaWNh",
            "TWFuYWdlbWVudEluZm9QQhJnCh1udW1fbGl2ZV90YWJsZXRzX2J5X2RpbWVu",
            "c2lvbhgIIAMoCzJALmt1ZHUubWFzdGVyLlRTSGVhcnRiZWF0UmVxdWVzdFBC",
            "Lk51bUxpdmVUYWJsZXRzQnlEaW1lbnNpb25FbnRyeRpACh5OdW1MaXZlVGFi",
            "bGV0c0J5RGltZW5zaW9uRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgFOgI4ASLxAgoVVFNIZWFydGJlYXRSZXNwb25zZVBCEikKBWVycm9yGAEg",
            "ASgLMhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQQhItCg9tYXN0ZXJfaW5z",
            "dGFuY2UYAiABKAsyFC5rdWR1Lk5vZGVJbnN0YW5jZVBCEh8KEG5lZWRzX3Jl",
            "cmVnaXN0ZXIYAyABKAg6BWZhbHNlEicKGG5lZWRzX2Z1bGxfdGFibGV0X3Jl",
            "cG9ydBgEIAEoCDoFZmFsc2USOQoNdGFibGV0X3JlcG9ydBgFIAEoCzIiLmt1",
            "ZHUubWFzdGVyLlRhYmxldFJlcG9ydFVwZGF0ZXNQQhIVCg1sZWFkZXJfbWFz",
            "dGVyGAYgASgIEhcKD3NpZ25lZF9jZXJ0X2RlchgHIAEoDBITCgtjYV9jZXJ0",
            "X2RlchgIIAMoDBI0CgR0c2tzGAkgAygLMiYua3VkdS5zZWN1cml0eS5Ub2tl",
            "blNpZ25pbmdQdWJsaWNLZXlQQiKkBAoRVGFibGV0TG9jYXRpb25zUEISEQoJ",
            "dGFibGV0X2lkGAEgAigMEhEKCXN0YXJ0X2tleRgCIAEoDBIPCgdlbmRfa2V5",
            "GAMgASgMEiQKCXBhcnRpdGlvbhgGIAEoCzIRLmt1ZHUuUGFydGl0aW9uUEIS",
            "UAoTREVQUkVDQVRFRF9yZXBsaWNhcxgEIAMoCzIzLmt1ZHUubWFzdGVyLlRh",
            "YmxldExvY2F0aW9uc1BCLkRFUFJFQ0FURURfUmVwbGljYVBCEksKEWludGVy",
            "bmVkX3JlcGxpY2FzGAcgAygLMjAua3VkdS5tYXN0ZXIuVGFibGV0TG9jYXRp",
            "b25zUEIuSW50ZXJuZWRSZXBsaWNhUEISGAoQREVQUkVDQVRFRF9zdGFsZRgF",
            "IAEoCBqGAQoUREVQUkVDQVRFRF9SZXBsaWNhUEISJgoHdHNfaW5mbxgBIAIo",
            "CzIVLmt1ZHUubWFzdGVyLlRTSW5mb1BCEi0KBHJvbGUYAiACKA4yHy5rdWR1",
            "LmNvbnNlbnN1cy5SYWZ0UGVlclBCLlJvbGUSFwoPZGltZW5zaW9uX2xhYmVs",
            "GAMgASgJGnAKEUludGVybmVkUmVwbGljYVBCEhMKC3RzX2luZm9faWR4GAEg",
            "AigNEi0KBHJvbGUYAiACKA4yHy5rdWR1LmNvbnNlbnN1cy5SYWZ0UGVlclBC",
            "LlJvbGUSFwoPZGltZW5zaW9uX2xhYmVsGAMgASgJIn4KCFRTSW5mb1BCEhYK",
            "DnBlcm1hbmVudF91dWlkGAEgAigMEicKDXJwY19hZGRyZXNzZXMYAiADKAsy",
            "EC5rdWR1Lkhvc3RQb3J0UEISEAoIbG9jYXRpb24YAyABKAkSHwoXdW5peF9k",
            "b21haW5fc29ja2V0X3BhdGgYBCABKAkiqQEKG0dldFRhYmxldExvY2F0aW9u",
            "c1JlcXVlc3RQQhISCgp0YWJsZXRfaWRzGAEgAygMEkoKE3JlcGxpY2FfdHlw",
            "ZV9maWx0ZXIYAiABKA4yHi5rdWR1Lm1hc3Rlci5SZXBsaWNhVHlwZUZpbHRl",
            "cjoNVk9URVJfUkVQTElDQRIqChtpbnRlcm5fdHNfaW5mb3NfaW5fcmVzcG9u",
            "c2UYAyABKAg6BWZhbHNlIqwCChxHZXRUYWJsZXRMb2NhdGlvbnNSZXNwb25z",
            "ZVBCEikKBWVycm9yGAEgASgLMhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQ",
            "QhI4ChB0YWJsZXRfbG9jYXRpb25zGAIgAygLMh4ua3VkdS5tYXN0ZXIuVGFi",
            "bGV0TG9jYXRpb25zUEISJwoIdHNfaW5mb3MYBCADKAsyFS5rdWR1Lm1hc3Rl",
            "ci5UU0luZm9QQhI/CgZlcnJvcnMYAyADKAsyLy5rdWR1Lm1hc3Rlci5HZXRU",
            "YWJsZXRMb2NhdGlvbnNSZXNwb25zZVBCLkVycm9yGj0KBUVycm9yEhEKCXRh",
            "YmxldF9pZBgBIAIoDBIhCgZzdGF0dXMYAiACKAsyES5rdWR1LkFwcFN0YXR1",
            "c1BCIqYDChRDcmVhdGVUYWJsZVJlcXVlc3RQQhIMCgRuYW1lGAEgAigJEh4K",
            "BnNjaGVtYRgCIAIoCzIOLmt1ZHUuU2NoZW1hUEISNgoXc3BsaXRfcm93c19y",
            "YW5nZV9ib3VuZHMYBiABKAsyFS5rdWR1LlJvd09wZXJhdGlvbnNQQhIxChBw",
            "YXJ0aXRpb25fc2NoZW1hGAcgASgLMhcua3VkdS5QYXJ0aXRpb25TY2hlbWFQ",
            "QhIUCgxudW1fcmVwbGljYXMYBCABKAUSDQoFb3duZXIYCCABKAkSSgoNZXh0",
            "cmFfY29uZmlncxgJIAMoCzIzLmt1ZHUubWFzdGVyLkNyZWF0ZVRhYmxlUmVx",
            "dWVzdFBCLkV4dHJhQ29uZmlnc0VudHJ5EhcKD2RpbWVuc2lvbl9sYWJlbBgK",
            "IAEoCRIlCgp0YWJsZV90eXBlGAsgASgOMhEua3VkdS5UYWJsZVR5cGVQQhIP",
            "Cgdjb21tZW50GA0gASgJGjMKEUV4dHJhQ29uZmlnc0VudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiVAoVQ3JlYXRlVGFibGVSZXNwb25z",
            "ZVBCEikKBWVycm9yGAEgASgLMhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQ",
            "QhIQCgh0YWJsZV9pZBgCIAEoDCJLChpJc0NyZWF0ZVRhYmxlRG9uZVJlcXVl",
            "c3RQQhItCgV0YWJsZRgBIAIoCzIeLmt1ZHUubWFzdGVyLlRhYmxlSWRlbnRp",
            "ZmllclBCIlYKG0lzQ3JlYXRlVGFibGVEb25lUmVzcG9uc2VQQhIpCgVlcnJv",
            "chgBIAEoCzIaLmt1ZHUubWFzdGVyLk1hc3RlckVycm9yUEISDAoEZG9uZRgD",
            "IAEoCCJtChREZWxldGVUYWJsZVJlcXVlc3RQQhItCgV0YWJsZRgBIAIoCzIe",
            "Lmt1ZHUubWFzdGVyLlRhYmxlSWRlbnRpZmllclBCEiYKGG1vZGlmeV9leHRl",
            "cm5hbF9jYXRhbG9ncxgCIAEoCDoEdHJ1ZSJCChVEZWxldGVUYWJsZVJlc3Bv",
            "bnNlUEISKQoFZXJyb3IYASABKAsyGi5rdWR1Lm1hc3Rlci5NYXN0ZXJFcnJv",
            "clBCIlIKE0xpc3RUYWJsZXNSZXF1ZXN0UEISEwoLbmFtZV9maWx0ZXIYASAB",
            "KAkSJgoLdHlwZV9maWx0ZXIYAiADKA4yES5rdWR1LlRhYmxlVHlwZVBCIugB",
            "ChRMaXN0VGFibGVzUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEoCzIaLmt1ZHUu",
            "bWFzdGVyLk1hc3RlckVycm9yUEISOwoGdGFibGVzGAIgAygLMisua3VkdS5t",
            "YXN0ZXIuTGlzdFRhYmxlc1Jlc3BvbnNlUEIuVGFibGVJbmZvGmgKCVRhYmxl",
            "SW5mbxIKCgJpZBgBIAIoDBIMCgRuYW1lGAIgAigJEhYKDmxpdmVfcm93X2Nv",
            "dW50GAMgASgEEhMKC251bV90YWJsZXRzGAQgASgFEhQKDG51bV9yZXBsaWNh",
            "cxgFIAEoBSJMChtHZXRUYWJsZVN0YXRpc3RpY3NSZXF1ZXN0UEISLQoFdGFi",
            "bGUYASACKAsyHi5rdWR1Lm1hc3Rlci5UYWJsZUlkZW50aWZpZXJQQiKpAQoc",
            "R2V0VGFibGVTdGF0aXN0aWNzUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEoCzIa",
            "Lmt1ZHUubWFzdGVyLk1hc3RlckVycm9yUEISFAoMb25fZGlza19zaXplGAIg",
            "ASgDEhYKDmxpdmVfcm93X2NvdW50GAMgASgDEhcKD2Rpc2tfc2l6ZV9saW1p",
            "dBgEIAEoAxIXCg9yb3dfY291bnRfbGltaXQYBSABKAMiOwoOUGFydGl0aW9u",
            "S2V5UEISFwoJcmFuZ2Vfa2V5GAEgASgMQgSItRgBEhAKCGhhc2hfa2V5GAIg",
            "ASgMIokDChpHZXRUYWJsZUxvY2F0aW9uc1JlcXVlc3RQQhItCgV0YWJsZRgB",
            "IAIoCzIeLmt1ZHUubWFzdGVyLlRhYmxlSWRlbnRpZmllclBCEiEKE3BhcnRp",
            "dGlvbl9rZXlfc3RhcnQYAyABKAxCBIi1GAESHwoRcGFydGl0aW9uX2tleV9l",
            "bmQYBCABKAxCBIi1GAESIgoWbWF4X3JldHVybmVkX2xvY2F0aW9ucxgFIAEo",
            "DToCMTASSgoTcmVwbGljYV90eXBlX2ZpbHRlchgGIAEoDjIeLmt1ZHUubWFz",
            "dGVyLlJlcGxpY2FUeXBlRmlsdGVyOg1WT1RFUl9SRVBMSUNBEioKG2ludGVy",
            "bl90c19pbmZvc19pbl9yZXNwb25zZRgHIAEoCDoFZmFsc2USLgoJa2V5X3N0",
            "YXJ0GAggASgLMhsua3VkdS5tYXN0ZXIuUGFydGl0aW9uS2V5UEISLAoHa2V5",
            "X2VuZBgJIAEoCzIbLmt1ZHUubWFzdGVyLlBhcnRpdGlvbktleVBCIskBChtH",
            "ZXRUYWJsZUxvY2F0aW9uc1Jlc3BvbnNlUEISKQoFZXJyb3IYASABKAsyGi5r",
            "dWR1Lm1hc3Rlci5NYXN0ZXJFcnJvclBCEjgKEHRhYmxldF9sb2NhdGlvbnMY",
            "AiADKAsyHi5rdWR1Lm1hc3Rlci5UYWJsZXRMb2NhdGlvbnNQQhInCgh0c19p",
            "bmZvcxgEIAMoCzIVLmt1ZHUubWFzdGVyLlRTSW5mb1BCEhwKCnR0bF9taWxs",
            "aXMYAyABKA06CDM2MDAwMDAwItULChNBbHRlclRhYmxlUmVxdWVzdFBCEi0K",
            "BXRhYmxlGAEgAigLMh4ua3VkdS5tYXN0ZXIuVGFibGVJZGVudGlmaWVyUEIS",
            "QQoSYWx0ZXJfc2NoZW1hX3N0ZXBzGAIgAygLMiUua3VkdS5tYXN0ZXIuQWx0",
            "ZXJUYWJsZVJlcXVlc3RQQi5TdGVwEhYKDm5ld190YWJsZV9uYW1lGAMgASgJ",
            "Eh4KBnNjaGVtYRgEIAEoCzIOLmt1ZHUuU2NoZW1hUEISJgoYbW9kaWZ5X2V4",
            "dGVybmFsX2NhdGFsb2dzGAUgASgIOgR0cnVlElAKEW5ld19leHRyYV9jb25m",
            "aWdzGAYgAygLMjUua3VkdS5tYXN0ZXIuQWx0ZXJUYWJsZVJlcXVlc3RQQi5O",
            "ZXdFeHRyYUNvbmZpZ3NFbnRyeRIXCg9uZXdfdGFibGVfb3duZXIYByABKAkS",
            "FwoPZGlza19zaXplX2xpbWl0GAggASgDEhcKD3Jvd19jb3VudF9saW1pdBgJ",
            "IAEoAxIZChFuZXdfdGFibGVfY29tbWVudBgKIAEoCRIUCgxudW1fcmVwbGlj",
            "YXMYCyABKAUaMQoJQWRkQ29sdW1uEiQKBnNjaGVtYRgBIAIoCzIULmt1ZHUu",
            "Q29sdW1uU2NoZW1hUEIaGgoKRHJvcENvbHVtbhIMCgRuYW1lGAEgAigJGjIK",
            "DFJlbmFtZUNvbHVtbhIQCghvbGRfbmFtZRgBIAIoCRIQCghuZXdfbmFtZRgC",
            "IAIoCRo3CgtBbHRlckNvbHVtbhIoCgVkZWx0YRgBIAEoCzIZLmt1ZHUuQ29s",
            "dW1uU2NoZW1hRGVsdGFQQhpZChFBZGRSYW5nZVBhcnRpdGlvbhIrCgxyYW5n",
            "ZV9ib3VuZHMYASABKAsyFS5rdWR1LlJvd09wZXJhdGlvbnNQQhIXCg9kaW1l",
            "bnNpb25fbGFiZWwYAiABKAkaQQoSRHJvcFJhbmdlUGFydGl0aW9uEisKDHJh",
            "bmdlX2JvdW5kcxgBIAEoCzIVLmt1ZHUuUm93T3BlcmF0aW9uc1BCGvgDCgRT",
            "dGVwEkAKBHR5cGUYASABKA4yKS5rdWR1Lm1hc3Rlci5BbHRlclRhYmxlUmVx",
            "dWVzdFBCLlN0ZXBUeXBlOgdVTktOT1dOEj4KCmFkZF9jb2x1bW4YAiABKAsy",
            "Ki5rdWR1Lm1hc3Rlci5BbHRlclRhYmxlUmVxdWVzdFBCLkFkZENvbHVtbhJA",
            "Cgtkcm9wX2NvbHVtbhgDIAEoCzIrLmt1ZHUubWFzdGVyLkFsdGVyVGFibGVS",
            "ZXF1ZXN0UEIuRHJvcENvbHVtbhJECg1yZW5hbWVfY29sdW1uGAQgASgLMi0u",
            "a3VkdS5tYXN0ZXIuQWx0ZXJUYWJsZVJlcXVlc3RQQi5SZW5hbWVDb2x1bW4S",
            "TwoTYWRkX3JhbmdlX3BhcnRpdGlvbhgFIAEoCzIyLmt1ZHUubWFzdGVyLkFs",
            "dGVyVGFibGVSZXF1ZXN0UEIuQWRkUmFuZ2VQYXJ0aXRpb24SUQoUZHJvcF9y",
            "YW5nZV9wYXJ0aXRpb24YBiABKAsyMy5rdWR1Lm1hc3Rlci5BbHRlclRhYmxl",
            "UmVxdWVzdFBCLkRyb3BSYW5nZVBhcnRpdGlvbhJCCgxhbHRlcl9jb2x1bW4Y",
            "ByABKAsyLC5rdWR1Lm1hc3Rlci5BbHRlclRhYmxlUmVxdWVzdFBCLkFsdGVy",
            "Q29sdW1uGjYKFE5ld0V4dHJhQ29uZmlnc0VudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCToCOAEikAEKCFN0ZXBUeXBlEgsKB1VOS05PV04QABIO",
            "CgpBRERfQ09MVU1OEAESDwoLRFJPUF9DT0xVTU4QAhIRCg1SRU5BTUVfQ09M",
            "VU1OEAMSEAoMQUxURVJfQ09MVU1OEAQSFwoTQUREX1JBTkdFX1BBUlRJVElP",
            "ThAFEhgKFERST1BfUkFOR0VfUEFSVElUSU9OEAYiawoUQWx0ZXJUYWJsZVJl",
            "c3BvbnNlUEISKQoFZXJyb3IYASABKAsyGi5rdWR1Lm1hc3Rlci5NYXN0ZXJF",
            "cnJvclBCEhYKDnNjaGVtYV92ZXJzaW9uGAIgASgNEhAKCHRhYmxlX2lkGAMg",
            "ASgMIkoKGUlzQWx0ZXJUYWJsZURvbmVSZXF1ZXN0UEISLQoFdGFibGUYASAC",
            "KAsyHi5rdWR1Lm1hc3Rlci5UYWJsZUlkZW50aWZpZXJQQiJtChpJc0FsdGVy",
            "VGFibGVEb25lUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEoCzIaLmt1ZHUubWFz",
            "dGVyLk1hc3RlckVycm9yUEISFgoOc2NoZW1hX3ZlcnNpb24YAiABKA0SDAoE",
            "ZG9uZRgDIAEoCCJIChdHZXRUYWJsZVNjaGVtYVJlcXVlc3RQQhItCgV0YWJs",
            "ZRgBIAIoCzIeLmt1ZHUubWFzdGVyLlRhYmxlSWRlbnRpZmllclBCIrIDChhH",
            "ZXRUYWJsZVNjaGVtYVJlc3BvbnNlUEISKQoFZXJyb3IYASABKAsyGi5rdWR1",
            "Lm1hc3Rlci5NYXN0ZXJFcnJvclBCEh4KBnNjaGVtYRgCIAEoCzIOLmt1ZHUu",
            "U2NoZW1hUEISMQoQcGFydGl0aW9uX3NjaGVtYRgFIAEoCzIXLmt1ZHUuUGFy",
            "dGl0aW9uU2NoZW1hUEISFAoMbnVtX3JlcGxpY2FzGAMgASgFEhAKCHRhYmxl",
            "X2lkGAQgASgMEhIKCnRhYmxlX25hbWUYByABKAkSMQoLYXV0aHpfdG9rZW4Y",
            "CCABKAsyHC5rdWR1LnNlY3VyaXR5LlNpZ25lZFRva2VuUEISTgoNZXh0cmFf",
            "Y29uZmlncxgJIAMoCzI3Lmt1ZHUubWFzdGVyLkdldFRhYmxlU2NoZW1hUmVz",
            "cG9uc2VQQi5FeHRyYUNvbmZpZ3NFbnRyeRINCgVvd25lchgKIAEoCRIPCgdj",
            "b21tZW50GAsgASgJGjMKEUV4dHJhQ29uZmlnc0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAFKBAgGEAciGgoYQ29ubmVjdFRvTWFzdGVy",
            "UmVxdWVzdFBCIsgCChlDb25uZWN0VG9NYXN0ZXJSZXNwb25zZVBCEikKBWVy",
            "cm9yGAEgASgLMhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQQhItCgRyb2xl",
            "GAIgASgOMh8ua3VkdS5jb25zZW5zdXMuUmFmdFBlZXJQQi5Sb2xlEhMKC2Nh",
            "X2NlcnRfZGVyGAMgAygMEjEKC2F1dGhuX3Rva2VuGAQgASgLMhwua3VkdS5z",
            "ZWN1cml0eS5TaWduZWRUb2tlblBCEiYKDG1hc3Rlcl9hZGRycxgFIAMoCzIQ",
            "Lmt1ZHUuSG9zdFBvcnRQQhI0CgpobXNfY29uZmlnGAYgASgLMiAua3VkdS5t",
            "YXN0ZXIuSGl2ZU1ldGFzdG9yZUNvbmZpZxIXCg9jbGllbnRfbG9jYXRpb24Y",
            "ByABKAkSEgoKY2x1c3Rlcl9pZBgIIAEoCSJTChNIaXZlTWV0YXN0b3JlQ29u",
            "ZmlnEhAKCGhtc191cmlzGAEgASgJEhgKEGhtc19zYXNsX2VuYWJsZWQYAiAB",
            "KAgSEAoIaG1zX3V1aWQYAyABKAkiNAoaTGlzdFRhYmxldFNlcnZlcnNSZXF1",
            "ZXN0UEISFgoOaW5jbHVkZV9zdGF0ZXMYASABKAgizgIKG0xpc3RUYWJsZXRT",
            "ZXJ2ZXJzUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEoCzIaLmt1ZHUubWFzdGVy",
            "Lk1hc3RlckVycm9yUEISPwoHc2VydmVycxgCIAMoCzIuLmt1ZHUubWFzdGVy",
            "Lkxpc3RUYWJsZXRTZXJ2ZXJzUmVzcG9uc2VQQi5FbnRyeRrCAQoFRW50cnkS",
            "KQoLaW5zdGFuY2VfaWQYASACKAsyFC5rdWR1Lk5vZGVJbnN0YW5jZVBCEjAK",
            "DHJlZ2lzdHJhdGlvbhgCIAEoCzIaLmt1ZHUuU2VydmVyUmVnaXN0cmF0aW9u",
            "UEISHgoWbWlsbGlzX3NpbmNlX2hlYXJ0YmVhdBgDIAEoBRIQCghsb2NhdGlv",
            "bhgEIAEoCRIqCgVzdGF0ZRgFIAEoDjIbLmt1ZHUubWFzdGVyLlRTZXJ2ZXJT",
            "dGF0ZVBCIsMBChRUU2VydmVyU3RhdGVDaGFuZ2VQQhIMCgR1dWlkGAEgASgJ",
            "Ej0KBmNoYW5nZRgCIAEoDjItLmt1ZHUubWFzdGVyLlRTZXJ2ZXJTdGF0ZUNo",
            "YW5nZVBCLlN0YXRlQ2hhbmdlIl4KC1N0YXRlQ2hhbmdlEhgKFFVOS05PV05f",
            "U1RBVEVfQ0hBTkdFEAASGgoWRU5URVJfTUFJTlRFTkFOQ0VfTU9ERRABEhkK",
            "FUVYSVRfTUFJTlRFTkFOQ0VfTU9ERRACIqoCChtDaGFuZ2VUU2VydmVyU3Rh",
            "dGVSZXF1ZXN0UEISMQoGY2hhbmdlGAEgASgLMiEua3VkdS5tYXN0ZXIuVFNl",
            "cnZlclN0YXRlQ2hhbmdlUEISdAoWaGFuZGxlX21pc3NpbmdfdHNlcnZlchgC",
            "IAEoDjI4Lmt1ZHUubWFzdGVyLkNoYW5nZVRTZXJ2ZXJTdGF0ZVJlcXVlc3RQ",
            "Qi5IYW5kbGVNaXNzaW5nVFM6GkRPTlRfQUxMT1dfTUlTU0lOR19UU0VSVkVS",
            "ImIKD0hhbmRsZU1pc3NpbmdUUxIUChBVTktOT1dOX0hBTkRMSU5HEAASGQoV",
            "QUxMT1dfTUlTU0lOR19UU0VSVkVSEAESHgoaRE9OVF9BTExPV19NSVNTSU5H",
            "X1RTRVJWRVIQAiJJChxDaGFuZ2VUU2VydmVyU3RhdGVSZXNwb25zZVBCEikK",
            "BWVycm9yGAEgASgLMhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQQiI4ChJB",
            "ZGRNYXN0ZXJSZXF1ZXN0UEISIgoIcnBjX2FkZHIYASABKAsyEC5rdWR1Lkhv",
            "c3RQb3J0UEIiQAoTQWRkTWFzdGVyUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEo",
            "CzIaLmt1ZHUubWFzdGVyLk1hc3RlckVycm9yUEIiUAoVUmVtb3ZlTWFzdGVy",
            "UmVxdWVzdFBCEiIKCHJwY19hZGRyGAEgASgLMhAua3VkdS5Ib3N0UG9ydFBC",
            "EhMKC21hc3Rlcl91dWlkGAIgASgJIkMKFlJlbW92ZU1hc3RlclJlc3BvbnNl",
            "UEISKQoFZXJyb3IYASABKAsyGi5rdWR1Lm1hc3Rlci5NYXN0ZXJFcnJvclBC",
            "IiAKHkdldE1hc3RlclJlZ2lzdHJhdGlvblJlcXVlc3RQQiKoAgofR2V0TWFz",
            "dGVyUmVnaXN0cmF0aW9uUmVzcG9uc2VQQhIpCgtpbnN0YW5jZV9pZBgBIAIo",
            "CzIULmt1ZHUuTm9kZUluc3RhbmNlUEISMAoMcmVnaXN0cmF0aW9uGAIgASgL",
            "Mhoua3VkdS5TZXJ2ZXJSZWdpc3RyYXRpb25QQhItCgRyb2xlGAMgASgOMh8u",
            "a3VkdS5jb25zZW5zdXMuUmFmdFBlZXJQQi5Sb2xlEikKBWVycm9yGAQgASgL",
            "Mhoua3VkdS5tYXN0ZXIuTWFzdGVyRXJyb3JQQhISCgpjbHVzdGVyX2lkGAUg",
            "ASgJEjoKC21lbWJlcl90eXBlGAYgASgOMiUua3VkdS5jb25zZW5zdXMuUmFm",
            "dFBlZXJQQi5NZW1iZXJUeXBlIhYKFExpc3RNYXN0ZXJzUmVxdWVzdFBCIpUB",
            "ChVMaXN0TWFzdGVyc1Jlc3BvbnNlUEISJAoHbWFzdGVycxgBIAMoCzITLmt1",
            "ZHUuU2VydmVyRW50cnlQQhIrChBERVBSRUNBVEVEX2Vycm9yGAIgASgLMhEu",
            "a3VkdS5BcHBTdGF0dXNQQhIpCgVlcnJvchgDIAEoCzIaLmt1ZHUubWFzdGVy",
            "Lk1hc3RlckVycm9yUEIiKwoWUmVwbGFjZVRhYmxldFJlcXVlc3RQQhIRCgl0",
            "YWJsZXRfaWQYASABKAwiYwoXUmVwbGFjZVRhYmxldFJlc3BvbnNlUEISKQoF",
            "ZXJyb3IYASABKAsyGi5rdWR1Lm1hc3Rlci5NYXN0ZXJFcnJvclBCEh0KFXJl",
            "cGxhY2VtZW50X3RhYmxldF9pZBgCIAEoDCIcChpSZWZyZXNoQXV0aHpDYWNo",
            "ZVJlcXVlc3RQQiJIChtSZWZyZXNoQXV0aHpDYWNoZVJlc3BvbnNlUEISKQoF",
            "ZXJyb3IYASABKAsyGi5rdWR1Lm1hc3Rlci5NYXN0ZXJFcnJvclBCIlgKGlVu",
            "cmVnaXN0ZXJUU2VydmVyUmVxdWVzdFBCEgwKBHV1aWQYASABKAkSLAodZm9y",
            "Y2VfdW5yZWdpc3Rlcl9saXZlX3RzZXJ2ZXIYAiABKAg6BWZhbHNlIkgKG1Vu",
            "cmVnaXN0ZXJUU2VydmVyUmVzcG9uc2VQQhIpCgVlcnJvchgBIAEoCzIaLmt1",
            "ZHUubWFzdGVyLk1hc3RlckVycm9yUEIqRQoRUmVwbGljYVR5cGVGaWx0ZXIS",
            "DAoHVU5LTk9XThDnBxIPCgtBTllfUkVQTElDQRAAEhEKDVZPVEVSX1JFUExJ",
            "Q0EQASpDCg5UU2VydmVyU3RhdGVQQhIRCg1VTktOT1dOX1NUQVRFEAASCAoE",
            "Tk9ORRABEhQKEE1BSU5URU5BTkNFX01PREUQAiraAQoOTWFzdGVyRmVhdHVy",
            "ZXMSEwoPVU5LTk9XTl9GRUFUVVJFEAASGgoWUkFOR0VfUEFSVElUSU9OX0JP",
            "VU5EUxABEh0KGUFERF9EUk9QX1JBTkdFX1BBUlRJVElPTlMQAhIVChFDT05O",
            "RUNUX1RPX01BU1RFUhADEhYKElJFUExJQ0FfTUFOQUdFTUVOVBAEEhgKFEdF",
            "TkVSQVRFX0FVVEhaX1RPS0VOEAUSGAoURFlOQU1JQ19NVUxUSV9NQVNURVIQ",
            "BhIVChFJR05PUkVfT1BFUkFUSU9OUxAHMuUVCg1NYXN0ZXJTZXJ2aWNlEm4K",
            "C1RTSGVhcnRiZWF0EiEua3VkdS5tYXN0ZXIuVFNIZWFydGJlYXRSZXF1ZXN0",
            "UEIaIi5rdWR1Lm1hc3Rlci5UU0hlYXJ0YmVhdFJlc3BvbnNlUEIiGLq1GBRB",
            "dXRob3JpemVTZXJ2aWNlVXNlchKCAQoPQ29ubmVjdFRvTWFzdGVyEiUua3Vk",
            "dS5tYXN0ZXIuQ29ubmVjdFRvTWFzdGVyUmVxdWVzdFBCGiYua3VkdS5tYXN0",
            "ZXIuQ29ubmVjdFRvTWFzdGVyUmVzcG9uc2VQQiIgurUYHEF1dGhvcml6ZUNs",
            "aWVudE9yU2VydmljZVVzZXISiwEKEkdldFRhYmxldExvY2F0aW9ucxIoLmt1",
            "ZHUubWFzdGVyLkdldFRhYmxldExvY2F0aW9uc1JlcXVlc3RQQhopLmt1ZHUu",
            "bWFzdGVyLkdldFRhYmxldExvY2F0aW9uc1Jlc3BvbnNlUEIiILq1GBxBdXRo",
            "b3JpemVDbGllbnRPclNlcnZpY2VVc2VyEnYKC0NyZWF0ZVRhYmxlEiEua3Vk",
            "dS5tYXN0ZXIuQ3JlYXRlVGFibGVSZXF1ZXN0UEIaIi5rdWR1Lm1hc3Rlci5D",
            "cmVhdGVUYWJsZVJlc3BvbnNlUEIiILq1GBxBdXRob3JpemVDbGllbnRPclNl",
            "cnZpY2VVc2VyEogBChFJc0NyZWF0ZVRhYmxlRG9uZRInLmt1ZHUubWFzdGVy",
            "LklzQ3JlYXRlVGFibGVEb25lUmVxdWVzdFBCGigua3VkdS5tYXN0ZXIuSXND",
            "cmVhdGVUYWJsZURvbmVSZXNwb25zZVBCIiC6tRgcQXV0aG9yaXplQ2xpZW50",
            "T3JTZXJ2aWNlVXNlchJpCgtEZWxldGVUYWJsZRIhLmt1ZHUubWFzdGVyLkRl",
            "bGV0ZVRhYmxlUmVxdWVzdFBCGiIua3VkdS5tYXN0ZXIuRGVsZXRlVGFibGVS",
            "ZXNwb25zZVBCIhO6tRgPQXV0aG9yaXplQ2xpZW50EnMKCkFsdGVyVGFibGUS",
            "IC5rdWR1Lm1hc3Rlci5BbHRlclRhYmxlUmVxdWVzdFBCGiEua3VkdS5tYXN0",
            "ZXIuQWx0ZXJUYWJsZVJlc3BvbnNlUEIiILq1GBxBdXRob3JpemVDbGllbnRP",
            "clNlcnZpY2VVc2VyEoUBChBJc0FsdGVyVGFibGVEb25lEiYua3VkdS5tYXN0",
            "ZXIuSXNBbHRlclRhYmxlRG9uZVJlcXVlc3RQQhonLmt1ZHUubWFzdGVyLklz",
            "QWx0ZXJUYWJsZURvbmVSZXNwb25zZVBCIiC6tRgcQXV0aG9yaXplQ2xpZW50",
            "T3JTZXJ2aWNlVXNlchJzCgpMaXN0VGFibGVzEiAua3VkdS5tYXN0ZXIuTGlz",
            "dFRhYmxlc1JlcXVlc3RQQhohLmt1ZHUubWFzdGVyLkxpc3RUYWJsZXNSZXNw",
            "b25zZVBCIiC6tRgcQXV0aG9yaXplQ2xpZW50T3JTZXJ2aWNlVXNlchKLAQoS",
            "R2V0VGFibGVTdGF0aXN0aWNzEigua3VkdS5tYXN0ZXIuR2V0VGFibGVTdGF0",
            "aXN0aWNzUmVxdWVzdFBCGikua3VkdS5tYXN0ZXIuR2V0VGFibGVTdGF0aXN0",
            "aWNzUmVzcG9uc2VQQiIgurUYHEF1dGhvcml6ZUNsaWVudE9yU2VydmljZVVz",
            "ZXISiAEKEUdldFRhYmxlTG9jYXRpb25zEicua3VkdS5tYXN0ZXIuR2V0VGFi",
            "bGVMb2NhdGlvbnNSZXF1ZXN0UEIaKC5rdWR1Lm1hc3Rlci5HZXRUYWJsZUxv",
            "Y2F0aW9uc1Jlc3BvbnNlUEIiILq1GBxBdXRob3JpemVDbGllbnRPclNlcnZp",
            "Y2VVc2VyEn8KDkdldFRhYmxlU2NoZW1hEiQua3VkdS5tYXN0ZXIuR2V0VGFi",
            "bGVTY2hlbWFSZXF1ZXN0UEIaJS5rdWR1Lm1hc3Rlci5HZXRUYWJsZVNjaGVt",
            "YVJlc3BvbnNlUEIiILq1GBxBdXRob3JpemVDbGllbnRPclNlcnZpY2VVc2Vy",
            "EnsKEUxpc3RUYWJsZXRTZXJ2ZXJzEicua3VkdS5tYXN0ZXIuTGlzdFRhYmxl",
            "dFNlcnZlcnNSZXF1ZXN0UEIaKC5rdWR1Lm1hc3Rlci5MaXN0VGFibGV0U2Vy",
            "dmVyc1Jlc3BvbnNlUEIiE7q1GA9BdXRob3JpemVDbGllbnQSaQoLTGlzdE1h",
            "c3RlcnMSIS5rdWR1Lm1hc3Rlci5MaXN0TWFzdGVyc1JlcXVlc3RQQhoiLmt1",
            "ZHUubWFzdGVyLkxpc3RNYXN0ZXJzUmVzcG9uc2VQQiITurUYD0F1dGhvcml6",
            "ZUNsaWVudBJhCgRQaW5nEhoua3VkdS5tYXN0ZXIuUGluZ1JlcXVlc3RQQhob",
            "Lmt1ZHUubWFzdGVyLlBpbmdSZXNwb25zZVBCIiC6tRgcQXV0aG9yaXplQ2xp",
            "ZW50T3JTZXJ2aWNlVXNlchJyCg1SZXBsYWNlVGFibGV0EiMua3VkdS5tYXN0",
            "ZXIuUmVwbGFjZVRhYmxldFJlcXVlc3RQQhokLmt1ZHUubWFzdGVyLlJlcGxh",
            "Y2VUYWJsZXRSZXNwb25zZVBCIha6tRgSQXV0aG9yaXplU3VwZXJVc2VyEn4K",
            "EVJlZnJlc2hBdXRoekNhY2hlEicua3VkdS5tYXN0ZXIuUmVmcmVzaEF1dGh6",
            "Q2FjaGVSZXF1ZXN0UEIaKC5rdWR1Lm1hc3Rlci5SZWZyZXNoQXV0aHpDYWNo",
            "ZVJlc3BvbnNlUEIiFrq1GBJBdXRob3JpemVTdXBlclVzZXISgQEKEkNoYW5n",
            "ZVRTZXJ2ZXJTdGF0ZRIoLmt1ZHUubWFzdGVyLkNoYW5nZVRTZXJ2ZXJTdGF0",
            "ZVJlcXVlc3RQQhopLmt1ZHUubWFzdGVyLkNoYW5nZVRTZXJ2ZXJTdGF0ZVJl",
            "c3BvbnNlUEIiFrq1GBJBdXRob3JpemVTdXBlclVzZXIScAoJQWRkTWFzdGVy",
            "Eh8ua3VkdS5tYXN0ZXIuQWRkTWFzdGVyUmVxdWVzdFBCGiAua3VkdS5tYXN0",
            "ZXIuQWRkTWFzdGVyUmVzcG9uc2VQQiIgurUYHEF1dGhvcml6ZUNsaWVudE9y",
            "U2VydmljZVVzZXISbwoMUmVtb3ZlTWFzdGVyEiIua3VkdS5tYXN0ZXIuUmVt",
            "b3ZlTWFzdGVyUmVxdWVzdFBCGiMua3VkdS5tYXN0ZXIuUmVtb3ZlTWFzdGVy",
            "UmVzcG9uc2VQQiIWurUYEkF1dGhvcml6ZVN1cGVyVXNlchJ+ChFVbnJlZ2lz",
            "dGVyVFNlcnZlchInLmt1ZHUubWFzdGVyLlVucmVnaXN0ZXJUU2VydmVyUmVx",
            "dWVzdFBCGigua3VkdS5tYXN0ZXIuVW5yZWdpc3RlclRTZXJ2ZXJSZXNwb25z",
            "ZVBCIha6tRgSQXV0aG9yaXplU3VwZXJVc2VyEpQBChVHZXRNYXN0ZXJSZWdp",
            "c3RyYXRpb24SKy5rdWR1Lm1hc3Rlci5HZXRNYXN0ZXJSZWdpc3RyYXRpb25S",
            "ZXF1ZXN0UEIaLC5rdWR1Lm1hc3Rlci5HZXRNYXN0ZXJSZWdpc3RyYXRpb25S",
            "ZXNwb25zZVBCIiC6tRgcQXV0aG9yaXplQ2xpZW50T3JTZXJ2aWNlVXNlchoa",
            "urUYFk1VU1RfU0VUX0FVVEhaX1BFUl9SUENCOwoWb3JnLmFwYWNoZS5rdWR1",
            "Lm1hc3RlcqoCIEtuZXQuS3VkdS5DbGllbnQuUHJvdG9idWYuTWFzdGVy"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Knet.Kudu.Client.Protobuf.CommonReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.RowOperationsReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Consensus.MetadataReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Rpc.RpcHeaderReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Security.TokenReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Tablet.MetadataReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.PbUtilReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter), typeof(global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB), typeof(global::Knet.Kudu.Client.Protobuf.Master.MasterFeatures), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB), global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Parser, new[]{ "Code", "Status" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB), global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB.Parser, new[]{ "TsInstance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB), global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB.Parser, new[]{ "TableId", "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Parser, new[]{ "DEPRECATEDStartKey", "DEPRECATEDEndKey", "Partition", "ConsensusState", "State", "StateMsg", "TableId", "DimensionLabel" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Parser, new[]{ "Name", "Version", "Schema", "FullyAppliedSchema", "PartitionSchema", "NextColumnId", "NumReplicas", "State", "StateMsg", "CreateTimestamp", "AlterTimestamp", "ExtraConfig", "Owner", "TableType", "TableDiskSizeLimit", "TableRowCountLimit", "Comment" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysCertAuthorityEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysCertAuthorityEntryPB.Parser, new[]{ "PrivateKey", "Certificate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTskEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysTskEntryPB.Parser, new[]{ "Tsk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysNotificationLogEventIdPB), global::Knet.Kudu.Client.Protobuf.Master.SysNotificationLogEventIdPB.Parser, new[]{ "LatestNotificationLogEventId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysClusterIdEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysClusterIdEntryPB.Parser, new[]{ "ClusterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.SysTServerStateEntryPB), global::Knet.Kudu.Client.Protobuf.Master.SysTServerStateEntryPB.Parser, new[]{ "State", "TimestampSecs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.PingRequestPB), global::Knet.Kudu.Client.Protobuf.Master.PingRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.PingResponsePB), global::Knet.Kudu.Client.Protobuf.Master.PingResponsePB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB), global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB.Parser, new[]{ "TabletId", "State", "TabletDataState", "ConsensusState", "Error", "SchemaVersion", "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB), global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB.Parser, new[]{ "IsIncremental", "UpdatedTablets", "RemovedTabletIds", "SequenceNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB), global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB.Parser, new[]{ "TabletId", "StateMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB), global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB.Parser, new[]{ "Tablets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TSHeartbeatRequestPB), global::Knet.Kudu.Client.Protobuf.Master.TSHeartbeatRequestPB.Parser, new[]{ "Common", "Registration", "TabletReport", "NumLiveTablets", "CsrDer", "LatestTskSeqNum", "ReplicaManagementInfo", "NumLiveTabletsByDimension" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TSHeartbeatResponsePB), global::Knet.Kudu.Client.Protobuf.Master.TSHeartbeatResponsePB.Parser, new[]{ "Error", "MasterInstance", "NeedsReregister", "NeedsFullTabletReport", "TabletReport", "LeaderMaster", "SignedCertDer", "CaCertDer", "Tsks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB), global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Parser, new[]{ "TabletId", "StartKey", "EndKey", "Partition", "DEPRECATEDReplicas", "InternedReplicas", "DEPRECATEDStale" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB), global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB.Parser, new[]{ "TsInfo", "Role", "DimensionLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB), global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB.Parser, new[]{ "TsInfoIdx", "Role", "DimensionLabel" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB), global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB.Parser, new[]{ "PermanentUuid", "RpcAddresses", "Location", "UnixDomainSocketPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsRequestPB), global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsRequestPB.Parser, new[]{ "TabletIds", "ReplicaTypeFilter", "InternTsInfosInResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB), global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Parser, new[]{ "Error", "TabletLocations", "TsInfos", "Errors" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error), global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error.Parser, new[]{ "TabletId", "Status" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.CreateTableRequestPB), global::Knet.Kudu.Client.Protobuf.Master.CreateTableRequestPB.Parser, new[]{ "Name", "Schema", "SplitRowsRangeBounds", "PartitionSchema", "NumReplicas", "Owner", "ExtraConfigs", "DimensionLabel", "TableType", "Comment" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.CreateTableResponsePB), global::Knet.Kudu.Client.Protobuf.Master.CreateTableResponsePB.Parser, new[]{ "Error", "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.IsCreateTableDoneRequestPB), global::Knet.Kudu.Client.Protobuf.Master.IsCreateTableDoneRequestPB.Parser, new[]{ "Table" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.IsCreateTableDoneResponsePB), global::Knet.Kudu.Client.Protobuf.Master.IsCreateTableDoneResponsePB.Parser, new[]{ "Error", "Done" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.DeleteTableRequestPB), global::Knet.Kudu.Client.Protobuf.Master.DeleteTableRequestPB.Parser, new[]{ "Table", "ModifyExternalCatalogs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.DeleteTableResponsePB), global::Knet.Kudu.Client.Protobuf.Master.DeleteTableResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTablesRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ListTablesRequestPB.Parser, new[]{ "NameFilter", "TypeFilter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Parser, new[]{ "Error", "Tables" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo), global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo.Parser, new[]{ "Id", "Name", "LiveRowCount", "NumTablets", "NumReplicas" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableStatisticsRequestPB), global::Knet.Kudu.Client.Protobuf.Master.GetTableStatisticsRequestPB.Parser, new[]{ "Table" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableStatisticsResponsePB), global::Knet.Kudu.Client.Protobuf.Master.GetTableStatisticsResponsePB.Parser, new[]{ "Error", "OnDiskSize", "LiveRowCount", "DiskSizeLimit", "RowCountLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB), global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB.Parser, new[]{ "RangeKey", "HashKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableLocationsRequestPB), global::Knet.Kudu.Client.Protobuf.Master.GetTableLocationsRequestPB.Parser, new[]{ "Table", "PartitionKeyStart", "PartitionKeyEnd", "MaxReturnedLocations", "ReplicaTypeFilter", "InternTsInfosInResponse", "KeyStart", "KeyEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableLocationsResponsePB), global::Knet.Kudu.Client.Protobuf.Master.GetTableLocationsResponsePB.Parser, new[]{ "Error", "TabletLocations", "TsInfos", "TtlMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Parser, new[]{ "Table", "AlterSchemaSteps", "NewTableName", "Schema", "ModifyExternalCatalogs", "NewExtraConfigs", "NewTableOwner", "DiskSizeLimit", "RowCountLimit", "NewTableComment", "NumReplicas" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn.Parser, new[]{ "Schema" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn.Parser, new[]{ "OldName", "NewName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn.Parser, new[]{ "Delta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition.Parser, new[]{ "RangeBounds", "DimensionLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition.Parser, new[]{ "RangeBounds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step), global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step.Parser, new[]{ "Type", "AddColumn", "DropColumn", "RenameColumn", "AddRangePartition", "DropRangePartition", "AlterColumn" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AlterTableResponsePB), global::Knet.Kudu.Client.Protobuf.Master.AlterTableResponsePB.Parser, new[]{ "Error", "SchemaVersion", "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.IsAlterTableDoneRequestPB), global::Knet.Kudu.Client.Protobuf.Master.IsAlterTableDoneRequestPB.Parser, new[]{ "Table" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.IsAlterTableDoneResponsePB), global::Knet.Kudu.Client.Protobuf.Master.IsAlterTableDoneResponsePB.Parser, new[]{ "Error", "SchemaVersion", "Done" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableSchemaRequestPB), global::Knet.Kudu.Client.Protobuf.Master.GetTableSchemaRequestPB.Parser, new[]{ "Table" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetTableSchemaResponsePB), global::Knet.Kudu.Client.Protobuf.Master.GetTableSchemaResponsePB.Parser, new[]{ "Error", "Schema", "PartitionSchema", "NumReplicas", "TableId", "TableName", "AuthzToken", "ExtraConfigs", "Owner", "Comment" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ConnectToMasterRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ConnectToMasterRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ConnectToMasterResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ConnectToMasterResponsePB.Parser, new[]{ "Error", "Role", "CaCertDer", "AuthnToken", "MasterAddrs", "HmsConfig", "ClientLocation", "ClusterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig), global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig.Parser, new[]{ "HmsUris", "HmsSaslEnabled", "HmsUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersRequestPB.Parser, new[]{ "IncludeStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Parser, new[]{ "Error", "Servers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry), global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry.Parser, new[]{ "InstanceId", "Registration", "MillisSinceHeartbeat", "Location", "State" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB), global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Parser, new[]{ "Uuid", "Change" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Parser, new[]{ "Change", "HandleMissingTserver" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AddMasterRequestPB), global::Knet.Kudu.Client.Protobuf.Master.AddMasterRequestPB.Parser, new[]{ "RpcAddr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.AddMasterResponsePB), global::Knet.Kudu.Client.Protobuf.Master.AddMasterResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.RemoveMasterRequestPB), global::Knet.Kudu.Client.Protobuf.Master.RemoveMasterRequestPB.Parser, new[]{ "RpcAddr", "MasterUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.RemoveMasterResponsePB), global::Knet.Kudu.Client.Protobuf.Master.RemoveMasterResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetMasterRegistrationRequestPB), global::Knet.Kudu.Client.Protobuf.Master.GetMasterRegistrationRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.GetMasterRegistrationResponsePB), global::Knet.Kudu.Client.Protobuf.Master.GetMasterRegistrationResponsePB.Parser, new[]{ "InstanceId", "Registration", "Role", "Error", "ClusterId", "MemberType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListMastersRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ListMastersRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ListMastersResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ListMastersResponsePB.Parser, new[]{ "Masters", "DEPRECATEDError", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ReplaceTabletRequestPB), global::Knet.Kudu.Client.Protobuf.Master.ReplaceTabletRequestPB.Parser, new[]{ "TabletId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.ReplaceTabletResponsePB), global::Knet.Kudu.Client.Protobuf.Master.ReplaceTabletResponsePB.Parser, new[]{ "Error", "ReplacementTabletId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.RefreshAuthzCacheRequestPB), global::Knet.Kudu.Client.Protobuf.Master.RefreshAuthzCacheRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.RefreshAuthzCacheResponsePB), global::Knet.Kudu.Client.Protobuf.Master.RefreshAuthzCacheResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.UnregisterTServerRequestPB), global::Knet.Kudu.Client.Protobuf.Master.UnregisterTServerRequestPB.Parser, new[]{ "Uuid", "ForceUnregisterLiveTserver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Master.UnregisterTServerResponsePB), global::Knet.Kudu.Client.Protobuf.Master.UnregisterTServerResponsePB.Parser, new[]{ "Error" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Selector to specify policy for listing tablet replicas in
  /// GetTableLocationResponsePB and GetTabletLocationsResponsePB.
  /// </summary>
  public enum ReplicaTypeFilter {
    [pbr::OriginalName("UNKNOWN")] Unknown = 999,
    [pbr::OriginalName("ANY_REPLICA")] AnyReplica = 0,
    [pbr::OriginalName("VOTER_REPLICA")] VoterReplica = 1,
  }

  /// <summary>
  /// Representation of the state of a tablet server.
  /// TODO(KUDU-1827): add state for decommissioning.
  /// </summary>
  public enum TServerStatePB {
    /// <summary>
    /// Default value for backwards compatibility.
    /// </summary>
    [pbr::OriginalName("UNKNOWN_STATE")] UnknownState = 0,
    /// <summary>
    /// No state for the tserver.
    /// </summary>
    [pbr::OriginalName("NONE")] None = 1,
    /// <summary>
    /// New replicas are not added to the tserver, and failed replicas on the
    /// tserver are not re-replicated.
    /// </summary>
    [pbr::OriginalName("MAINTENANCE_MODE")] MaintenanceMode = 2,
  }

  public enum MasterFeatures {
    [pbr::OriginalName("UNKNOWN_FEATURE")] UnknownFeature = 0,
    /// <summary>
    /// The master supports creating tables with non-covering range partitions.
    /// </summary>
    [pbr::OriginalName("RANGE_PARTITION_BOUNDS")] RangePartitionBounds = 1,
    /// <summary>
    /// The master supports adding and dropping range partitions.
    /// </summary>
    [pbr::OriginalName("ADD_DROP_RANGE_PARTITIONS")] AddDropRangePartitions = 2,
    /// <summary>
    /// The master supports the 'ConnectToMaster' RPC.
    /// </summary>
    [pbr::OriginalName("CONNECT_TO_MASTER")] ConnectToMaster = 3,
    /// <summary>
    /// The catalog manager supports different replica management schemes
    /// (see "kudu/consensus/replica_management.proto"). At least, both the
    /// EVICT_FIRST (a.k.a. 3-2-3) and the PREPARE_REPLACEMENT_BEFORE_EVICTION
    /// (a.k.a. 3-4-3) schemes.
    /// </summary>
    [pbr::OriginalName("REPLICA_MANAGEMENT")] ReplicaManagement = 4,
    /// <summary>
    /// The master supports generating and dispensing authz tokens.
    /// </summary>
    [pbr::OriginalName("GENERATE_AUTHZ_TOKEN")] GenerateAuthzToken = 5,
    /// <summary>
    /// The master supports dynamic addition/removal of masters
    /// </summary>
    [pbr::OriginalName("DYNAMIC_MULTI_MASTER")] DynamicMultiMaster = 6,
    /// <summary>
    /// Whether the cluster supports INSERT_IGNORE, DELETE_IGNORE, and UPDATE_IGNORE operations.
    /// Though this is technically a tserver feature, it's unreasonable to check if every
    /// tablet server supports this feature. Instead we use the master as a proxy.
    /// </summary>
    [pbr::OriginalName("IGNORE_OPERATIONS")] IgnoreOperations = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Master specific errors use this protobuf.
  /// </summary>
  public sealed partial class MasterErrorPB : pb::IMessage<MasterErrorPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<MasterErrorPB> _parser = new pb::MessageParser<MasterErrorPB>(() => new MasterErrorPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MasterErrorPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MasterErrorPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MasterErrorPB(MasterErrorPB other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MasterErrorPB Clone() {
      return new MasterErrorPB(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code CodeDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code.UnknownError;

    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code code_;
    /// <summary>
    /// The error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB status_;
    /// <summary>
    /// The Status object for the error. This will include a textual
    /// message that may be more useful to present in log messages, etc,
    /// though its error code is less specific.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MasterErrorPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MasterErrorPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MasterErrorPB other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MasterErrorPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// An error which has no more specific error code.
        /// The code and message in 'status' may reveal more details.
        ///
        /// RPCs should avoid returning this, since callers will not be
        /// able to easily parse the error.
        /// </summary>
        [pbr::OriginalName("UNKNOWN_ERROR")] UnknownError = 1,
        /// <summary>
        /// The schema provided for a request was not well-formed.
        /// </summary>
        [pbr::OriginalName("INVALID_SCHEMA")] InvalidSchema = 2,
        /// <summary>
        /// The requested table does not exist
        /// </summary>
        [pbr::OriginalName("TABLE_NOT_FOUND")] TableNotFound = 3,
        /// <summary>
        /// The name requested for the table is already in use
        /// </summary>
        [pbr::OriginalName("TABLE_ALREADY_PRESENT")] TableAlreadyPresent = 4,
        /// <summary>
        /// The number of tablets requested for a new table is over the per TS limit.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_TABLETS")] TooManyTablets = 5,
        /// <summary>
        /// Catalog manager is not yet initialized.
        /// </summary>
        [pbr::OriginalName("CATALOG_MANAGER_NOT_INITIALIZED")] CatalogManagerNotInitialized = 6,
        /// <summary>
        /// The operation attempted can only be invoked against either the
        /// leader or a single non-distributed master, which this node
        /// isn't.
        /// </summary>
        [pbr::OriginalName("NOT_THE_LEADER")] NotTheLeader = 7,
        /// <summary>
        /// The number of replicas requested is greater than the number of live servers
        /// in the cluster or the configured maximum.
        /// </summary>
        [pbr::OriginalName("REPLICATION_FACTOR_TOO_HIGH")] ReplicationFactorTooHigh = 8,
        /// <summary>
        /// The request or response involved a tablet which is not yet running.
        /// </summary>
        [pbr::OriginalName("TABLET_NOT_RUNNING")] TabletNotRunning = 9,
        /// <summary>
        /// The number of replicas requested is even.
        /// </summary>
        [pbr::OriginalName("EVEN_REPLICATION_FACTOR")] EvenReplicationFactor = 10,
        /// <summary>
        /// The number of replicas requested is illegal, i.e. either non-positive
        /// or not allowed per system policies.
        /// </summary>
        [pbr::OriginalName("ILLEGAL_REPLICATION_FACTOR")] IllegalReplicationFactor = 11,
        /// <summary>
        /// The callee detected that its replica management scheme is incompatible
        /// with the caller's scheme.
        /// </summary>
        [pbr::OriginalName("INCOMPATIBLE_REPLICA_MANAGEMENT")] IncompatibleReplicaManagement = 12,
        /// <summary>
        /// An operation involving the Hive Metastore failed.
        /// </summary>
        [pbr::OriginalName("HIVE_METASTORE_ERROR")] HiveMetastoreError = 13,
        /// <summary>
        /// The caller is not authorized to perform the attempted operation.
        /// </summary>
        [pbr::OriginalName("NOT_AUTHORIZED")] NotAuthorized = 14,
        /// <summary>
        /// Master is already part of the Raft configuration.
        /// </summary>
        [pbr::OriginalName("MASTER_ALREADY_PRESENT")] MasterAlreadyPresent = 15,
      }

    }
    #endregion

  }

  /// <summary>
  /// Common information sent with every request from the tablet server
  /// to the master.
  /// </summary>
  public sealed partial class TSToMasterCommonPB : pb::IMessage<TSToMasterCommonPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TSToMasterCommonPB> _parser = new pb::MessageParser<TSToMasterCommonPB>(() => new TSToMasterCommonPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TSToMasterCommonPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSToMasterCommonPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSToMasterCommonPB(TSToMasterCommonPB other) : this() {
      tsInstance_ = other.tsInstance_ != null ? other.tsInstance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSToMasterCommonPB Clone() {
      return new TSToMasterCommonPB(this);
    }

    /// <summary>Field number for the "ts_instance" field.</summary>
    public const int TsInstanceFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.NodeInstancePB tsInstance_;
    /// <summary>
    /// The instance of the tablet server sending the heartbeat.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.NodeInstancePB TsInstance {
      get { return tsInstance_; }
      set {
        tsInstance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TSToMasterCommonPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TSToMasterCommonPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TsInstance, other.TsInstance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (tsInstance_ != null) hash ^= TsInstance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tsInstance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TsInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (tsInstance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TsInstance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TSToMasterCommonPB other) {
      if (other == null) {
        return;
      }
      if (other.tsInstance_ != null) {
        if (tsInstance_ == null) {
          TsInstance = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
        }
        TsInstance.MergeFrom(other.TsInstance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tsInstance_ == null) {
              TsInstance = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
            }
            input.ReadMessage(TsInstance);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableIdentifierPB : pb::IMessage<TableIdentifierPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TableIdentifierPB> _parser = new pb::MessageParser<TableIdentifierPB>(() => new TableIdentifierPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TableIdentifierPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableIdentifierPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableIdentifierPB(TableIdentifierPB other) : this() {
      tableId_ = other.tableId_;
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableIdentifierPB Clone() {
      return new TableIdentifierPB(this);
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 1;
    private readonly static pb::ByteString TableIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tableId_;
    /// <summary>
    /// The table ID to fetch info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 2;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    /// <summary>
    /// The table name to fetch info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TableIdentifierPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TableIdentifierPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableId != other.TableId) return false;
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTableId) {
        output.WriteRawTag(10);
        output.WriteBytes(TableId);
      }
      if (HasTableName) {
        output.WriteRawTag(18);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TableId);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TableIdentifierPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableId = input.ReadBytes();
            break;
          }
          case 18: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) for
  /// tablets entries.
  /// </summary>
  public sealed partial class SysTabletsEntryPB : pb::IMessage<SysTabletsEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysTabletsEntryPB> _parser = new pb::MessageParser<SysTabletsEntryPB>(() => new SysTabletsEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysTabletsEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTabletsEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTabletsEntryPB(SysTabletsEntryPB other) : this() {
      _hasBits0 = other._hasBits0;
      dEPRECATEDStartKey_ = other.dEPRECATEDStartKey_;
      dEPRECATEDEndKey_ = other.dEPRECATEDEndKey_;
      partition_ = other.partition_ != null ? other.partition_.Clone() : null;
      consensusState_ = other.consensusState_ != null ? other.consensusState_.Clone() : null;
      state_ = other.state_;
      stateMsg_ = other.stateMsg_;
      tableId_ = other.tableId_;
      dimensionLabel_ = other.dimensionLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTabletsEntryPB Clone() {
      return new SysTabletsEntryPB(this);
    }

    /// <summary>Field number for the "DEPRECATED_start_key" field.</summary>
    public const int DEPRECATEDStartKeyFieldNumber = 1;
    private readonly static pb::ByteString DEPRECATEDStartKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString dEPRECATEDStartKey_;
    /// <summary>
    /// DEPRECATED. Replaced by 'partition'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DEPRECATEDStartKey {
      get { return dEPRECATEDStartKey_ ?? DEPRECATEDStartKeyDefaultValue; }
      set {
        dEPRECATEDStartKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "DEPRECATED_start_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDEPRECATEDStartKey {
      get { return dEPRECATEDStartKey_ != null; }
    }
    /// <summary>Clears the value of the "DEPRECATED_start_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDEPRECATEDStartKey() {
      dEPRECATEDStartKey_ = null;
    }

    /// <summary>Field number for the "DEPRECATED_end_key" field.</summary>
    public const int DEPRECATEDEndKeyFieldNumber = 2;
    private readonly static pb::ByteString DEPRECATEDEndKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString dEPRECATEDEndKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DEPRECATEDEndKey {
      get { return dEPRECATEDEndKey_ ?? DEPRECATEDEndKeyDefaultValue; }
      set {
        dEPRECATEDEndKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "DEPRECATED_end_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDEPRECATEDEndKey {
      get { return dEPRECATEDEndKey_ != null; }
    }
    /// <summary>Clears the value of the "DEPRECATED_end_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDEPRECATEDEndKey() {
      dEPRECATEDEndKey_ = null;
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 7;
    private global::Knet.Kudu.Client.Protobuf.PartitionPB partition_;
    /// <summary>
    /// Tablet partition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionPB Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "consensus_state" field.</summary>
    public const int ConsensusStateFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB consensusState_;
    /// <summary>
    /// The latest consensus state reported to the Master.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB ConsensusState {
      get { return consensusState_; }
      set {
        consensusState_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State state_;
    /// <summary>
    /// Debug state for the tablet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state_msg" field.</summary>
    public const int StateMsgFieldNumber = 5;
    private readonly static pb::ByteString StateMsgDefaultValue = pb::ByteString.Empty;

    private pb::ByteString stateMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StateMsg {
      get { return stateMsg_ ?? StateMsgDefaultValue; }
      set {
        stateMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state_msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStateMsg {
      get { return stateMsg_ != null; }
    }
    /// <summary>Clears the value of the "state_msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStateMsg() {
      stateMsg_ = null;
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 6;
    private readonly static pb::ByteString TableIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tableId_;
    /// <summary>
    /// The table id for the tablet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    /// <summary>Field number for the "dimension_label" field.</summary>
    public const int DimensionLabelFieldNumber = 8;
    private readonly static string DimensionLabelDefaultValue = "";

    private string dimensionLabel_;
    /// <summary>
    /// The dimension label for the tablet. Used for dimension-specific
    /// placement of the tablet's replicas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DimensionLabel {
      get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
      set {
        dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dimension_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDimensionLabel {
      get { return dimensionLabel_ != null; }
    }
    /// <summary>Clears the value of the "dimension_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDimensionLabel() {
      dimensionLabel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysTabletsEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysTabletsEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DEPRECATEDStartKey != other.DEPRECATEDStartKey) return false;
      if (DEPRECATEDEndKey != other.DEPRECATEDEndKey) return false;
      if (!object.Equals(Partition, other.Partition)) return false;
      if (!object.Equals(ConsensusState, other.ConsensusState)) return false;
      if (State != other.State) return false;
      if (StateMsg != other.StateMsg) return false;
      if (TableId != other.TableId) return false;
      if (DimensionLabel != other.DimensionLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDEPRECATEDStartKey) hash ^= DEPRECATEDStartKey.GetHashCode();
      if (HasDEPRECATEDEndKey) hash ^= DEPRECATEDEndKey.GetHashCode();
      if (partition_ != null) hash ^= Partition.GetHashCode();
      if (consensusState_ != null) hash ^= ConsensusState.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasStateMsg) hash ^= StateMsg.GetHashCode();
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDEPRECATEDStartKey) {
        output.WriteRawTag(10);
        output.WriteBytes(DEPRECATEDStartKey);
      }
      if (HasDEPRECATEDEndKey) {
        output.WriteRawTag(18);
        output.WriteBytes(DEPRECATEDEndKey);
      }
      if (consensusState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConsensusState);
      }
      if (HasState) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (HasStateMsg) {
        output.WriteRawTag(42);
        output.WriteBytes(StateMsg);
      }
      if (HasTableId) {
        output.WriteRawTag(50);
        output.WriteBytes(TableId);
      }
      if (partition_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Partition);
      }
      if (HasDimensionLabel) {
        output.WriteRawTag(66);
        output.WriteString(DimensionLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDEPRECATEDStartKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DEPRECATEDStartKey);
      }
      if (HasDEPRECATEDEndKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DEPRECATEDEndKey);
      }
      if (partition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partition);
      }
      if (consensusState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsensusState);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasStateMsg) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StateMsg);
      }
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TableId);
      }
      if (HasDimensionLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysTabletsEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasDEPRECATEDStartKey) {
        DEPRECATEDStartKey = other.DEPRECATEDStartKey;
      }
      if (other.HasDEPRECATEDEndKey) {
        DEPRECATEDEndKey = other.DEPRECATEDEndKey;
      }
      if (other.partition_ != null) {
        if (partition_ == null) {
          Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
        }
        Partition.MergeFrom(other.Partition);
      }
      if (other.consensusState_ != null) {
        if (consensusState_ == null) {
          ConsensusState = new global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB();
        }
        ConsensusState.MergeFrom(other.ConsensusState);
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasStateMsg) {
        StateMsg = other.StateMsg;
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      if (other.HasDimensionLabel) {
        DimensionLabel = other.DimensionLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DEPRECATEDStartKey = input.ReadBytes();
            break;
          }
          case 18: {
            DEPRECATEDEndKey = input.ReadBytes();
            break;
          }
          case 26: {
            if (consensusState_ == null) {
              ConsensusState = new global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB();
            }
            input.ReadMessage(ConsensusState);
            break;
          }
          case 32: {
            State = (global::Knet.Kudu.Client.Protobuf.Master.SysTabletsEntryPB.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            StateMsg = input.ReadBytes();
            break;
          }
          case 50: {
            TableId = input.ReadBytes();
            break;
          }
          case 58: {
            if (partition_ == null) {
              Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
            }
            input.ReadMessage(Partition);
            break;
          }
          case 66: {
            DimensionLabel = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SysTabletsEntryPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("UNKNOWN")] Unknown = 999,
        [pbr::OriginalName("PREPARING")] Preparing = 0,
        [pbr::OriginalName("CREATING")] Creating = 1,
        [pbr::OriginalName("RUNNING")] Running = 2,
        [pbr::OriginalName("REPLACED")] Replaced = 3,
        [pbr::OriginalName("DELETED")] Deleted = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) for
  /// tables entries.
  /// </summary>
  public sealed partial class SysTablesEntryPB : pb::IMessage<SysTablesEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysTablesEntryPB> _parser = new pb::MessageParser<SysTablesEntryPB>(() => new SysTablesEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysTablesEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTablesEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTablesEntryPB(SysTablesEntryPB other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      version_ = other.version_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      fullyAppliedSchema_ = other.fullyAppliedSchema_ != null ? other.fullyAppliedSchema_.Clone() : null;
      partitionSchema_ = other.partitionSchema_ != null ? other.partitionSchema_.Clone() : null;
      nextColumnId_ = other.nextColumnId_;
      numReplicas_ = other.numReplicas_;
      state_ = other.state_;
      stateMsg_ = other.stateMsg_;
      createTimestamp_ = other.createTimestamp_;
      alterTimestamp_ = other.alterTimestamp_;
      extraConfig_ = other.extraConfig_ != null ? other.extraConfig_.Clone() : null;
      owner_ = other.owner_;
      tableType_ = other.tableType_;
      tableDiskSizeLimit_ = other.tableDiskSizeLimit_;
      tableRowCountLimit_ = other.tableRowCountLimit_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTablesEntryPB Clone() {
      return new SysTablesEntryPB(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    /// <summary>
    /// Table name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    /// <summary>
    /// sequence-id for the table metadata.
    /// Used on tablet-report to avoid sending "alter-table" notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
    /// <summary>
    /// Newest table schema (every TS will eventually have it).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "fully_applied_schema" field.</summary>
    public const int FullyAppliedSchemaFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB fullyAppliedSchema_;
    /// <summary>
    /// Last table schema that is guaranteed to have reached every TS, though
    /// not necessarily the newest schema.
    ///
    /// This is the schema provided to the user on client->GetSchema(tableName).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB FullyAppliedSchema {
      get { return fullyAppliedSchema_; }
      set {
        fullyAppliedSchema_ = value;
      }
    }

    /// <summary>Field number for the "partition_schema" field.</summary>
    public const int PartitionSchemaFieldNumber = 9;
    private global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB partitionSchema_;
    /// <summary>
    /// The table's partition schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB PartitionSchema {
      get { return partitionSchema_; }
      set {
        partitionSchema_ = value;
      }
    }

    /// <summary>Field number for the "next_column_id" field.</summary>
    public const int NextColumnIdFieldNumber = 8;
    private readonly static int NextColumnIdDefaultValue = 0;

    private int nextColumnId_;
    /// <summary>
    /// The next column ID to assign to newly added columns in this table.
    /// This prevents column ID reuse.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextColumnId {
      get { if ((_hasBits0 & 8) != 0) { return nextColumnId_; } else { return NextColumnIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nextColumnId_ = value;
      }
    }
    /// <summary>Gets whether the "next_column_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextColumnId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "next_column_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextColumnId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 5;
    private readonly static int NumReplicasDefaultValue = 0;

    private int numReplicas_;
    /// <summary>
    /// Number of TS replicas
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { if ((_hasBits0 & 2) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numReplicas_ = value;
      }
    }
    /// <summary>Gets whether the "num_replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumReplicas {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num_replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumReplicas() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State state_;
    /// <summary>
    /// Debug state for the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State State {
      get { if ((_hasBits0 & 4) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "state_msg" field.</summary>
    public const int StateMsgFieldNumber = 7;
    private readonly static pb::ByteString StateMsgDefaultValue = pb::ByteString.Empty;

    private pb::ByteString stateMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StateMsg {
      get { return stateMsg_ ?? StateMsgDefaultValue; }
      set {
        stateMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state_msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStateMsg {
      get { return stateMsg_ != null; }
    }
    /// <summary>Clears the value of the "state_msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStateMsg() {
      stateMsg_ = null;
    }

    /// <summary>Field number for the "create_timestamp" field.</summary>
    public const int CreateTimestampFieldNumber = 10;
    private readonly static long CreateTimestampDefaultValue = 0L;

    private long createTimestamp_;
    /// <summary>
    /// The create time of the table, in seconds since the epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return createTimestamp_; } else { return CreateTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        createTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "create_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "create_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateTimestamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "alter_timestamp" field.</summary>
    public const int AlterTimestampFieldNumber = 11;
    private readonly static long AlterTimestampDefaultValue = 0L;

    private long alterTimestamp_;
    /// <summary>
    /// The last alter time of the table, in seconds since the epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AlterTimestamp {
      get { if ((_hasBits0 & 32) != 0) { return alterTimestamp_; } else { return AlterTimestampDefaultValue; } }
      set {
        _hasBits0 |= 32;
        alterTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "alter_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlterTimestamp {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "alter_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlterTimestamp() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "extra_config" field.</summary>
    public const int ExtraConfigFieldNumber = 12;
    private global::Knet.Kudu.Client.Protobuf.TableExtraConfigPB extraConfig_;
    /// <summary>
    /// The table's extra configuration properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.TableExtraConfigPB ExtraConfig {
      get { return extraConfig_; }
      set {
        extraConfig_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 13;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The user that owns the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "table_type" field.</summary>
    public const int TableTypeFieldNumber = 14;
    private readonly static global::Knet.Kudu.Client.Protobuf.TableTypePB TableTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.TableTypePB.DefaultTable;

    private global::Knet.Kudu.Client.Protobuf.TableTypePB tableType_;
    /// <summary>
    /// The table type. If not set, it is assumed this table is a user-defined
    /// table, rather than a system table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.TableTypePB TableType {
      get { if ((_hasBits0 & 64) != 0) { return tableType_; } else { return TableTypeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        tableType_ = value;
      }
    }
    /// <summary>Gets whether the "table_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableType {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "table_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableType() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "table_disk_size_limit" field.</summary>
    public const int TableDiskSizeLimitFieldNumber = 15;
    private readonly static long TableDiskSizeLimitDefaultValue = 0L;

    private long tableDiskSizeLimit_;
    /// <summary>
    /// Table disk size limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TableDiskSizeLimit {
      get { if ((_hasBits0 & 128) != 0) { return tableDiskSizeLimit_; } else { return TableDiskSizeLimitDefaultValue; } }
      set {
        _hasBits0 |= 128;
        tableDiskSizeLimit_ = value;
      }
    }
    /// <summary>Gets whether the "table_disk_size_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableDiskSizeLimit {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "table_disk_size_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableDiskSizeLimit() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "table_row_count_limit" field.</summary>
    public const int TableRowCountLimitFieldNumber = 16;
    private readonly static long TableRowCountLimitDefaultValue = 0L;

    private long tableRowCountLimit_;
    /// <summary>
    /// Table row count limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TableRowCountLimit {
      get { if ((_hasBits0 & 256) != 0) { return tableRowCountLimit_; } else { return TableRowCountLimitDefaultValue; } }
      set {
        _hasBits0 |= 256;
        tableRowCountLimit_ = value;
      }
    }
    /// <summary>Gets whether the "table_row_count_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableRowCountLimit {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "table_row_count_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableRowCountLimit() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 17;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    /// <summary>
    /// The comment on the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysTablesEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysTablesEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(FullyAppliedSchema, other.FullyAppliedSchema)) return false;
      if (!object.Equals(PartitionSchema, other.PartitionSchema)) return false;
      if (NextColumnId != other.NextColumnId) return false;
      if (NumReplicas != other.NumReplicas) return false;
      if (State != other.State) return false;
      if (StateMsg != other.StateMsg) return false;
      if (CreateTimestamp != other.CreateTimestamp) return false;
      if (AlterTimestamp != other.AlterTimestamp) return false;
      if (!object.Equals(ExtraConfig, other.ExtraConfig)) return false;
      if (Owner != other.Owner) return false;
      if (TableType != other.TableType) return false;
      if (TableDiskSizeLimit != other.TableDiskSizeLimit) return false;
      if (TableRowCountLimit != other.TableRowCountLimit) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (fullyAppliedSchema_ != null) hash ^= FullyAppliedSchema.GetHashCode();
      if (partitionSchema_ != null) hash ^= PartitionSchema.GetHashCode();
      if (HasNextColumnId) hash ^= NextColumnId.GetHashCode();
      if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasStateMsg) hash ^= StateMsg.GetHashCode();
      if (HasCreateTimestamp) hash ^= CreateTimestamp.GetHashCode();
      if (HasAlterTimestamp) hash ^= AlterTimestamp.GetHashCode();
      if (extraConfig_ != null) hash ^= ExtraConfig.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasTableType) hash ^= TableType.GetHashCode();
      if (HasTableDiskSizeLimit) hash ^= TableDiskSizeLimit.GetHashCode();
      if (HasTableRowCountLimit) hash ^= TableRowCountLimit.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(Version);
      }
      if (schema_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Schema);
      }
      if (fullyAppliedSchema_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FullyAppliedSchema);
      }
      if (HasNumReplicas) {
        output.WriteRawTag(40);
        output.WriteInt32(NumReplicas);
      }
      if (HasState) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (HasStateMsg) {
        output.WriteRawTag(58);
        output.WriteBytes(StateMsg);
      }
      if (HasNextColumnId) {
        output.WriteRawTag(64);
        output.WriteInt32(NextColumnId);
      }
      if (partitionSchema_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PartitionSchema);
      }
      if (HasCreateTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(CreateTimestamp);
      }
      if (HasAlterTimestamp) {
        output.WriteRawTag(88);
        output.WriteInt64(AlterTimestamp);
      }
      if (extraConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ExtraConfig);
      }
      if (HasOwner) {
        output.WriteRawTag(106);
        output.WriteString(Owner);
      }
      if (HasTableType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TableType);
      }
      if (HasTableDiskSizeLimit) {
        output.WriteRawTag(120);
        output.WriteInt64(TableDiskSizeLimit);
      }
      if (HasTableRowCountLimit) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TableRowCountLimit);
      }
      if (HasComment) {
        output.WriteRawTag(138, 1);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (fullyAppliedSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FullyAppliedSchema);
      }
      if (partitionSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionSchema);
      }
      if (HasNextColumnId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextColumnId);
      }
      if (HasNumReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasStateMsg) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StateMsg);
      }
      if (HasCreateTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimestamp);
      }
      if (HasAlterTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AlterTimestamp);
      }
      if (extraConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraConfig);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasTableType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableType);
      }
      if (HasTableDiskSizeLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TableDiskSizeLimit);
      }
      if (HasTableRowCountLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TableRowCountLimit);
      }
      if (HasComment) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysTablesEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.fullyAppliedSchema_ != null) {
        if (fullyAppliedSchema_ == null) {
          FullyAppliedSchema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        FullyAppliedSchema.MergeFrom(other.FullyAppliedSchema);
      }
      if (other.partitionSchema_ != null) {
        if (partitionSchema_ == null) {
          PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
        }
        PartitionSchema.MergeFrom(other.PartitionSchema);
      }
      if (other.HasNextColumnId) {
        NextColumnId = other.NextColumnId;
      }
      if (other.HasNumReplicas) {
        NumReplicas = other.NumReplicas;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasStateMsg) {
        StateMsg = other.StateMsg;
      }
      if (other.HasCreateTimestamp) {
        CreateTimestamp = other.CreateTimestamp;
      }
      if (other.HasAlterTimestamp) {
        AlterTimestamp = other.AlterTimestamp;
      }
      if (other.extraConfig_ != null) {
        if (extraConfig_ == null) {
          ExtraConfig = new global::Knet.Kudu.Client.Protobuf.TableExtraConfigPB();
        }
        ExtraConfig.MergeFrom(other.ExtraConfig);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasTableType) {
        TableType = other.TableType;
      }
      if (other.HasTableDiskSizeLimit) {
        TableDiskSizeLimit = other.TableDiskSizeLimit;
      }
      if (other.HasTableRowCountLimit) {
        TableRowCountLimit = other.TableRowCountLimit;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 16: {
            Version = input.ReadUInt32();
            break;
          }
          case 26: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 34: {
            if (fullyAppliedSchema_ == null) {
              FullyAppliedSchema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(FullyAppliedSchema);
            break;
          }
          case 40: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 48: {
            State = (global::Knet.Kudu.Client.Protobuf.Master.SysTablesEntryPB.Types.State) input.ReadEnum();
            break;
          }
          case 58: {
            StateMsg = input.ReadBytes();
            break;
          }
          case 64: {
            NextColumnId = input.ReadInt32();
            break;
          }
          case 74: {
            if (partitionSchema_ == null) {
              PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
            }
            input.ReadMessage(PartitionSchema);
            break;
          }
          case 80: {
            CreateTimestamp = input.ReadInt64();
            break;
          }
          case 88: {
            AlterTimestamp = input.ReadInt64();
            break;
          }
          case 98: {
            if (extraConfig_ == null) {
              ExtraConfig = new global::Knet.Kudu.Client.Protobuf.TableExtraConfigPB();
            }
            input.ReadMessage(ExtraConfig);
            break;
          }
          case 106: {
            Owner = input.ReadString();
            break;
          }
          case 112: {
            TableType = (global::Knet.Kudu.Client.Protobuf.TableTypePB) input.ReadEnum();
            break;
          }
          case 120: {
            TableDiskSizeLimit = input.ReadInt64();
            break;
          }
          case 128: {
            TableRowCountLimit = input.ReadInt64();
            break;
          }
          case 138: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SysTablesEntryPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("PREPARING")] Preparing = 1,
        [pbr::OriginalName("RUNNING")] Running = 2,
        [pbr::OriginalName("ALTERING")] Altering = 3,
        [pbr::OriginalName("REMOVED")] Removed = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) to represent
  /// certificate authority (CA) information. Not more than one entry of this type
  /// should exist in the sys.catalog table at any time.
  /// </summary>
  public sealed partial class SysCertAuthorityEntryPB : pb::IMessage<SysCertAuthorityEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysCertAuthorityEntryPB> _parser = new pb::MessageParser<SysCertAuthorityEntryPB>(() => new SysCertAuthorityEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysCertAuthorityEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysCertAuthorityEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysCertAuthorityEntryPB(SysCertAuthorityEntryPB other) : this() {
      privateKey_ = other.privateKey_;
      certificate_ = other.certificate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysCertAuthorityEntryPB Clone() {
      return new SysCertAuthorityEntryPB(this);
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private readonly static pb::ByteString PrivateKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString privateKey_;
    /// <summary>
    /// Private key body in DER format. This information is sensitive,
    /// that's why the REDACT attribute is present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PrivateKey {
      get { return privateKey_ ?? PrivateKeyDefaultValue; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "private_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateKey {
      get { return privateKey_ != null; }
    }
    /// <summary>Clears the value of the "private_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateKey() {
      privateKey_ = null;
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 2;
    private readonly static pb::ByteString CertificateDefaultValue = pb::ByteString.Empty;

    private pb::ByteString certificate_;
    /// <summary>
    /// Certificate body in DER format. This information is not sensitive,
    /// but we are redacting most of security-related info anyway
    /// (handshake/SASL tokens, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Certificate {
      get { return certificate_ ?? CertificateDefaultValue; }
      set {
        certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "certificate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertificate {
      get { return certificate_ != null; }
    }
    /// <summary>Clears the value of the "certificate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertificate() {
      certificate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysCertAuthorityEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysCertAuthorityEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (Certificate != other.Certificate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrivateKey) hash ^= PrivateKey.GetHashCode();
      if (HasCertificate) hash ^= Certificate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPrivateKey) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (HasCertificate) {
        output.WriteRawTag(18);
        output.WriteBytes(Certificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPrivateKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (HasCertificate) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Certificate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysCertAuthorityEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasPrivateKey) {
        PrivateKey = other.PrivateKey;
      }
      if (other.HasCertificate) {
        Certificate = other.Certificate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            Certificate = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) to represent
  /// a Token Signing Key (TSK) object. Multiple entries of this type
  /// can simultaneously co-exist in the sys.catalog table.
  /// </summary>
  public sealed partial class SysTskEntryPB : pb::IMessage<SysTskEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysTskEntryPB> _parser = new pb::MessageParser<SysTskEntryPB>(() => new SysTskEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysTskEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTskEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTskEntryPB(SysTskEntryPB other) : this() {
      tsk_ = other.tsk_ != null ? other.tsk_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTskEntryPB Clone() {
      return new SysTskEntryPB(this);
    }

    /// <summary>Field number for the "tsk" field.</summary>
    public const int TskFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPrivateKeyPB tsk_;
    /// <summary>
    /// TokenSigningPrivateKeyPB message representing a TSK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPrivateKeyPB Tsk {
      get { return tsk_; }
      set {
        tsk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysTskEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysTskEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tsk, other.Tsk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (tsk_ != null) hash ^= Tsk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tsk_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tsk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (tsk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tsk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysTskEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.tsk_ != null) {
        if (tsk_ == null) {
          Tsk = new global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPrivateKeyPB();
        }
        Tsk.MergeFrom(other.Tsk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tsk_ == null) {
              Tsk = new global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPrivateKeyPB();
            }
            input.ReadMessage(Tsk);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) to represent
  /// the latest processed Hive Metastore notification log event ID.
  /// </summary>
  public sealed partial class SysNotificationLogEventIdPB : pb::IMessage<SysNotificationLogEventIdPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysNotificationLogEventIdPB> _parser = new pb::MessageParser<SysNotificationLogEventIdPB>(() => new SysNotificationLogEventIdPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysNotificationLogEventIdPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysNotificationLogEventIdPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysNotificationLogEventIdPB(SysNotificationLogEventIdPB other) : this() {
      _hasBits0 = other._hasBits0;
      latestNotificationLogEventId_ = other.latestNotificationLogEventId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysNotificationLogEventIdPB Clone() {
      return new SysNotificationLogEventIdPB(this);
    }

    /// <summary>Field number for the "latest_notification_log_event_id" field.</summary>
    public const int LatestNotificationLogEventIdFieldNumber = 1;
    private readonly static long LatestNotificationLogEventIdDefaultValue = 0L;

    private long latestNotificationLogEventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LatestNotificationLogEventId {
      get { if ((_hasBits0 & 1) != 0) { return latestNotificationLogEventId_; } else { return LatestNotificationLogEventIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        latestNotificationLogEventId_ = value;
      }
    }
    /// <summary>Gets whether the "latest_notification_log_event_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLatestNotificationLogEventId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "latest_notification_log_event_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLatestNotificationLogEventId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysNotificationLogEventIdPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysNotificationLogEventIdPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatestNotificationLogEventId != other.LatestNotificationLogEventId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLatestNotificationLogEventId) hash ^= LatestNotificationLogEventId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLatestNotificationLogEventId) {
        output.WriteRawTag(8);
        output.WriteInt64(LatestNotificationLogEventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLatestNotificationLogEventId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestNotificationLogEventId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysNotificationLogEventIdPB other) {
      if (other == null) {
        return;
      }
      if (other.HasLatestNotificationLogEventId) {
        LatestNotificationLogEventId = other.LatestNotificationLogEventId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LatestNotificationLogEventId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table ("metadata" column) to represent
  /// the cluster ID.
  /// </summary>
  public sealed partial class SysClusterIdEntryPB : pb::IMessage<SysClusterIdEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysClusterIdEntryPB> _parser = new pb::MessageParser<SysClusterIdEntryPB>(() => new SysClusterIdEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysClusterIdEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysClusterIdEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysClusterIdEntryPB(SysClusterIdEntryPB other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysClusterIdEntryPB Clone() {
      return new SysClusterIdEntryPB(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private readonly static string ClusterIdDefaultValue = "";

    private string clusterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_ ?? ClusterIdDefaultValue; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cluster_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClusterId {
      get { return clusterId_ != null; }
    }
    /// <summary>Clears the value of the "cluster_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClusterId() {
      clusterId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysClusterIdEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysClusterIdEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClusterId) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClusterId) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClusterId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysClusterIdEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasClusterId) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The on-disk entry in the sys.catalog table to represent the existence of
  /// on-going tserver state (e.g. maintenance mode).
  /// </summary>
  public sealed partial class SysTServerStateEntryPB : pb::IMessage<SysTServerStateEntryPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SysTServerStateEntryPB> _parser = new pb::MessageParser<SysTServerStateEntryPB>(() => new SysTServerStateEntryPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SysTServerStateEntryPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTServerStateEntryPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTServerStateEntryPB(SysTServerStateEntryPB other) : this() {
      _hasBits0 = other._hasBits0;
      state_ = other.state_;
      timestampSecs_ = other.timestampSecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SysTServerStateEntryPB Clone() {
      return new SysTServerStateEntryPB(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB.UnknownState;

    private global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp_secs" field.</summary>
    public const int TimestampSecsFieldNumber = 2;
    private readonly static long TimestampSecsDefaultValue = 0L;

    private long timestampSecs_;
    /// <summary>
    /// Timestamp, in seconds since the epoch, at which this state was set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimestampSecs {
      get { if ((_hasBits0 & 2) != 0) { return timestampSecs_; } else { return TimestampSecsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestampSecs_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp_secs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestampSecs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp_secs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestampSecs() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SysTServerStateEntryPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SysTServerStateEntryPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (TimestampSecs != other.TimestampSecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasTimestampSecs) hash ^= TimestampSecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (HasTimestampSecs) {
        output.WriteRawTag(16);
        output.WriteInt64(TimestampSecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasTimestampSecs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampSecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SysTServerStateEntryPB other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasTimestampSecs) {
        TimestampSecs = other.TimestampSecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB) input.ReadEnum();
            break;
          }
          case 16: {
            TimestampSecs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingRequestPB : pb::IMessage<PingRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PingRequestPB> _parser = new pb::MessageParser<PingRequestPB>(() => new PingRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PingRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB(PingRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB Clone() {
      return new PingRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PingRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PingRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PingRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class PingResponsePB : pb::IMessage<PingResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PingResponsePB> _parser = new pb::MessageParser<PingResponsePB>(() => new PingResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PingResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB(PingResponsePB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB Clone() {
      return new PingResponsePB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PingResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PingResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PingResponsePB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class ReportedTabletPB : pb::IMessage<ReportedTabletPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReportedTabletPB> _parser = new pb::MessageParser<ReportedTabletPB>(() => new ReportedTabletPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportedTabletPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletPB(ReportedTabletPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      state_ = other.state_;
      tabletDataState_ = other.tabletDataState_;
      consensusState_ = other.consensusState_ != null ? other.consensusState_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      schemaVersion_ = other.schemaVersion_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletPB Clone() {
      return new ReportedTabletPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB.Unknown;

    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tablet_data_state" field.</summary>
    public const int TabletDataStateFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState TabletDataStateDefaultValue = global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState.TabletDataUnknown;

    private global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState tabletDataState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState TabletDataState {
      get { if ((_hasBits0 & 4) != 0) { return tabletDataState_; } else { return TabletDataStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tabletDataState_ = value;
      }
    }
    /// <summary>Gets whether the "tablet_data_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletDataState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tablet_data_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletDataState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "consensus_state" field.</summary>
    public const int ConsensusStateFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB consensusState_;
    /// <summary>
    /// The latest consensus state.
    /// This will be missing if the tablet is not in a RUNNING state
    /// (i.e. if it is BOOTSTRAPPING).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB ConsensusState {
      get { return consensusState_; }
      set {
        consensusState_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 5;
    private readonly static uint SchemaVersionDefaultValue = 0;

    private uint schemaVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SchemaVersion {
      get { if ((_hasBits0 & 2) != 0) { return schemaVersion_; } else { return SchemaVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        schemaVersion_ = value;
      }
    }
    /// <summary>Gets whether the "schema_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSchemaVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "schema_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSchemaVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 7;
    private global::Knet.Kudu.Client.Protobuf.Tablet.ReportedTabletStatsPB stats_;
    /// <summary>
    /// Tablet statistics.
    /// This is only included in the report if the replica is a LEADER.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tablet.ReportedTabletStatsPB Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportedTabletPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportedTabletPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (State != other.State) return false;
      if (TabletDataState != other.TabletDataState) return false;
      if (!object.Equals(ConsensusState, other.ConsensusState)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasTabletDataState) hash ^= TabletDataState.GetHashCode();
      if (consensusState_ != null) hash ^= ConsensusState.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasSchemaVersion) hash ^= SchemaVersion.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (consensusState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConsensusState);
      }
      if (error_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Error);
      }
      if (HasSchemaVersion) {
        output.WriteRawTag(40);
        output.WriteUInt32(SchemaVersion);
      }
      if (HasTabletDataState) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TabletDataState);
      }
      if (stats_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasTabletDataState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TabletDataState);
      }
      if (consensusState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsensusState);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasSchemaVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SchemaVersion);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportedTabletPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasTabletDataState) {
        TabletDataState = other.TabletDataState;
      }
      if (other.consensusState_ != null) {
        if (consensusState_ == null) {
          ConsensusState = new global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB();
        }
        ConsensusState.MergeFrom(other.ConsensusState);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasSchemaVersion) {
        SchemaVersion = other.SchemaVersion;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Knet.Kudu.Client.Protobuf.Tablet.ReportedTabletStatsPB();
        }
        Stats.MergeFrom(other.Stats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 16: {
            State = (global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatePB) input.ReadEnum();
            break;
          }
          case 26: {
            if (consensusState_ == null) {
              ConsensusState = new global::Knet.Kudu.Client.Protobuf.Consensus.ConsensusStatePB();
            }
            input.ReadMessage(ConsensusState);
            break;
          }
          case 34: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 40: {
            SchemaVersion = input.ReadUInt32();
            break;
          }
          case 48: {
            TabletDataState = (global::Knet.Kudu.Client.Protobuf.Tablet.TabletDataState) input.ReadEnum();
            break;
          }
          case 58: {
            if (stats_ == null) {
              Stats = new global::Knet.Kudu.Client.Protobuf.Tablet.ReportedTabletStatsPB();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by the tablet server to report the set of tablets hosted by that TS.
  /// </summary>
  public sealed partial class TabletReportPB : pb::IMessage<TabletReportPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletReportPB> _parser = new pb::MessageParser<TabletReportPB>(() => new TabletReportPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletReportPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportPB(TabletReportPB other) : this() {
      _hasBits0 = other._hasBits0;
      isIncremental_ = other.isIncremental_;
      updatedTablets_ = other.updatedTablets_.Clone();
      removedTabletIds_ = other.removedTabletIds_.Clone();
      sequenceNumber_ = other.sequenceNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportPB Clone() {
      return new TabletReportPB(this);
    }

    /// <summary>Field number for the "is_incremental" field.</summary>
    public const int IsIncrementalFieldNumber = 1;
    private readonly static bool IsIncrementalDefaultValue = false;

    private bool isIncremental_;
    /// <summary>
    /// If false, then this is a full report, and any prior information about
    /// tablets hosted by this server should be dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsIncremental {
      get { if ((_hasBits0 & 1) != 0) { return isIncremental_; } else { return IsIncrementalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isIncremental_ = value;
      }
    }
    /// <summary>Gets whether the "is_incremental" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsIncremental {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_incremental" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsIncremental() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "updated_tablets" field.</summary>
    public const int UpdatedTabletsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB> _repeated_updatedTablets_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB> updatedTablets_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB>();
    /// <summary>
    /// Tablets for which to update information. If 'is_incremental' is false,
    /// then this is the full set of tablets on the server, and any tablets
    /// which the master is aware of but not listed in this protobuf should
    /// be assumed to have been removed from this server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletPB> UpdatedTablets {
      get { return updatedTablets_; }
    }

    /// <summary>Field number for the "removed_tablet_ids" field.</summary>
    public const int RemovedTabletIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_removedTabletIds_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> removedTabletIds_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Tablet IDs which the tablet server has removed and should no longer be
    /// considered hosted here. This will always be empty in a non-incremental
    /// report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> RemovedTabletIds {
      get { return removedTabletIds_; }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 4;
    private readonly static int SequenceNumberDefaultValue = 0;

    private int sequenceNumber_;
    /// <summary>
    /// Every time the TS generates a tablet report, it creates a sequence
    /// number. This can be useful in debugging, and also determining which
    /// changes have not yet been reported to the master.
    /// The first tablet report (non-incremental) is sequence number 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SequenceNumber {
      get { if ((_hasBits0 & 2) != 0) { return sequenceNumber_; } else { return SequenceNumberDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sequenceNumber_ = value;
      }
    }
    /// <summary>Gets whether the "sequence_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSequenceNumber {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sequence_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSequenceNumber() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletReportPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletReportPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsIncremental != other.IsIncremental) return false;
      if(!updatedTablets_.Equals(other.updatedTablets_)) return false;
      if(!removedTabletIds_.Equals(other.removedTabletIds_)) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsIncremental) hash ^= IsIncremental.GetHashCode();
      hash ^= updatedTablets_.GetHashCode();
      hash ^= removedTabletIds_.GetHashCode();
      if (HasSequenceNumber) hash ^= SequenceNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsIncremental) {
        output.WriteRawTag(8);
        output.WriteBool(IsIncremental);
      }
      updatedTablets_.WriteTo(ref output, _repeated_updatedTablets_codec);
      removedTabletIds_.WriteTo(ref output, _repeated_removedTabletIds_codec);
      if (HasSequenceNumber) {
        output.WriteRawTag(32);
        output.WriteInt32(SequenceNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsIncremental) {
        size += 1 + 1;
      }
      size += updatedTablets_.CalculateSize(_repeated_updatedTablets_codec);
      size += removedTabletIds_.CalculateSize(_repeated_removedTabletIds_codec);
      if (HasSequenceNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletReportPB other) {
      if (other == null) {
        return;
      }
      if (other.HasIsIncremental) {
        IsIncremental = other.IsIncremental;
      }
      updatedTablets_.Add(other.updatedTablets_);
      removedTabletIds_.Add(other.removedTabletIds_);
      if (other.HasSequenceNumber) {
        SequenceNumber = other.SequenceNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsIncremental = input.ReadBool();
            break;
          }
          case 18: {
            updatedTablets_.AddEntriesFrom(ref input, _repeated_updatedTablets_codec);
            break;
          }
          case 26: {
            removedTabletIds_.AddEntriesFrom(ref input, _repeated_removedTabletIds_codec);
            break;
          }
          case 32: {
            SequenceNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportedTabletUpdatesPB : pb::IMessage<ReportedTabletUpdatesPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReportedTabletUpdatesPB> _parser = new pb::MessageParser<ReportedTabletUpdatesPB>(() => new ReportedTabletUpdatesPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportedTabletUpdatesPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletUpdatesPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletUpdatesPB(ReportedTabletUpdatesPB other) : this() {
      tabletId_ = other.tabletId_;
      stateMsg_ = other.stateMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportedTabletUpdatesPB Clone() {
      return new ReportedTabletUpdatesPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "state_msg" field.</summary>
    public const int StateMsgFieldNumber = 2;
    private readonly static string StateMsgDefaultValue = "";

    private string stateMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateMsg {
      get { return stateMsg_ ?? StateMsgDefaultValue; }
      set {
        stateMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state_msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStateMsg {
      get { return stateMsg_ != null; }
    }
    /// <summary>Clears the value of the "state_msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStateMsg() {
      stateMsg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportedTabletUpdatesPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportedTabletUpdatesPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (StateMsg != other.StateMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasStateMsg) hash ^= StateMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (HasStateMsg) {
        output.WriteRawTag(18);
        output.WriteString(StateMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (HasStateMsg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportedTabletUpdatesPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasStateMsg) {
        StateMsg = other.StateMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 18: {
            StateMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by the Master in response to the TS tablet report (part of the heartbeats)
  /// </summary>
  public sealed partial class TabletReportUpdatesPB : pb::IMessage<TabletReportUpdatesPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletReportUpdatesPB> _parser = new pb::MessageParser<TabletReportUpdatesPB>(() => new TabletReportUpdatesPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletReportUpdatesPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportUpdatesPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportUpdatesPB(TabletReportUpdatesPB other) : this() {
      tablets_ = other.tablets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletReportUpdatesPB Clone() {
      return new TabletReportUpdatesPB(this);
    }

    /// <summary>Field number for the "tablets" field.</summary>
    public const int TabletsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB> _repeated_tablets_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB> tablets_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ReportedTabletUpdatesPB> Tablets {
      get { return tablets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletReportUpdatesPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletReportUpdatesPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tablets_.Equals(other.tablets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tablets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tablets_.WriteTo(ref output, _repeated_tablets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tablets_.CalculateSize(_repeated_tablets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletReportUpdatesPB other) {
      if (other == null) {
        return;
      }
      tablets_.Add(other.tablets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tablets_.AddEntriesFrom(ref input, _repeated_tablets_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Heartbeat sent from the tablet-server to the master
  /// to establish liveness and report back any status changes.
  /// </summary>
  public sealed partial class TSHeartbeatRequestPB : pb::IMessage<TSHeartbeatRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TSHeartbeatRequestPB> _parser = new pb::MessageParser<TSHeartbeatRequestPB>(() => new TSHeartbeatRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TSHeartbeatRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatRequestPB(TSHeartbeatRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      common_ = other.common_ != null ? other.common_.Clone() : null;
      registration_ = other.registration_ != null ? other.registration_.Clone() : null;
      tabletReport_ = other.tabletReport_ != null ? other.tabletReport_.Clone() : null;
      numLiveTablets_ = other.numLiveTablets_;
      csrDer_ = other.csrDer_;
      latestTskSeqNum_ = other.latestTskSeqNum_;
      replicaManagementInfo_ = other.replicaManagementInfo_ != null ? other.replicaManagementInfo_.Clone() : null;
      numLiveTabletsByDimension_ = other.numLiveTabletsByDimension_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatRequestPB Clone() {
      return new TSHeartbeatRequestPB(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB registration_;
    /// <summary>
    /// Sent upon start-up of the TS, or in response to 'needs_reregister' on a heartbeat
    /// response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    /// <summary>Field number for the "tablet_report" field.</summary>
    public const int TabletReportFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB tabletReport_;
    /// <summary>
    /// Sent when the tablet information has changed, or in response to
    /// 'needs_full_tablet_report'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB TabletReport {
      get { return tabletReport_; }
      set {
        tabletReport_ = value;
      }
    }

    /// <summary>Field number for the "num_live_tablets" field.</summary>
    public const int NumLiveTabletsFieldNumber = 4;
    private readonly static int NumLiveTabletsDefaultValue = 0;

    private int numLiveTablets_;
    /// <summary>
    /// The number of tablets that are BOOTSTRAPPING or RUNNING.
    /// Used by the master to determine load when creating new tablet replicas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumLiveTablets {
      get { if ((_hasBits0 & 1) != 0) { return numLiveTablets_; } else { return NumLiveTabletsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numLiveTablets_ = value;
      }
    }
    /// <summary>Gets whether the "num_live_tablets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumLiveTablets {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_live_tablets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumLiveTablets() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "csr_der" field.</summary>
    public const int CsrDerFieldNumber = 5;
    private readonly static pb::ByteString CsrDerDefaultValue = pb::ByteString.Empty;

    private pb::ByteString csrDer_;
    /// <summary>
    /// If the tablet server needs its certificate signed, the CSR
    /// in DER format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CsrDer {
      get { return csrDer_ ?? CsrDerDefaultValue; }
      set {
        csrDer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "csr_der" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCsrDer {
      get { return csrDer_ != null; }
    }
    /// <summary>Clears the value of the "csr_der" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCsrDer() {
      csrDer_ = null;
    }

    /// <summary>Field number for the "latest_tsk_seq_num" field.</summary>
    public const int LatestTskSeqNumFieldNumber = 6;
    private readonly static long LatestTskSeqNumDefaultValue = 0L;

    private long latestTskSeqNum_;
    /// <summary>
    /// The most recently known TSK sequence number. Allows the master to
    /// selectively notify the tablet server of more recent TSKs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LatestTskSeqNum {
      get { if ((_hasBits0 & 2) != 0) { return latestTskSeqNum_; } else { return LatestTskSeqNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        latestTskSeqNum_ = value;
      }
    }
    /// <summary>Gets whether the "latest_tsk_seq_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLatestTskSeqNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "latest_tsk_seq_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLatestTskSeqNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "replica_management_info" field.</summary>
    public const int ReplicaManagementInfoFieldNumber = 7;
    private global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB replicaManagementInfo_;
    /// <summary>
    /// Replica management parameters that the tablet server is running with.
    /// This field is set only if the registration field is present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB ReplicaManagementInfo {
      get { return replicaManagementInfo_; }
      set {
        replicaManagementInfo_ = value;
      }
    }

    /// <summary>Field number for the "num_live_tablets_by_dimension" field.</summary>
    public const int NumLiveTabletsByDimensionFieldNumber = 8;
    private static readonly pbc::MapField<string, int>.Codec _map_numLiveTabletsByDimension_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 66);
    private readonly pbc::MapField<string, int> numLiveTabletsByDimension_ = new pbc::MapField<string, int>();
    /// <summary>
    /// The number of tablets that are BOOTSTRAPPING or RUNNING in each dimension.
    /// Used by the master to determine load when creating new tablet replicas
    /// based on dimension.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> NumLiveTabletsByDimension {
      get { return numLiveTabletsByDimension_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TSHeartbeatRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TSHeartbeatRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Registration, other.Registration)) return false;
      if (!object.Equals(TabletReport, other.TabletReport)) return false;
      if (NumLiveTablets != other.NumLiveTablets) return false;
      if (CsrDer != other.CsrDer) return false;
      if (LatestTskSeqNum != other.LatestTskSeqNum) return false;
      if (!object.Equals(ReplicaManagementInfo, other.ReplicaManagementInfo)) return false;
      if (!NumLiveTabletsByDimension.Equals(other.NumLiveTabletsByDimension)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (registration_ != null) hash ^= Registration.GetHashCode();
      if (tabletReport_ != null) hash ^= TabletReport.GetHashCode();
      if (HasNumLiveTablets) hash ^= NumLiveTablets.GetHashCode();
      if (HasCsrDer) hash ^= CsrDer.GetHashCode();
      if (HasLatestTskSeqNum) hash ^= LatestTskSeqNum.GetHashCode();
      if (replicaManagementInfo_ != null) hash ^= ReplicaManagementInfo.GetHashCode();
      hash ^= NumLiveTabletsByDimension.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (registration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Registration);
      }
      if (tabletReport_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TabletReport);
      }
      if (HasNumLiveTablets) {
        output.WriteRawTag(32);
        output.WriteInt32(NumLiveTablets);
      }
      if (HasCsrDer) {
        output.WriteRawTag(42);
        output.WriteBytes(CsrDer);
      }
      if (HasLatestTskSeqNum) {
        output.WriteRawTag(48);
        output.WriteInt64(LatestTskSeqNum);
      }
      if (replicaManagementInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ReplicaManagementInfo);
      }
      numLiveTabletsByDimension_.WriteTo(ref output, _map_numLiveTabletsByDimension_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      if (tabletReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TabletReport);
      }
      if (HasNumLiveTablets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumLiveTablets);
      }
      if (HasCsrDer) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CsrDer);
      }
      if (HasLatestTskSeqNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestTskSeqNum);
      }
      if (replicaManagementInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplicaManagementInfo);
      }
      size += numLiveTabletsByDimension_.CalculateSize(_map_numLiveTabletsByDimension_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TSHeartbeatRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
        }
        Registration.MergeFrom(other.Registration);
      }
      if (other.tabletReport_ != null) {
        if (tabletReport_ == null) {
          TabletReport = new global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB();
        }
        TabletReport.MergeFrom(other.TabletReport);
      }
      if (other.HasNumLiveTablets) {
        NumLiveTablets = other.NumLiveTablets;
      }
      if (other.HasCsrDer) {
        CsrDer = other.CsrDer;
      }
      if (other.HasLatestTskSeqNum) {
        LatestTskSeqNum = other.LatestTskSeqNum;
      }
      if (other.replicaManagementInfo_ != null) {
        if (replicaManagementInfo_ == null) {
          ReplicaManagementInfo = new global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB();
        }
        ReplicaManagementInfo.MergeFrom(other.ReplicaManagementInfo);
      }
      numLiveTabletsByDimension_.Add(other.numLiveTabletsByDimension_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Knet.Kudu.Client.Protobuf.Master.TSToMasterCommonPB();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (registration_ == null) {
              Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 26: {
            if (tabletReport_ == null) {
              TabletReport = new global::Knet.Kudu.Client.Protobuf.Master.TabletReportPB();
            }
            input.ReadMessage(TabletReport);
            break;
          }
          case 32: {
            NumLiveTablets = input.ReadInt32();
            break;
          }
          case 42: {
            CsrDer = input.ReadBytes();
            break;
          }
          case 48: {
            LatestTskSeqNum = input.ReadInt64();
            break;
          }
          case 58: {
            if (replicaManagementInfo_ == null) {
              ReplicaManagementInfo = new global::Knet.Kudu.Client.Protobuf.Consensus.ReplicaManagementInfoPB();
            }
            input.ReadMessage(ReplicaManagementInfo);
            break;
          }
          case 66: {
            numLiveTabletsByDimension_.AddEntriesFrom(ref input, _map_numLiveTabletsByDimension_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TSHeartbeatResponsePB : pb::IMessage<TSHeartbeatResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TSHeartbeatResponsePB> _parser = new pb::MessageParser<TSHeartbeatResponsePB>(() => new TSHeartbeatResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TSHeartbeatResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatResponsePB(TSHeartbeatResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      masterInstance_ = other.masterInstance_ != null ? other.masterInstance_.Clone() : null;
      needsReregister_ = other.needsReregister_;
      needsFullTabletReport_ = other.needsFullTabletReport_;
      tabletReport_ = other.tabletReport_ != null ? other.tabletReport_.Clone() : null;
      leaderMaster_ = other.leaderMaster_;
      signedCertDer_ = other.signedCertDer_;
      caCertDer_ = other.caCertDer_.Clone();
      tsks_ = other.tsks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSHeartbeatResponsePB Clone() {
      return new TSHeartbeatResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "master_instance" field.</summary>
    public const int MasterInstanceFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.NodeInstancePB masterInstance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.NodeInstancePB MasterInstance {
      get { return masterInstance_; }
      set {
        masterInstance_ = value;
      }
    }

    /// <summary>Field number for the "needs_reregister" field.</summary>
    public const int NeedsReregisterFieldNumber = 3;
    private readonly static bool NeedsReregisterDefaultValue = false;

    private bool needsReregister_;
    /// <summary>
    /// Indicates that the server which heartbeated needs to re-register
    /// with the master -- i.e send a heartbeat with the 'registration'
    /// filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedsReregister {
      get { if ((_hasBits0 & 1) != 0) { return needsReregister_; } else { return NeedsReregisterDefaultValue; } }
      set {
        _hasBits0 |= 1;
        needsReregister_ = value;
      }
    }
    /// <summary>Gets whether the "needs_reregister" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedsReregister {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "needs_reregister" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedsReregister() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "needs_full_tablet_report" field.</summary>
    public const int NeedsFullTabletReportFieldNumber = 4;
    private readonly static bool NeedsFullTabletReportDefaultValue = false;

    private bool needsFullTabletReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedsFullTabletReport {
      get { if ((_hasBits0 & 2) != 0) { return needsFullTabletReport_; } else { return NeedsFullTabletReportDefaultValue; } }
      set {
        _hasBits0 |= 2;
        needsFullTabletReport_ = value;
      }
    }
    /// <summary>Gets whether the "needs_full_tablet_report" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedsFullTabletReport {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "needs_full_tablet_report" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedsFullTabletReport() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tablet_report" field.</summary>
    public const int TabletReportFieldNumber = 5;
    private global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB tabletReport_;
    /// <summary>
    /// Sent when the master receives a TabletReport
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB TabletReport {
      get { return tabletReport_; }
      set {
        tabletReport_ = value;
      }
    }

    /// <summary>Field number for the "leader_master" field.</summary>
    public const int LeaderMasterFieldNumber = 6;
    private readonly static bool LeaderMasterDefaultValue = false;

    private bool leaderMaster_;
    /// <summary>
    /// Specify whether or not the node is the leader master.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LeaderMaster {
      get { if ((_hasBits0 & 4) != 0) { return leaderMaster_; } else { return LeaderMasterDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leaderMaster_ = value;
      }
    }
    /// <summary>Gets whether the "leader_master" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaderMaster {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leader_master" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaderMaster() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "signed_cert_der" field.</summary>
    public const int SignedCertDerFieldNumber = 7;
    private readonly static pb::ByteString SignedCertDerDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signedCertDer_;
    /// <summary>
    /// If the heartbeat request had a CSR, then the successfully
    /// signed certificate will be returned in DER format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SignedCertDer {
      get { return signedCertDer_ ?? SignedCertDerDefaultValue; }
      set {
        signedCertDer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signed_cert_der" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignedCertDer {
      get { return signedCertDer_ != null; }
    }
    /// <summary>Clears the value of the "signed_cert_der" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignedCertDer() {
      signedCertDer_ = null;
    }

    /// <summary>Field number for the "ca_cert_der" field.</summary>
    public const int CaCertDerFieldNumber = 8;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_caCertDer_codec
        = pb::FieldCodec.ForBytes(66);
    private readonly pbc::RepeatedField<pb::ByteString> caCertDer_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Any CA certs used by the cluster, currently only included when
    /// 'signed_cert_der' is also sent (however the tablet server will always check
    /// for all heartbeat responses). Currently the master only uses one cert, but
    /// we may support rolling this cert in the future, so tablet servers should
    /// add all returned certs to their trusted CA list.
    ///
    /// NOTE: this is not necessarily a "certificate chain" but rather a set of
    /// independent certs to be trusted. They may or may not have any signing
    /// relationship between them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> CaCertDer {
      get { return caCertDer_; }
    }

    /// <summary>Field number for the "tsks" field.</summary>
    public const int TsksFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPublicKeyPB> _repeated_tsks_codec
        = pb::FieldCodec.ForMessage(74, global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPublicKeyPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPublicKeyPB> tsks_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPublicKeyPB>();
    /// <summary>
    /// Token signing keys which the tablet server should begin trusting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Security.TokenSigningPublicKeyPB> Tsks {
      get { return tsks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TSHeartbeatResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TSHeartbeatResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(MasterInstance, other.MasterInstance)) return false;
      if (NeedsReregister != other.NeedsReregister) return false;
      if (NeedsFullTabletReport != other.NeedsFullTabletReport) return false;
      if (!object.Equals(TabletReport, other.TabletReport)) return false;
      if (LeaderMaster != other.LeaderMaster) return false;
      if (SignedCertDer != other.SignedCertDer) return false;
      if(!caCertDer_.Equals(other.caCertDer_)) return false;
      if(!tsks_.Equals(other.tsks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (masterInstance_ != null) hash ^= MasterInstance.GetHashCode();
      if (HasNeedsReregister) hash ^= NeedsReregister.GetHashCode();
      if (HasNeedsFullTabletReport) hash ^= NeedsFullTabletReport.GetHashCode();
      if (tabletReport_ != null) hash ^= TabletReport.GetHashCode();
      if (HasLeaderMaster) hash ^= LeaderMaster.GetHashCode();
      if (HasSignedCertDer) hash ^= SignedCertDer.GetHashCode();
      hash ^= caCertDer_.GetHashCode();
      hash ^= tsks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (masterInstance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MasterInstance);
      }
      if (HasNeedsReregister) {
        output.WriteRawTag(24);
        output.WriteBool(NeedsReregister);
      }
      if (HasNeedsFullTabletReport) {
        output.WriteRawTag(32);
        output.WriteBool(NeedsFullTabletReport);
      }
      if (tabletReport_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TabletReport);
      }
      if (HasLeaderMaster) {
        output.WriteRawTag(48);
        output.WriteBool(LeaderMaster);
      }
      if (HasSignedCertDer) {
        output.WriteRawTag(58);
        output.WriteBytes(SignedCertDer);
      }
      caCertDer_.WriteTo(ref output, _repeated_caCertDer_codec);
      tsks_.WriteTo(ref output, _repeated_tsks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (masterInstance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MasterInstance);
      }
      if (HasNeedsReregister) {
        size += 1 + 1;
      }
      if (HasNeedsFullTabletReport) {
        size += 1 + 1;
      }
      if (tabletReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TabletReport);
      }
      if (HasLeaderMaster) {
        size += 1 + 1;
      }
      if (HasSignedCertDer) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignedCertDer);
      }
      size += caCertDer_.CalculateSize(_repeated_caCertDer_codec);
      size += tsks_.CalculateSize(_repeated_tsks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TSHeartbeatResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.masterInstance_ != null) {
        if (masterInstance_ == null) {
          MasterInstance = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
        }
        MasterInstance.MergeFrom(other.MasterInstance);
      }
      if (other.HasNeedsReregister) {
        NeedsReregister = other.NeedsReregister;
      }
      if (other.HasNeedsFullTabletReport) {
        NeedsFullTabletReport = other.NeedsFullTabletReport;
      }
      if (other.tabletReport_ != null) {
        if (tabletReport_ == null) {
          TabletReport = new global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB();
        }
        TabletReport.MergeFrom(other.TabletReport);
      }
      if (other.HasLeaderMaster) {
        LeaderMaster = other.LeaderMaster;
      }
      if (other.HasSignedCertDer) {
        SignedCertDer = other.SignedCertDer;
      }
      caCertDer_.Add(other.caCertDer_);
      tsks_.Add(other.tsks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            if (masterInstance_ == null) {
              MasterInstance = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
            }
            input.ReadMessage(MasterInstance);
            break;
          }
          case 24: {
            NeedsReregister = input.ReadBool();
            break;
          }
          case 32: {
            NeedsFullTabletReport = input.ReadBool();
            break;
          }
          case 42: {
            if (tabletReport_ == null) {
              TabletReport = new global::Knet.Kudu.Client.Protobuf.Master.TabletReportUpdatesPB();
            }
            input.ReadMessage(TabletReport);
            break;
          }
          case 48: {
            LeaderMaster = input.ReadBool();
            break;
          }
          case 58: {
            SignedCertDer = input.ReadBytes();
            break;
          }
          case 66: {
            caCertDer_.AddEntriesFrom(ref input, _repeated_caCertDer_codec);
            break;
          }
          case 74: {
            tsks_.AddEntriesFrom(ref input, _repeated_tsks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TabletLocationsPB : pb::IMessage<TabletLocationsPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletLocationsPB> _parser = new pb::MessageParser<TabletLocationsPB>(() => new TabletLocationsPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletLocationsPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletLocationsPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletLocationsPB(TabletLocationsPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      startKey_ = other.startKey_;
      endKey_ = other.endKey_;
      partition_ = other.partition_ != null ? other.partition_.Clone() : null;
      dEPRECATEDReplicas_ = other.dEPRECATEDReplicas_.Clone();
      internedReplicas_ = other.internedReplicas_.Clone();
      dEPRECATEDStale_ = other.dEPRECATEDStale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletLocationsPB Clone() {
      return new TabletLocationsPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "start_key" field.</summary>
    public const int StartKeyFieldNumber = 2;
    private readonly static pb::ByteString StartKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString startKey_;
    /// <summary>
    /// DEPRECATED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StartKey {
      get { return startKey_ ?? StartKeyDefaultValue; }
      set {
        startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartKey {
      get { return startKey_ != null; }
    }
    /// <summary>Clears the value of the "start_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartKey() {
      startKey_ = null;
    }

    /// <summary>Field number for the "end_key" field.</summary>
    public const int EndKeyFieldNumber = 3;
    private readonly static pb::ByteString EndKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString endKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EndKey {
      get { return endKey_ ?? EndKeyDefaultValue; }
      set {
        endKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndKey {
      get { return endKey_ != null; }
    }
    /// <summary>Clears the value of the "end_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndKey() {
      endKey_ = null;
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.PartitionPB partition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionPB Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "DEPRECATED_replicas" field.</summary>
    public const int DEPRECATEDReplicasFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB> _repeated_dEPRECATEDReplicas_codec
        = pb::FieldCodec.ForMessage(34, global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB> dEPRECATEDReplicas_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB>();
    /// <summary>
    /// DEPRECATED.
    /// Used only if interned replicas are not supported by client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.DEPRECATED_ReplicaPB> DEPRECATEDReplicas {
      get { return dEPRECATEDReplicas_; }
    }

    /// <summary>Field number for the "interned_replicas" field.</summary>
    public const int InternedReplicasFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB> _repeated_internedReplicas_codec
        = pb::FieldCodec.ForMessage(58, global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB> internedReplicas_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB>();
    /// <summary>
    /// More efficient representation of replicas: instead of duplicating the TSInfoPB
    /// in each tablet location, instead we just encode indexes into a list of TSInfoPB
    /// which is serialized in the top-level response.
    ///
    /// Used when supported by client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Types.InternedReplicaPB> InternedReplicas {
      get { return internedReplicas_; }
    }

    /// <summary>Field number for the "DEPRECATED_stale" field.</summary>
    public const int DEPRECATEDStaleFieldNumber = 5;
    private readonly static bool DEPRECATEDStaleDefaultValue = false;

    private bool dEPRECATEDStale_;
    /// <summary>
    /// DEPRECATED. Still set by servers, but should be ignored by clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DEPRECATEDStale {
      get { if ((_hasBits0 & 1) != 0) { return dEPRECATEDStale_; } else { return DEPRECATEDStaleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dEPRECATEDStale_ = value;
      }
    }
    /// <summary>Gets whether the "DEPRECATED_stale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDEPRECATEDStale {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "DEPRECATED_stale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDEPRECATEDStale() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletLocationsPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletLocationsPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (StartKey != other.StartKey) return false;
      if (EndKey != other.EndKey) return false;
      if (!object.Equals(Partition, other.Partition)) return false;
      if(!dEPRECATEDReplicas_.Equals(other.dEPRECATEDReplicas_)) return false;
      if(!internedReplicas_.Equals(other.internedReplicas_)) return false;
      if (DEPRECATEDStale != other.DEPRECATEDStale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasStartKey) hash ^= StartKey.GetHashCode();
      if (HasEndKey) hash ^= EndKey.GetHashCode();
      if (partition_ != null) hash ^= Partition.GetHashCode();
      hash ^= dEPRECATEDReplicas_.GetHashCode();
      hash ^= internedReplicas_.GetHashCode();
      if (HasDEPRECATEDStale) hash ^= DEPRECATEDStale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (HasStartKey) {
        output.WriteRawTag(18);
        output.WriteBytes(StartKey);
      }
      if (HasEndKey) {
        output.WriteRawTag(26);
        output.WriteBytes(EndKey);
      }
      dEPRECATEDReplicas_.WriteTo(ref output, _repeated_dEPRECATEDReplicas_codec);
      if (HasDEPRECATEDStale) {
        output.WriteRawTag(40);
        output.WriteBool(DEPRECATEDStale);
      }
      if (partition_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Partition);
      }
      internedReplicas_.WriteTo(ref output, _repeated_internedReplicas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (HasStartKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartKey);
      }
      if (HasEndKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndKey);
      }
      if (partition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partition);
      }
      size += dEPRECATEDReplicas_.CalculateSize(_repeated_dEPRECATEDReplicas_codec);
      size += internedReplicas_.CalculateSize(_repeated_internedReplicas_codec);
      if (HasDEPRECATEDStale) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletLocationsPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasStartKey) {
        StartKey = other.StartKey;
      }
      if (other.HasEndKey) {
        EndKey = other.EndKey;
      }
      if (other.partition_ != null) {
        if (partition_ == null) {
          Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
        }
        Partition.MergeFrom(other.Partition);
      }
      dEPRECATEDReplicas_.Add(other.dEPRECATEDReplicas_);
      internedReplicas_.Add(other.internedReplicas_);
      if (other.HasDEPRECATEDStale) {
        DEPRECATEDStale = other.DEPRECATEDStale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 18: {
            StartKey = input.ReadBytes();
            break;
          }
          case 26: {
            EndKey = input.ReadBytes();
            break;
          }
          case 34: {
            dEPRECATEDReplicas_.AddEntriesFrom(ref input, _repeated_dEPRECATEDReplicas_codec);
            break;
          }
          case 40: {
            DEPRECATEDStale = input.ReadBool();
            break;
          }
          case 50: {
            if (partition_ == null) {
              Partition = new global::Knet.Kudu.Client.Protobuf.PartitionPB();
            }
            input.ReadMessage(Partition);
            break;
          }
          case 58: {
            internedReplicas_.AddEntriesFrom(ref input, _repeated_internedReplicas_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TabletLocationsPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// DEPRECATED.
      /// TODO: new clients should prefer the 'Interned' type below.
      /// Remove 'ReplicaPB' when we stop using it internally.
      /// </summary>
      public sealed partial class DEPRECATED_ReplicaPB : pb::IMessage<DEPRECATED_ReplicaPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<DEPRECATED_ReplicaPB> _parser = new pb::MessageParser<DEPRECATED_ReplicaPB>(() => new DEPRECATED_ReplicaPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DEPRECATED_ReplicaPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DEPRECATED_ReplicaPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DEPRECATED_ReplicaPB(DEPRECATED_ReplicaPB other) : this() {
          _hasBits0 = other._hasBits0;
          tsInfo_ = other.tsInfo_ != null ? other.tsInfo_.Clone() : null;
          role_ = other.role_;
          dimensionLabel_ = other.dimensionLabel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DEPRECATED_ReplicaPB Clone() {
          return new DEPRECATED_ReplicaPB(this);
        }

        /// <summary>Field number for the "ts_info" field.</summary>
        public const int TsInfoFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB tsInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB TsInfo {
          get { return tsInfo_; }
          set {
            tsInfo_ = value;
          }
        }

        /// <summary>Field number for the "role" field.</summary>
        public const int RoleFieldNumber = 2;
        private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

        private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
          get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
          set {
            _hasBits0 |= 1;
            role_ = value;
          }
        }
        /// <summary>Gets whether the "role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRole {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRole() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "dimension_label" field.</summary>
        public const int DimensionLabelFieldNumber = 3;
        private readonly static string DimensionLabelDefaultValue = "";

        private string dimensionLabel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DimensionLabel {
          get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
          set {
            dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "dimension_label" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDimensionLabel {
          get { return dimensionLabel_ != null; }
        }
        /// <summary>Clears the value of the "dimension_label" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDimensionLabel() {
          dimensionLabel_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DEPRECATED_ReplicaPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DEPRECATED_ReplicaPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TsInfo, other.TsInfo)) return false;
          if (Role != other.Role) return false;
          if (DimensionLabel != other.DimensionLabel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (tsInfo_ != null) hash ^= TsInfo.GetHashCode();
          if (HasRole) hash ^= Role.GetHashCode();
          if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (tsInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TsInfo);
          }
          if (HasRole) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Role);
          }
          if (HasDimensionLabel) {
            output.WriteRawTag(26);
            output.WriteString(DimensionLabel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (tsInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TsInfo);
          }
          if (HasRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
          }
          if (HasDimensionLabel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DEPRECATED_ReplicaPB other) {
          if (other == null) {
            return;
          }
          if (other.tsInfo_ != null) {
            if (tsInfo_ == null) {
              TsInfo = new global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB();
            }
            TsInfo.MergeFrom(other.TsInfo);
          }
          if (other.HasRole) {
            Role = other.Role;
          }
          if (other.HasDimensionLabel) {
            DimensionLabel = other.DimensionLabel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (tsInfo_ == null) {
                  TsInfo = new global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB();
                }
                input.ReadMessage(TsInfo);
                break;
              }
              case 16: {
                Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
                break;
              }
              case 26: {
                DimensionLabel = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class InternedReplicaPB : pb::IMessage<InternedReplicaPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<InternedReplicaPB> _parser = new pb::MessageParser<InternedReplicaPB>(() => new InternedReplicaPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InternedReplicaPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InternedReplicaPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InternedReplicaPB(InternedReplicaPB other) : this() {
          _hasBits0 = other._hasBits0;
          tsInfoIdx_ = other.tsInfoIdx_;
          role_ = other.role_;
          dimensionLabel_ = other.dimensionLabel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InternedReplicaPB Clone() {
          return new InternedReplicaPB(this);
        }

        /// <summary>Field number for the "ts_info_idx" field.</summary>
        public const int TsInfoIdxFieldNumber = 1;
        private readonly static uint TsInfoIdxDefaultValue = 0;

        private uint tsInfoIdx_;
        /// <summary>
        /// Index into the 'ts_infos' list in the top-level RPC response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TsInfoIdx {
          get { if ((_hasBits0 & 1) != 0) { return tsInfoIdx_; } else { return TsInfoIdxDefaultValue; } }
          set {
            _hasBits0 |= 1;
            tsInfoIdx_ = value;
          }
        }
        /// <summary>Gets whether the "ts_info_idx" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTsInfoIdx {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "ts_info_idx" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTsInfoIdx() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "role" field.</summary>
        public const int RoleFieldNumber = 2;
        private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

        private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
          get { if ((_hasBits0 & 2) != 0) { return role_; } else { return RoleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            role_ = value;
          }
        }
        /// <summary>Gets whether the "role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRole {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRole() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "dimension_label" field.</summary>
        public const int DimensionLabelFieldNumber = 3;
        private readonly static string DimensionLabelDefaultValue = "";

        private string dimensionLabel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DimensionLabel {
          get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
          set {
            dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "dimension_label" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDimensionLabel {
          get { return dimensionLabel_ != null; }
        }
        /// <summary>Clears the value of the "dimension_label" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDimensionLabel() {
          dimensionLabel_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InternedReplicaPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InternedReplicaPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TsInfoIdx != other.TsInfoIdx) return false;
          if (Role != other.Role) return false;
          if (DimensionLabel != other.DimensionLabel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTsInfoIdx) hash ^= TsInfoIdx.GetHashCode();
          if (HasRole) hash ^= Role.GetHashCode();
          if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasTsInfoIdx) {
            output.WriteRawTag(8);
            output.WriteUInt32(TsInfoIdx);
          }
          if (HasRole) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Role);
          }
          if (HasDimensionLabel) {
            output.WriteRawTag(26);
            output.WriteString(DimensionLabel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasTsInfoIdx) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TsInfoIdx);
          }
          if (HasRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
          }
          if (HasDimensionLabel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InternedReplicaPB other) {
          if (other == null) {
            return;
          }
          if (other.HasTsInfoIdx) {
            TsInfoIdx = other.TsInfoIdx;
          }
          if (other.HasRole) {
            Role = other.Role;
          }
          if (other.HasDimensionLabel) {
            DimensionLabel = other.DimensionLabel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TsInfoIdx = input.ReadUInt32();
                break;
              }
              case 16: {
                Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
                break;
              }
              case 26: {
                DimensionLabel = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Info about a single tablet server, returned to the client as part
  /// of the GetTabletLocations response. This can be used on the client
  /// to update the local cache of where each TS UUID is located. In
  /// the future we may also want to transmit software version info,
  /// load info, topology, etc.
  /// </summary>
  public sealed partial class TSInfoPB : pb::IMessage<TSInfoPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TSInfoPB> _parser = new pb::MessageParser<TSInfoPB>(() => new TSInfoPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TSInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSInfoPB(TSInfoPB other) : this() {
      permanentUuid_ = other.permanentUuid_;
      rpcAddresses_ = other.rpcAddresses_.Clone();
      location_ = other.location_;
      unixDomainSocketPath_ = other.unixDomainSocketPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TSInfoPB Clone() {
      return new TSInfoPB(this);
    }

    /// <summary>Field number for the "permanent_uuid" field.</summary>
    public const int PermanentUuidFieldNumber = 1;
    private readonly static pb::ByteString PermanentUuidDefaultValue = pb::ByteString.Empty;

    private pb::ByteString permanentUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PermanentUuid {
      get { return permanentUuid_ ?? PermanentUuidDefaultValue; }
      set {
        permanentUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "permanent_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermanentUuid {
      get { return permanentUuid_ != null; }
    }
    /// <summary>Clears the value of the "permanent_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermanentUuid() {
      permanentUuid_ = null;
    }

    /// <summary>Field number for the "rpc_addresses" field.</summary>
    public const int RpcAddressesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.HostPortPB> _repeated_rpcAddresses_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.HostPortPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> rpcAddresses_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> RpcAddresses {
      get { return rpcAddresses_; }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private readonly static string LocationDefaultValue = "";

    private string location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_ ?? LocationDefaultValue; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocation {
      get { return location_ != null; }
    }
    /// <summary>Clears the value of the "location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocation() {
      location_ = null;
    }

    /// <summary>Field number for the "unix_domain_socket_path" field.</summary>
    public const int UnixDomainSocketPathFieldNumber = 4;
    private readonly static string UnixDomainSocketPathDefaultValue = "";

    private string unixDomainSocketPath_;
    /// <summary>
    /// The path of a UNIX domain socket where the server is listening.
    /// An '@' prefix indicates the abstract namespace. May be missing
    /// if this feature is not enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnixDomainSocketPath {
      get { return unixDomainSocketPath_ ?? UnixDomainSocketPathDefaultValue; }
      set {
        unixDomainSocketPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unix_domain_socket_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnixDomainSocketPath {
      get { return unixDomainSocketPath_ != null; }
    }
    /// <summary>Clears the value of the "unix_domain_socket_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnixDomainSocketPath() {
      unixDomainSocketPath_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TSInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TSInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PermanentUuid != other.PermanentUuid) return false;
      if(!rpcAddresses_.Equals(other.rpcAddresses_)) return false;
      if (Location != other.Location) return false;
      if (UnixDomainSocketPath != other.UnixDomainSocketPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPermanentUuid) hash ^= PermanentUuid.GetHashCode();
      hash ^= rpcAddresses_.GetHashCode();
      if (HasLocation) hash ^= Location.GetHashCode();
      if (HasUnixDomainSocketPath) hash ^= UnixDomainSocketPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPermanentUuid) {
        output.WriteRawTag(10);
        output.WriteBytes(PermanentUuid);
      }
      rpcAddresses_.WriteTo(ref output, _repeated_rpcAddresses_codec);
      if (HasLocation) {
        output.WriteRawTag(26);
        output.WriteString(Location);
      }
      if (HasUnixDomainSocketPath) {
        output.WriteRawTag(34);
        output.WriteString(UnixDomainSocketPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPermanentUuid) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PermanentUuid);
      }
      size += rpcAddresses_.CalculateSize(_repeated_rpcAddresses_codec);
      if (HasLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (HasUnixDomainSocketPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnixDomainSocketPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TSInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.HasPermanentUuid) {
        PermanentUuid = other.PermanentUuid;
      }
      rpcAddresses_.Add(other.rpcAddresses_);
      if (other.HasLocation) {
        Location = other.Location;
      }
      if (other.HasUnixDomainSocketPath) {
        UnixDomainSocketPath = other.UnixDomainSocketPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PermanentUuid = input.ReadBytes();
            break;
          }
          case 18: {
            rpcAddresses_.AddEntriesFrom(ref input, _repeated_rpcAddresses_codec);
            break;
          }
          case 26: {
            Location = input.ReadString();
            break;
          }
          case 34: {
            UnixDomainSocketPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTabletLocationsRequestPB : pb::IMessage<GetTabletLocationsRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTabletLocationsRequestPB> _parser = new pb::MessageParser<GetTabletLocationsRequestPB>(() => new GetTabletLocationsRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTabletLocationsRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsRequestPB(GetTabletLocationsRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletIds_ = other.tabletIds_.Clone();
      replicaTypeFilter_ = other.replicaTypeFilter_;
      internTsInfosInResponse_ = other.internTsInfosInResponse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsRequestPB Clone() {
      return new GetTabletLocationsRequestPB(this);
    }

    /// <summary>Field number for the "tablet_ids" field.</summary>
    public const int TabletIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_tabletIds_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> tabletIds_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// The tablet IDs about which to fetch info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> TabletIds {
      get { return tabletIds_; }
    }

    /// <summary>Field number for the "replica_type_filter" field.</summary>
    public const int ReplicaTypeFilterFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter ReplicaTypeFilterDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter.VoterReplica;

    private global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter replicaTypeFilter_;
    /// <summary>
    /// What type of tablet replicas to include in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter ReplicaTypeFilter {
      get { if ((_hasBits0 & 1) != 0) { return replicaTypeFilter_; } else { return ReplicaTypeFilterDefaultValue; } }
      set {
        _hasBits0 |= 1;
        replicaTypeFilter_ = value;
      }
    }
    /// <summary>Gets whether the "replica_type_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplicaTypeFilter {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "replica_type_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplicaTypeFilter() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "intern_ts_infos_in_response" field.</summary>
    public const int InternTsInfosInResponseFieldNumber = 3;
    private readonly static bool InternTsInfosInResponseDefaultValue = false;

    private bool internTsInfosInResponse_;
    /// <summary>
    /// Whether the response should use the 'interned_replicas' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InternTsInfosInResponse {
      get { if ((_hasBits0 & 2) != 0) { return internTsInfosInResponse_; } else { return InternTsInfosInResponseDefaultValue; } }
      set {
        _hasBits0 |= 2;
        internTsInfosInResponse_ = value;
      }
    }
    /// <summary>Gets whether the "intern_ts_infos_in_response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInternTsInfosInResponse {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "intern_ts_infos_in_response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInternTsInfosInResponse() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTabletLocationsRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTabletLocationsRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tabletIds_.Equals(other.tabletIds_)) return false;
      if (ReplicaTypeFilter != other.ReplicaTypeFilter) return false;
      if (InternTsInfosInResponse != other.InternTsInfosInResponse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tabletIds_.GetHashCode();
      if (HasReplicaTypeFilter) hash ^= ReplicaTypeFilter.GetHashCode();
      if (HasInternTsInfosInResponse) hash ^= InternTsInfosInResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tabletIds_.WriteTo(ref output, _repeated_tabletIds_codec);
      if (HasReplicaTypeFilter) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReplicaTypeFilter);
      }
      if (HasInternTsInfosInResponse) {
        output.WriteRawTag(24);
        output.WriteBool(InternTsInfosInResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tabletIds_.CalculateSize(_repeated_tabletIds_codec);
      if (HasReplicaTypeFilter) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplicaTypeFilter);
      }
      if (HasInternTsInfosInResponse) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTabletLocationsRequestPB other) {
      if (other == null) {
        return;
      }
      tabletIds_.Add(other.tabletIds_);
      if (other.HasReplicaTypeFilter) {
        ReplicaTypeFilter = other.ReplicaTypeFilter;
      }
      if (other.HasInternTsInfosInResponse) {
        InternTsInfosInResponse = other.InternTsInfosInResponse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tabletIds_.AddEntriesFrom(ref input, _repeated_tabletIds_codec);
            break;
          }
          case 16: {
            ReplicaTypeFilter = (global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter) input.ReadEnum();
            break;
          }
          case 24: {
            InternTsInfosInResponse = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTabletLocationsResponsePB : pb::IMessage<GetTabletLocationsResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTabletLocationsResponsePB> _parser = new pb::MessageParser<GetTabletLocationsResponsePB>(() => new GetTabletLocationsResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTabletLocationsResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsResponsePB(GetTabletLocationsResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      tabletLocations_ = other.tabletLocations_.Clone();
      tsInfos_ = other.tsInfos_.Clone();
      errors_ = other.errors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTabletLocationsResponsePB Clone() {
      return new GetTabletLocationsResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "tablet_locations" field.</summary>
    public const int TabletLocationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> _repeated_tabletLocations_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> tabletLocations_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> TabletLocations {
      get { return tabletLocations_; }
    }

    /// <summary>Field number for the "ts_infos" field.</summary>
    public const int TsInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> _repeated_tsInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> tsInfos_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB>();
    /// <summary>
    /// Used if 'intern_ts_infos_in_response' was requested.
    /// See InternedReplicaPB above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> TsInfos {
      get { return tsInfos_; }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error> errors_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Types.Error> Errors {
      get { return errors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTabletLocationsResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTabletLocationsResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!tabletLocations_.Equals(other.tabletLocations_)) return false;
      if(!tsInfos_.Equals(other.tsInfos_)) return false;
      if(!errors_.Equals(other.errors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= tabletLocations_.GetHashCode();
      hash ^= tsInfos_.GetHashCode();
      hash ^= errors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      tabletLocations_.WriteTo(ref output, _repeated_tabletLocations_codec);
      errors_.WriteTo(ref output, _repeated_errors_codec);
      tsInfos_.WriteTo(ref output, _repeated_tsInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += tabletLocations_.CalculateSize(_repeated_tabletLocations_codec);
      size += tsInfos_.CalculateSize(_repeated_tsInfos_codec);
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTabletLocationsResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      tabletLocations_.Add(other.tabletLocations_);
      tsInfos_.Add(other.tsInfos_);
      errors_.Add(other.errors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            tabletLocations_.AddEntriesFrom(ref input, _repeated_tabletLocations_codec);
            break;
          }
          case 26: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
          case 34: {
            tsInfos_.AddEntriesFrom(ref input, _repeated_tsInfos_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetTabletLocationsResponsePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Error : pb::IMessage<Error>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.GetTabletLocationsResponsePB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error(Error other) : this() {
          tabletId_ = other.tabletId_;
          status_ = other.status_ != null ? other.status_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "tablet_id" field.</summary>
        public const int TabletIdFieldNumber = 1;
        private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

        private pb::ByteString tabletId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString TabletId {
          get { return tabletId_ ?? TabletIdDefaultValue; }
          set {
            tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "tablet_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTabletId {
          get { return tabletId_ != null; }
        }
        /// <summary>Clears the value of the "tablet_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTabletId() {
          tabletId_ = null;
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Knet.Kudu.Client.Protobuf.AppStatusPB status_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.AppStatusPB Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TabletId != other.TabletId) return false;
          if (!object.Equals(Status, other.Status)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTabletId) hash ^= TabletId.GetHashCode();
          if (status_ != null) hash ^= Status.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasTabletId) {
            output.WriteRawTag(10);
            output.WriteBytes(TabletId);
          }
          if (status_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasTabletId) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
          }
          if (status_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.HasTabletId) {
            TabletId = other.TabletId;
          }
          if (other.status_ != null) {
            if (status_ == null) {
              Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            Status.MergeFrom(other.Status);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TabletId = input.ReadBytes();
                break;
              }
              case 18: {
                if (status_ == null) {
                  Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateTableRequestPB : pb::IMessage<CreateTableRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<CreateTableRequestPB> _parser = new pb::MessageParser<CreateTableRequestPB>(() => new CreateTableRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTableRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableRequestPB(CreateTableRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      splitRowsRangeBounds_ = other.splitRowsRangeBounds_ != null ? other.splitRowsRangeBounds_.Clone() : null;
      partitionSchema_ = other.partitionSchema_ != null ? other.partitionSchema_.Clone() : null;
      numReplicas_ = other.numReplicas_;
      owner_ = other.owner_;
      extraConfigs_ = other.extraConfigs_.Clone();
      dimensionLabel_ = other.dimensionLabel_;
      tableType_ = other.tableType_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableRequestPB Clone() {
      return new CreateTableRequestPB(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
    /// <summary>
    /// repeated bytes pre_split_keys = 3;
    /// repeated PartialRowPB split_rows = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "split_rows_range_bounds" field.</summary>
    public const int SplitRowsRangeBoundsFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.RowOperationsPB splitRowsRangeBounds_;
    /// <summary>
    /// Holds either the split rows or the range bounds (or both) of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.RowOperationsPB SplitRowsRangeBounds {
      get { return splitRowsRangeBounds_; }
      set {
        splitRowsRangeBounds_ = value;
      }
    }

    /// <summary>Field number for the "partition_schema" field.</summary>
    public const int PartitionSchemaFieldNumber = 7;
    private global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB partitionSchema_;
    /// <summary>
    /// Holds the table's partition schema, table-wide hash bucket schema, and,
    /// optionally, custom hash bucket schemas for each range. The latter is
    /// populated only when the 'split_rows_range_bounds' field above specifies
    /// range bounds, and must not be present if any split rows are specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB PartitionSchema {
      get { return partitionSchema_; }
      set {
        partitionSchema_ = value;
      }
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 4;
    private readonly static int NumReplicasDefaultValue = 0;

    private int numReplicas_;
    /// <summary>
    /// Number of replicas for a partition/tablet, a.k.a. table's replication
    /// factor. All tablets of the same table has same replication factor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { if ((_hasBits0 & 1) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numReplicas_ = value;
      }
    }
    /// <summary>Gets whether the "num_replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumReplicas {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumReplicas() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// If set, uses the provided value as the table owner when creating the table.
    /// Otherwise, the owner is defaulted to the user that created the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "extra_configs" field.</summary>
    public const int ExtraConfigsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_extraConfigs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> extraConfigs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The table's extra configuration properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> ExtraConfigs {
      get { return extraConfigs_; }
    }

    /// <summary>Field number for the "dimension_label" field.</summary>
    public const int DimensionLabelFieldNumber = 10;
    private readonly static string DimensionLabelDefaultValue = "";

    private string dimensionLabel_;
    /// <summary>
    /// The dimension label for tablets that were created during table creation. Used for
    /// dimension-specific placement of tablet replicas corresponding to the partitions of
    /// the newly created table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DimensionLabel {
      get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
      set {
        dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dimension_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDimensionLabel {
      get { return dimensionLabel_ != null; }
    }
    /// <summary>Clears the value of the "dimension_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDimensionLabel() {
      dimensionLabel_ = null;
    }

    /// <summary>Field number for the "table_type" field.</summary>
    public const int TableTypeFieldNumber = 11;
    private readonly static global::Knet.Kudu.Client.Protobuf.TableTypePB TableTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.TableTypePB.DefaultTable;

    private global::Knet.Kudu.Client.Protobuf.TableTypePB tableType_;
    /// <summary>
    /// The table type. If not set, it is assumed this table is a user-defined
    /// table, rather than a system table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.TableTypePB TableType {
      get { if ((_hasBits0 & 2) != 0) { return tableType_; } else { return TableTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tableType_ = value;
      }
    }
    /// <summary>Gets whether the "table_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "table_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 13;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    /// <summary>
    /// The comment on the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTableRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTableRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(SplitRowsRangeBounds, other.SplitRowsRangeBounds)) return false;
      if (!object.Equals(PartitionSchema, other.PartitionSchema)) return false;
      if (NumReplicas != other.NumReplicas) return false;
      if (Owner != other.Owner) return false;
      if (!ExtraConfigs.Equals(other.ExtraConfigs)) return false;
      if (DimensionLabel != other.DimensionLabel) return false;
      if (TableType != other.TableType) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (splitRowsRangeBounds_ != null) hash ^= SplitRowsRangeBounds.GetHashCode();
      if (partitionSchema_ != null) hash ^= PartitionSchema.GetHashCode();
      if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      hash ^= ExtraConfigs.GetHashCode();
      if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
      if (HasTableType) hash ^= TableType.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (schema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (HasNumReplicas) {
        output.WriteRawTag(32);
        output.WriteInt32(NumReplicas);
      }
      if (splitRowsRangeBounds_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SplitRowsRangeBounds);
      }
      if (partitionSchema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PartitionSchema);
      }
      if (HasOwner) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      extraConfigs_.WriteTo(ref output, _map_extraConfigs_codec);
      if (HasDimensionLabel) {
        output.WriteRawTag(82);
        output.WriteString(DimensionLabel);
      }
      if (HasTableType) {
        output.WriteRawTag(88);
        output.WriteEnum((int) TableType);
      }
      if (HasComment) {
        output.WriteRawTag(106);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (splitRowsRangeBounds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SplitRowsRangeBounds);
      }
      if (partitionSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionSchema);
      }
      if (HasNumReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      size += extraConfigs_.CalculateSize(_map_extraConfigs_codec);
      if (HasDimensionLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
      }
      if (HasTableType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableType);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTableRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.splitRowsRangeBounds_ != null) {
        if (splitRowsRangeBounds_ == null) {
          SplitRowsRangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
        }
        SplitRowsRangeBounds.MergeFrom(other.SplitRowsRangeBounds);
      }
      if (other.partitionSchema_ != null) {
        if (partitionSchema_ == null) {
          PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
        }
        PartitionSchema.MergeFrom(other.PartitionSchema);
      }
      if (other.HasNumReplicas) {
        NumReplicas = other.NumReplicas;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      extraConfigs_.Add(other.extraConfigs_);
      if (other.HasDimensionLabel) {
        DimensionLabel = other.DimensionLabel;
      }
      if (other.HasTableType) {
        TableType = other.TableType;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 32: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 50: {
            if (splitRowsRangeBounds_ == null) {
              SplitRowsRangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
            }
            input.ReadMessage(SplitRowsRangeBounds);
            break;
          }
          case 58: {
            if (partitionSchema_ == null) {
              PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
            }
            input.ReadMessage(PartitionSchema);
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
          case 74: {
            extraConfigs_.AddEntriesFrom(ref input, _map_extraConfigs_codec);
            break;
          }
          case 82: {
            DimensionLabel = input.ReadString();
            break;
          }
          case 88: {
            TableType = (global::Knet.Kudu.Client.Protobuf.TableTypePB) input.ReadEnum();
            break;
          }
          case 106: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTableResponsePB : pb::IMessage<CreateTableResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<CreateTableResponsePB> _parser = new pb::MessageParser<CreateTableResponsePB>(() => new CreateTableResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTableResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableResponsePB(CreateTableResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      tableId_ = other.tableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTableResponsePB Clone() {
      return new CreateTableResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private readonly static pb::ByteString TableIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTableResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTableResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (TableId != other.TableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasTableId) {
        output.WriteRawTag(18);
        output.WriteBytes(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTableResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            TableId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsCreateTableDoneRequestPB : pb::IMessage<IsCreateTableDoneRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<IsCreateTableDoneRequestPB> _parser = new pb::MessageParser<IsCreateTableDoneRequestPB>(() => new IsCreateTableDoneRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IsCreateTableDoneRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneRequestPB(IsCreateTableDoneRequestPB other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneRequestPB Clone() {
      return new IsCreateTableDoneRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IsCreateTableDoneRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IsCreateTableDoneRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IsCreateTableDoneRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsCreateTableDoneResponsePB : pb::IMessage<IsCreateTableDoneResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<IsCreateTableDoneResponsePB> _parser = new pb::MessageParser<IsCreateTableDoneResponsePB>(() => new IsCreateTableDoneResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IsCreateTableDoneResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneResponsePB(IsCreateTableDoneResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      done_ = other.done_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsCreateTableDoneResponsePB Clone() {
      return new IsCreateTableDoneResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 3;
    private readonly static bool DoneDefaultValue = false;

    private bool done_;
    /// <summary>
    /// true if the create operation is completed, false otherwise
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { if ((_hasBits0 & 1) != 0) { return done_; } else { return DoneDefaultValue; } }
      set {
        _hasBits0 |= 1;
        done_ = value;
      }
    }
    /// <summary>Gets whether the "done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDone {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDone() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IsCreateTableDoneResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IsCreateTableDoneResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Done != other.Done) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasDone) hash ^= Done.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasDone) {
        output.WriteRawTag(24);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasDone) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IsCreateTableDoneResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasDone) {
        Done = other.Done;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 24: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTableRequestPB : pb::IMessage<DeleteTableRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DeleteTableRequestPB> _parser = new pb::MessageParser<DeleteTableRequestPB>(() => new DeleteTableRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteTableRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableRequestPB(DeleteTableRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      modifyExternalCatalogs_ = other.modifyExternalCatalogs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableRequestPB Clone() {
      return new DeleteTableRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "modify_external_catalogs" field.</summary>
    public const int ModifyExternalCatalogsFieldNumber = 2;
    private readonly static bool ModifyExternalCatalogsDefaultValue = true;

    private bool modifyExternalCatalogs_;
    /// <summary>
    /// Whether to apply the deletion to external catalogs, such as the Hive Metastore,
    /// which the Kudu master has been configured to integrate with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ModifyExternalCatalogs {
      get { if ((_hasBits0 & 1) != 0) { return modifyExternalCatalogs_; } else { return ModifyExternalCatalogsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        modifyExternalCatalogs_ = value;
      }
    }
    /// <summary>Gets whether the "modify_external_catalogs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifyExternalCatalogs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "modify_external_catalogs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifyExternalCatalogs() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteTableRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if (ModifyExternalCatalogs != other.ModifyExternalCatalogs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (HasModifyExternalCatalogs) hash ^= ModifyExternalCatalogs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (HasModifyExternalCatalogs) {
        output.WriteRawTag(16);
        output.WriteBool(ModifyExternalCatalogs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (HasModifyExternalCatalogs) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteTableRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.HasModifyExternalCatalogs) {
        ModifyExternalCatalogs = other.ModifyExternalCatalogs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
          case 16: {
            ModifyExternalCatalogs = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTableResponsePB : pb::IMessage<DeleteTableResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<DeleteTableResponsePB> _parser = new pb::MessageParser<DeleteTableResponsePB>(() => new DeleteTableResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteTableResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableResponsePB(DeleteTableResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTableResponsePB Clone() {
      return new DeleteTableResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteTableResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteTableResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListTablesRequestPB : pb::IMessage<ListTablesRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTablesRequestPB> _parser = new pb::MessageParser<ListTablesRequestPB>(() => new ListTablesRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTablesRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesRequestPB(ListTablesRequestPB other) : this() {
      nameFilter_ = other.nameFilter_;
      typeFilter_ = other.typeFilter_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesRequestPB Clone() {
      return new ListTablesRequestPB(this);
    }

    /// <summary>Field number for the "name_filter" field.</summary>
    public const int NameFilterFieldNumber = 1;
    private readonly static string NameFilterDefaultValue = "";

    private string nameFilter_;
    /// <summary>
    /// When used, only returns tables that satisfy a substring match on name_filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameFilter {
      get { return nameFilter_ ?? NameFilterDefaultValue; }
      set {
        nameFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNameFilter {
      get { return nameFilter_ != null; }
    }
    /// <summary>Clears the value of the "name_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNameFilter() {
      nameFilter_ = null;
    }

    /// <summary>Field number for the "type_filter" field.</summary>
    public const int TypeFilterFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.TableTypePB> _repeated_typeFilter_codec
        = pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::Knet.Kudu.Client.Protobuf.TableTypePB) x);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.TableTypePB> typeFilter_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.TableTypePB>();
    /// <summary>
    /// The filter for the table types to return. If not set or empty, it is
    /// interpreted as if it were set to [TableTypePB::DEFAULT_TABLE], meaning
    /// to include only user-defined tables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.TableTypePB> TypeFilter {
      get { return typeFilter_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTablesRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTablesRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NameFilter != other.NameFilter) return false;
      if(!typeFilter_.Equals(other.typeFilter_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNameFilter) hash ^= NameFilter.GetHashCode();
      hash ^= typeFilter_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNameFilter) {
        output.WriteRawTag(10);
        output.WriteString(NameFilter);
      }
      typeFilter_.WriteTo(ref output, _repeated_typeFilter_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNameFilter) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameFilter);
      }
      size += typeFilter_.CalculateSize(_repeated_typeFilter_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTablesRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasNameFilter) {
        NameFilter = other.NameFilter;
      }
      typeFilter_.Add(other.typeFilter_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NameFilter = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            typeFilter_.AddEntriesFrom(ref input, _repeated_typeFilter_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListTablesResponsePB : pb::IMessage<ListTablesResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTablesResponsePB> _parser = new pb::MessageParser<ListTablesResponsePB>(() => new ListTablesResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTablesResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesResponsePB(ListTablesResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTablesResponsePB Clone() {
      return new ListTablesResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo> tables_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Types.TableInfo> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTablesResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTablesResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      tables_.WriteTo(ref output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTablesResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            tables_.AddEntriesFrom(ref input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListTablesResponsePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class TableInfo : pb::IMessage<TableInfo>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<TableInfo> _parser = new pb::MessageParser<TableInfo>(() => new TableInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TableInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.ListTablesResponsePB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TableInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TableInfo(TableInfo other) : this() {
          _hasBits0 = other._hasBits0;
          id_ = other.id_;
          name_ = other.name_;
          liveRowCount_ = other.liveRowCount_;
          numTablets_ = other.numTablets_;
          numReplicas_ = other.numReplicas_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TableInfo Clone() {
          return new TableInfo(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

        private pb::ByteString id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Id {
          get { return id_ ?? IdDefaultValue; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasId {
          get { return id_ != null; }
        }
        /// <summary>Clears the value of the "id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearId() {
          id_ = null;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "live_row_count" field.</summary>
        public const int LiveRowCountFieldNumber = 3;
        private readonly static ulong LiveRowCountDefaultValue = 0UL;

        private ulong liveRowCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LiveRowCount {
          get { if ((_hasBits0 & 1) != 0) { return liveRowCount_; } else { return LiveRowCountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            liveRowCount_ = value;
          }
        }
        /// <summary>Gets whether the "live_row_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLiveRowCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "live_row_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLiveRowCount() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "num_tablets" field.</summary>
        public const int NumTabletsFieldNumber = 4;
        private readonly static int NumTabletsDefaultValue = 0;

        private int numTablets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumTablets {
          get { if ((_hasBits0 & 2) != 0) { return numTablets_; } else { return NumTabletsDefaultValue; } }
          set {
            _hasBits0 |= 2;
            numTablets_ = value;
          }
        }
        /// <summary>Gets whether the "num_tablets" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNumTablets {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "num_tablets" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNumTablets() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "num_replicas" field.</summary>
        public const int NumReplicasFieldNumber = 5;
        private readonly static int NumReplicasDefaultValue = 0;

        private int numReplicas_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumReplicas {
          get { if ((_hasBits0 & 4) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
          set {
            _hasBits0 |= 4;
            numReplicas_ = value;
          }
        }
        /// <summary>Gets whether the "num_replicas" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNumReplicas {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "num_replicas" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNumReplicas() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TableInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TableInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (LiveRowCount != other.LiveRowCount) return false;
          if (NumTablets != other.NumTablets) return false;
          if (NumReplicas != other.NumReplicas) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasId) hash ^= Id.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasLiveRowCount) hash ^= LiveRowCount.GetHashCode();
          if (HasNumTablets) hash ^= NumTablets.GetHashCode();
          if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasId) {
            output.WriteRawTag(10);
            output.WriteBytes(Id);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasLiveRowCount) {
            output.WriteRawTag(24);
            output.WriteUInt64(LiveRowCount);
          }
          if (HasNumTablets) {
            output.WriteRawTag(32);
            output.WriteInt32(NumTablets);
          }
          if (HasNumReplicas) {
            output.WriteRawTag(40);
            output.WriteInt32(NumReplicas);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasId) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasLiveRowCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LiveRowCount);
          }
          if (HasNumTablets) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTablets);
          }
          if (HasNumReplicas) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TableInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasId) {
            Id = other.Id;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasLiveRowCount) {
            LiveRowCount = other.LiveRowCount;
          }
          if (other.HasNumTablets) {
            NumTablets = other.NumTablets;
          }
          if (other.HasNumReplicas) {
            NumReplicas = other.NumReplicas;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadBytes();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                LiveRowCount = input.ReadUInt64();
                break;
              }
              case 32: {
                NumTablets = input.ReadInt32();
                break;
              }
              case 40: {
                NumReplicas = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetTableStatisticsRequestPB : pb::IMessage<GetTableStatisticsRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableStatisticsRequestPB> _parser = new pb::MessageParser<GetTableStatisticsRequestPB>(() => new GetTableStatisticsRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableStatisticsRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsRequestPB(GetTableStatisticsRequestPB other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsRequestPB Clone() {
      return new GetTableStatisticsRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableStatisticsRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableStatisticsRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableStatisticsRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTableStatisticsResponsePB : pb::IMessage<GetTableStatisticsResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableStatisticsResponsePB> _parser = new pb::MessageParser<GetTableStatisticsResponsePB>(() => new GetTableStatisticsResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableStatisticsResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsResponsePB(GetTableStatisticsResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      onDiskSize_ = other.onDiskSize_;
      liveRowCount_ = other.liveRowCount_;
      diskSizeLimit_ = other.diskSizeLimit_;
      rowCountLimit_ = other.rowCountLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableStatisticsResponsePB Clone() {
      return new GetTableStatisticsResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "on_disk_size" field.</summary>
    public const int OnDiskSizeFieldNumber = 2;
    private readonly static long OnDiskSizeDefaultValue = 0L;

    private long onDiskSize_;
    /// <summary>
    /// The table statistics from table metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OnDiskSize {
      get { if ((_hasBits0 & 1) != 0) { return onDiskSize_; } else { return OnDiskSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        onDiskSize_ = value;
      }
    }
    /// <summary>Gets whether the "on_disk_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnDiskSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "on_disk_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnDiskSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "live_row_count" field.</summary>
    public const int LiveRowCountFieldNumber = 3;
    private readonly static long LiveRowCountDefaultValue = 0L;

    private long liveRowCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LiveRowCount {
      get { if ((_hasBits0 & 2) != 0) { return liveRowCount_; } else { return LiveRowCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        liveRowCount_ = value;
      }
    }
    /// <summary>Gets whether the "live_row_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLiveRowCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "live_row_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLiveRowCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "disk_size_limit" field.</summary>
    public const int DiskSizeLimitFieldNumber = 4;
    private readonly static long DiskSizeLimitDefaultValue = 0L;

    private long diskSizeLimit_;
    /// <summary>
    /// The table limit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DiskSizeLimit {
      get { if ((_hasBits0 & 4) != 0) { return diskSizeLimit_; } else { return DiskSizeLimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        diskSizeLimit_ = value;
      }
    }
    /// <summary>Gets whether the "disk_size_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiskSizeLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "disk_size_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiskSizeLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "row_count_limit" field.</summary>
    public const int RowCountLimitFieldNumber = 5;
    private readonly static long RowCountLimitDefaultValue = 0L;

    private long rowCountLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RowCountLimit {
      get { if ((_hasBits0 & 8) != 0) { return rowCountLimit_; } else { return RowCountLimitDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rowCountLimit_ = value;
      }
    }
    /// <summary>Gets whether the "row_count_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRowCountLimit {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "row_count_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRowCountLimit() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableStatisticsResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableStatisticsResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (OnDiskSize != other.OnDiskSize) return false;
      if (LiveRowCount != other.LiveRowCount) return false;
      if (DiskSizeLimit != other.DiskSizeLimit) return false;
      if (RowCountLimit != other.RowCountLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasOnDiskSize) hash ^= OnDiskSize.GetHashCode();
      if (HasLiveRowCount) hash ^= LiveRowCount.GetHashCode();
      if (HasDiskSizeLimit) hash ^= DiskSizeLimit.GetHashCode();
      if (HasRowCountLimit) hash ^= RowCountLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasOnDiskSize) {
        output.WriteRawTag(16);
        output.WriteInt64(OnDiskSize);
      }
      if (HasLiveRowCount) {
        output.WriteRawTag(24);
        output.WriteInt64(LiveRowCount);
      }
      if (HasDiskSizeLimit) {
        output.WriteRawTag(32);
        output.WriteInt64(DiskSizeLimit);
      }
      if (HasRowCountLimit) {
        output.WriteRawTag(40);
        output.WriteInt64(RowCountLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasOnDiskSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnDiskSize);
      }
      if (HasLiveRowCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LiveRowCount);
      }
      if (HasDiskSizeLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeLimit);
      }
      if (HasRowCountLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCountLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableStatisticsResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasOnDiskSize) {
        OnDiskSize = other.OnDiskSize;
      }
      if (other.HasLiveRowCount) {
        LiveRowCount = other.LiveRowCount;
      }
      if (other.HasDiskSizeLimit) {
        DiskSizeLimit = other.DiskSizeLimit;
      }
      if (other.HasRowCountLimit) {
        RowCountLimit = other.RowCountLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 16: {
            OnDiskSize = input.ReadInt64();
            break;
          }
          case 24: {
            LiveRowCount = input.ReadInt64();
            break;
          }
          case 32: {
            DiskSizeLimit = input.ReadInt64();
            break;
          }
          case 40: {
            RowCountLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// This data structure is used to specify a table's partition key.
  /// That's used to find partitions (i.e. tablets) that cover the key range span
  /// between two partition keys.
  /// </summary>
  public sealed partial class PartitionKeyPB : pb::IMessage<PartitionKeyPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PartitionKeyPB> _parser = new pb::MessageParser<PartitionKeyPB>(() => new PartitionKeyPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PartitionKeyPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionKeyPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionKeyPB(PartitionKeyPB other) : this() {
      rangeKey_ = other.rangeKey_;
      hashKey_ = other.hashKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartitionKeyPB Clone() {
      return new PartitionKeyPB(this);
    }

    /// <summary>Field number for the "range_key" field.</summary>
    public const int RangeKeyFieldNumber = 1;
    private readonly static pb::ByteString RangeKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString rangeKey_;
    /// <summary>
    /// The range part of the encoded key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RangeKey {
      get { return rangeKey_ ?? RangeKeyDefaultValue; }
      set {
        rangeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "range_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRangeKey {
      get { return rangeKey_ != null; }
    }
    /// <summary>Clears the value of the "range_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRangeKey() {
      rangeKey_ = null;
    }

    /// <summary>Field number for the "hash_key" field.</summary>
    public const int HashKeyFieldNumber = 2;
    private readonly static pb::ByteString HashKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString hashKey_;
    /// <summary>
    /// The hash part of the encoded key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString HashKey {
      get { return hashKey_ ?? HashKeyDefaultValue; }
      set {
        hashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hash_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHashKey {
      get { return hashKey_ != null; }
    }
    /// <summary>Clears the value of the "hash_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHashKey() {
      hashKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PartitionKeyPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PartitionKeyPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RangeKey != other.RangeKey) return false;
      if (HashKey != other.HashKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRangeKey) hash ^= RangeKey.GetHashCode();
      if (HasHashKey) hash ^= HashKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRangeKey) {
        output.WriteRawTag(10);
        output.WriteBytes(RangeKey);
      }
      if (HasHashKey) {
        output.WriteRawTag(18);
        output.WriteBytes(HashKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRangeKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RangeKey);
      }
      if (HasHashKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HashKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PartitionKeyPB other) {
      if (other == null) {
        return;
      }
      if (other.HasRangeKey) {
        RangeKey = other.RangeKey;
      }
      if (other.HasHashKey) {
        HashKey = other.HashKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RangeKey = input.ReadBytes();
            break;
          }
          case 18: {
            HashKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTableLocationsRequestPB : pb::IMessage<GetTableLocationsRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableLocationsRequestPB> _parser = new pb::MessageParser<GetTableLocationsRequestPB>(() => new GetTableLocationsRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableLocationsRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsRequestPB(GetTableLocationsRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      partitionKeyStart_ = other.partitionKeyStart_;
      partitionKeyEnd_ = other.partitionKeyEnd_;
      maxReturnedLocations_ = other.maxReturnedLocations_;
      replicaTypeFilter_ = other.replicaTypeFilter_;
      internTsInfosInResponse_ = other.internTsInfosInResponse_;
      keyStart_ = other.keyStart_ != null ? other.keyStart_.Clone() : null;
      keyEnd_ = other.keyEnd_ != null ? other.keyEnd_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsRequestPB Clone() {
      return new GetTableLocationsRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "partition_key_start" field.</summary>
    public const int PartitionKeyStartFieldNumber = 3;
    private readonly static pb::ByteString PartitionKeyStartDefaultValue = pb::ByteString.Empty;

    private pb::ByteString partitionKeyStart_;
    /// <summary>
    /// These two fields are used to specify key range span if the table
    /// has a table-wide hash schema. Otherwise, neither of these two fields
    /// should not be present: use 'key_start' and 'key_end' fields below
    /// to specify key range information instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PartitionKeyStart {
      get { return partitionKeyStart_ ?? PartitionKeyStartDefaultValue; }
      set {
        partitionKeyStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "partition_key_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartitionKeyStart {
      get { return partitionKeyStart_ != null; }
    }
    /// <summary>Clears the value of the "partition_key_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartitionKeyStart() {
      partitionKeyStart_ = null;
    }

    /// <summary>Field number for the "partition_key_end" field.</summary>
    public const int PartitionKeyEndFieldNumber = 4;
    private readonly static pb::ByteString PartitionKeyEndDefaultValue = pb::ByteString.Empty;

    private pb::ByteString partitionKeyEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PartitionKeyEnd {
      get { return partitionKeyEnd_ ?? PartitionKeyEndDefaultValue; }
      set {
        partitionKeyEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "partition_key_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartitionKeyEnd {
      get { return partitionKeyEnd_ != null; }
    }
    /// <summary>Clears the value of the "partition_key_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartitionKeyEnd() {
      partitionKeyEnd_ = null;
    }

    /// <summary>Field number for the "max_returned_locations" field.</summary>
    public const int MaxReturnedLocationsFieldNumber = 5;
    private readonly static uint MaxReturnedLocationsDefaultValue = 10;

    private uint maxReturnedLocations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxReturnedLocations {
      get { if ((_hasBits0 & 1) != 0) { return maxReturnedLocations_; } else { return MaxReturnedLocationsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxReturnedLocations_ = value;
      }
    }
    /// <summary>Gets whether the "max_returned_locations" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxReturnedLocations {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_returned_locations" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxReturnedLocations() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "replica_type_filter" field.</summary>
    public const int ReplicaTypeFilterFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter ReplicaTypeFilterDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter.VoterReplica;

    private global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter replicaTypeFilter_;
    /// <summary>
    /// What type of tablet replicas to include in the
    /// 'GetTableLocationsResponsePB::tablet_locations' response field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter ReplicaTypeFilter {
      get { if ((_hasBits0 & 2) != 0) { return replicaTypeFilter_; } else { return ReplicaTypeFilterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        replicaTypeFilter_ = value;
      }
    }
    /// <summary>Gets whether the "replica_type_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplicaTypeFilter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "replica_type_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplicaTypeFilter() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "intern_ts_infos_in_response" field.</summary>
    public const int InternTsInfosInResponseFieldNumber = 7;
    private readonly static bool InternTsInfosInResponseDefaultValue = false;

    private bool internTsInfosInResponse_;
    /// <summary>
    /// Whether the response should use the 'interned_replicas' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InternTsInfosInResponse {
      get { if ((_hasBits0 & 4) != 0) { return internTsInfosInResponse_; } else { return InternTsInfosInResponseDefaultValue; } }
      set {
        _hasBits0 |= 4;
        internTsInfosInResponse_ = value;
      }
    }
    /// <summary>Gets whether the "intern_ts_infos_in_response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInternTsInfosInResponse {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "intern_ts_infos_in_response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInternTsInfosInResponse() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "key_start" field.</summary>
    public const int KeyStartFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB keyStart_;
    /// <summary>
    /// Partition key range, start and end: these fields make the
    /// 'partition_key_start' and 'partition_key_end' fields above obsolete.
    /// It's crucial to specify these (or at least one of these if the range is
    /// unbounded) when the table has custom hash schemas per range, otherwise
    /// the catalog manager responds back with an error. Even in case of
    /// table-wide hash schema the clients compiled with this proto specification
    /// are encouraged to use these fields instead of legacy 'partition_key_start'
    /// and 'partition_key_end'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB KeyStart {
      get { return keyStart_; }
      set {
        keyStart_ = value;
      }
    }

    /// <summary>Field number for the "key_end" field.</summary>
    public const int KeyEndFieldNumber = 9;
    private global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB keyEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB KeyEnd {
      get { return keyEnd_; }
      set {
        keyEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableLocationsRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableLocationsRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if (PartitionKeyStart != other.PartitionKeyStart) return false;
      if (PartitionKeyEnd != other.PartitionKeyEnd) return false;
      if (MaxReturnedLocations != other.MaxReturnedLocations) return false;
      if (ReplicaTypeFilter != other.ReplicaTypeFilter) return false;
      if (InternTsInfosInResponse != other.InternTsInfosInResponse) return false;
      if (!object.Equals(KeyStart, other.KeyStart)) return false;
      if (!object.Equals(KeyEnd, other.KeyEnd)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (HasPartitionKeyStart) hash ^= PartitionKeyStart.GetHashCode();
      if (HasPartitionKeyEnd) hash ^= PartitionKeyEnd.GetHashCode();
      if (HasMaxReturnedLocations) hash ^= MaxReturnedLocations.GetHashCode();
      if (HasReplicaTypeFilter) hash ^= ReplicaTypeFilter.GetHashCode();
      if (HasInternTsInfosInResponse) hash ^= InternTsInfosInResponse.GetHashCode();
      if (keyStart_ != null) hash ^= KeyStart.GetHashCode();
      if (keyEnd_ != null) hash ^= KeyEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (HasPartitionKeyStart) {
        output.WriteRawTag(26);
        output.WriteBytes(PartitionKeyStart);
      }
      if (HasPartitionKeyEnd) {
        output.WriteRawTag(34);
        output.WriteBytes(PartitionKeyEnd);
      }
      if (HasMaxReturnedLocations) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxReturnedLocations);
      }
      if (HasReplicaTypeFilter) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ReplicaTypeFilter);
      }
      if (HasInternTsInfosInResponse) {
        output.WriteRawTag(56);
        output.WriteBool(InternTsInfosInResponse);
      }
      if (keyStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(KeyStart);
      }
      if (keyEnd_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(KeyEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (HasPartitionKeyStart) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartitionKeyStart);
      }
      if (HasPartitionKeyEnd) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartitionKeyEnd);
      }
      if (HasMaxReturnedLocations) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxReturnedLocations);
      }
      if (HasReplicaTypeFilter) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplicaTypeFilter);
      }
      if (HasInternTsInfosInResponse) {
        size += 1 + 1;
      }
      if (keyStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyStart);
      }
      if (keyEnd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableLocationsRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.HasPartitionKeyStart) {
        PartitionKeyStart = other.PartitionKeyStart;
      }
      if (other.HasPartitionKeyEnd) {
        PartitionKeyEnd = other.PartitionKeyEnd;
      }
      if (other.HasMaxReturnedLocations) {
        MaxReturnedLocations = other.MaxReturnedLocations;
      }
      if (other.HasReplicaTypeFilter) {
        ReplicaTypeFilter = other.ReplicaTypeFilter;
      }
      if (other.HasInternTsInfosInResponse) {
        InternTsInfosInResponse = other.InternTsInfosInResponse;
      }
      if (other.keyStart_ != null) {
        if (keyStart_ == null) {
          KeyStart = new global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB();
        }
        KeyStart.MergeFrom(other.KeyStart);
      }
      if (other.keyEnd_ != null) {
        if (keyEnd_ == null) {
          KeyEnd = new global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB();
        }
        KeyEnd.MergeFrom(other.KeyEnd);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
          case 26: {
            PartitionKeyStart = input.ReadBytes();
            break;
          }
          case 34: {
            PartitionKeyEnd = input.ReadBytes();
            break;
          }
          case 40: {
            MaxReturnedLocations = input.ReadUInt32();
            break;
          }
          case 48: {
            ReplicaTypeFilter = (global::Knet.Kudu.Client.Protobuf.Master.ReplicaTypeFilter) input.ReadEnum();
            break;
          }
          case 56: {
            InternTsInfosInResponse = input.ReadBool();
            break;
          }
          case 66: {
            if (keyStart_ == null) {
              KeyStart = new global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB();
            }
            input.ReadMessage(KeyStart);
            break;
          }
          case 74: {
            if (keyEnd_ == null) {
              KeyEnd = new global::Knet.Kudu.Client.Protobuf.Master.PartitionKeyPB();
            }
            input.ReadMessage(KeyEnd);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response to a GetTableLocations RPC. The master guarantees that:
  ///
  /// * The response contains a location for all tablets in the requested range,
  ///   limited by the request's 'max_returned_locations'.
  /// * The tablet locations are returned in sorted order by the partition key range.
  /// * If *any* tablet in the response is not running, then the entire response
  ///   will fail with MasterErrorPB::TABLET_NOT_RUNNING, and the tablet_locations
  ///   field will be empty.
  /// * A gap between the partition key ranges of consecutive tablets indicates a
  ///   non-covered partition range.
  /// * If the request's start partition key falls in a non-covered partition
  ///   range, the response will contain the tablet immediately before the
  ///   non-covered range, if it exists.
  /// </summary>
  public sealed partial class GetTableLocationsResponsePB : pb::IMessage<GetTableLocationsResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableLocationsResponsePB> _parser = new pb::MessageParser<GetTableLocationsResponsePB>(() => new GetTableLocationsResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableLocationsResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsResponsePB(GetTableLocationsResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      tabletLocations_ = other.tabletLocations_.Clone();
      tsInfos_ = other.tsInfos_.Clone();
      ttlMillis_ = other.ttlMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableLocationsResponsePB Clone() {
      return new GetTableLocationsResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "tablet_locations" field.</summary>
    public const int TabletLocationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> _repeated_tabletLocations_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> tabletLocations_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TabletLocationsPB> TabletLocations {
      get { return tabletLocations_; }
    }

    /// <summary>Field number for the "ts_infos" field.</summary>
    public const int TsInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> _repeated_tsInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> tsInfos_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB>();
    /// <summary>
    /// Used if 'intern_ts_infos_in_response' was requested.
    /// See InternedReplicaPB above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.TSInfoPB> TsInfos {
      get { return tsInfos_; }
    }

    /// <summary>Field number for the "ttl_millis" field.</summary>
    public const int TtlMillisFieldNumber = 3;
    private readonly static uint TtlMillisDefaultValue = 36000000;

    private uint ttlMillis_;
    /// <summary>
    /// If the client caches table locations, the entries should not live longer
    /// than this timeout. Defaults to one hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TtlMillis {
      get { if ((_hasBits0 & 1) != 0) { return ttlMillis_; } else { return TtlMillisDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ttlMillis_ = value;
      }
    }
    /// <summary>Gets whether the "ttl_millis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTtlMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ttl_millis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTtlMillis() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableLocationsResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableLocationsResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!tabletLocations_.Equals(other.tabletLocations_)) return false;
      if(!tsInfos_.Equals(other.tsInfos_)) return false;
      if (TtlMillis != other.TtlMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= tabletLocations_.GetHashCode();
      hash ^= tsInfos_.GetHashCode();
      if (HasTtlMillis) hash ^= TtlMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      tabletLocations_.WriteTo(ref output, _repeated_tabletLocations_codec);
      if (HasTtlMillis) {
        output.WriteRawTag(24);
        output.WriteUInt32(TtlMillis);
      }
      tsInfos_.WriteTo(ref output, _repeated_tsInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += tabletLocations_.CalculateSize(_repeated_tabletLocations_codec);
      size += tsInfos_.CalculateSize(_repeated_tsInfos_codec);
      if (HasTtlMillis) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TtlMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableLocationsResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      tabletLocations_.Add(other.tabletLocations_);
      tsInfos_.Add(other.tsInfos_);
      if (other.HasTtlMillis) {
        TtlMillis = other.TtlMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            tabletLocations_.AddEntriesFrom(ref input, _repeated_tabletLocations_codec);
            break;
          }
          case 24: {
            TtlMillis = input.ReadUInt32();
            break;
          }
          case 34: {
            tsInfos_.AddEntriesFrom(ref input, _repeated_tsInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AlterTableRequestPB : pb::IMessage<AlterTableRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<AlterTableRequestPB> _parser = new pb::MessageParser<AlterTableRequestPB>(() => new AlterTableRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AlterTableRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableRequestPB(AlterTableRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      alterSchemaSteps_ = other.alterSchemaSteps_.Clone();
      newTableName_ = other.newTableName_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      modifyExternalCatalogs_ = other.modifyExternalCatalogs_;
      newExtraConfigs_ = other.newExtraConfigs_.Clone();
      newTableOwner_ = other.newTableOwner_;
      diskSizeLimit_ = other.diskSizeLimit_;
      rowCountLimit_ = other.rowCountLimit_;
      newTableComment_ = other.newTableComment_;
      numReplicas_ = other.numReplicas_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableRequestPB Clone() {
      return new AlterTableRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "alter_schema_steps" field.</summary>
    public const int AlterSchemaStepsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step> _repeated_alterSchemaSteps_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step> alterSchemaSteps_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.Step> AlterSchemaSteps {
      get { return alterSchemaSteps_; }
    }

    /// <summary>Field number for the "new_table_name" field.</summary>
    public const int NewTableNameFieldNumber = 3;
    private readonly static string NewTableNameDefaultValue = "";

    private string newTableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewTableName {
      get { return newTableName_ ?? NewTableNameDefaultValue; }
      set {
        newTableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "new_table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewTableName {
      get { return newTableName_ != null; }
    }
    /// <summary>Clears the value of the "new_table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewTableName() {
      newTableName_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
    /// <summary>
    /// The table schema to use when decoding the range bound row operations. Only
    /// necessary when partitions are being added or dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "modify_external_catalogs" field.</summary>
    public const int ModifyExternalCatalogsFieldNumber = 5;
    private readonly static bool ModifyExternalCatalogsDefaultValue = true;

    private bool modifyExternalCatalogs_;
    /// <summary>
    /// Whether to apply the alteration to external catalogs, such as the Hive Metastore,
    /// which the Kudu master has been configured to integrate with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ModifyExternalCatalogs {
      get { if ((_hasBits0 & 1) != 0) { return modifyExternalCatalogs_; } else { return ModifyExternalCatalogsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        modifyExternalCatalogs_ = value;
      }
    }
    /// <summary>Gets whether the "modify_external_catalogs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifyExternalCatalogs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "modify_external_catalogs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifyExternalCatalogs() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "new_extra_configs" field.</summary>
    public const int NewExtraConfigsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_newExtraConfigs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> newExtraConfigs_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> NewExtraConfigs {
      get { return newExtraConfigs_; }
    }

    /// <summary>Field number for the "new_table_owner" field.</summary>
    public const int NewTableOwnerFieldNumber = 7;
    private readonly static string NewTableOwnerDefaultValue = "";

    private string newTableOwner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewTableOwner {
      get { return newTableOwner_ ?? NewTableOwnerDefaultValue; }
      set {
        newTableOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "new_table_owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewTableOwner {
      get { return newTableOwner_ != null; }
    }
    /// <summary>Clears the value of the "new_table_owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewTableOwner() {
      newTableOwner_ = null;
    }

    /// <summary>Field number for the "disk_size_limit" field.</summary>
    public const int DiskSizeLimitFieldNumber = 8;
    private readonly static long DiskSizeLimitDefaultValue = 0L;

    private long diskSizeLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DiskSizeLimit {
      get { if ((_hasBits0 & 2) != 0) { return diskSizeLimit_; } else { return DiskSizeLimitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        diskSizeLimit_ = value;
      }
    }
    /// <summary>Gets whether the "disk_size_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiskSizeLimit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "disk_size_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiskSizeLimit() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "row_count_limit" field.</summary>
    public const int RowCountLimitFieldNumber = 9;
    private readonly static long RowCountLimitDefaultValue = 0L;

    private long rowCountLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RowCountLimit {
      get { if ((_hasBits0 & 4) != 0) { return rowCountLimit_; } else { return RowCountLimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rowCountLimit_ = value;
      }
    }
    /// <summary>Gets whether the "row_count_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRowCountLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "row_count_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRowCountLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "new_table_comment" field.</summary>
    public const int NewTableCommentFieldNumber = 10;
    private readonly static string NewTableCommentDefaultValue = "";

    private string newTableComment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewTableComment {
      get { return newTableComment_ ?? NewTableCommentDefaultValue; }
      set {
        newTableComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "new_table_comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewTableComment {
      get { return newTableComment_ != null; }
    }
    /// <summary>Clears the value of the "new_table_comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewTableComment() {
      newTableComment_ = null;
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 11;
    private readonly static int NumReplicasDefaultValue = 0;

    private int numReplicas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { if ((_hasBits0 & 8) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
      set {
        _hasBits0 |= 8;
        numReplicas_ = value;
      }
    }
    /// <summary>Gets whether the "num_replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumReplicas {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "num_replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumReplicas() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AlterTableRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AlterTableRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if(!alterSchemaSteps_.Equals(other.alterSchemaSteps_)) return false;
      if (NewTableName != other.NewTableName) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (ModifyExternalCatalogs != other.ModifyExternalCatalogs) return false;
      if (!NewExtraConfigs.Equals(other.NewExtraConfigs)) return false;
      if (NewTableOwner != other.NewTableOwner) return false;
      if (DiskSizeLimit != other.DiskSizeLimit) return false;
      if (RowCountLimit != other.RowCountLimit) return false;
      if (NewTableComment != other.NewTableComment) return false;
      if (NumReplicas != other.NumReplicas) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= alterSchemaSteps_.GetHashCode();
      if (HasNewTableName) hash ^= NewTableName.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (HasModifyExternalCatalogs) hash ^= ModifyExternalCatalogs.GetHashCode();
      hash ^= NewExtraConfigs.GetHashCode();
      if (HasNewTableOwner) hash ^= NewTableOwner.GetHashCode();
      if (HasDiskSizeLimit) hash ^= DiskSizeLimit.GetHashCode();
      if (HasRowCountLimit) hash ^= RowCountLimit.GetHashCode();
      if (HasNewTableComment) hash ^= NewTableComment.GetHashCode();
      if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      alterSchemaSteps_.WriteTo(ref output, _repeated_alterSchemaSteps_codec);
      if (HasNewTableName) {
        output.WriteRawTag(26);
        output.WriteString(NewTableName);
      }
      if (schema_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (HasModifyExternalCatalogs) {
        output.WriteRawTag(40);
        output.WriteBool(ModifyExternalCatalogs);
      }
      newExtraConfigs_.WriteTo(ref output, _map_newExtraConfigs_codec);
      if (HasNewTableOwner) {
        output.WriteRawTag(58);
        output.WriteString(NewTableOwner);
      }
      if (HasDiskSizeLimit) {
        output.WriteRawTag(64);
        output.WriteInt64(DiskSizeLimit);
      }
      if (HasRowCountLimit) {
        output.WriteRawTag(72);
        output.WriteInt64(RowCountLimit);
      }
      if (HasNewTableComment) {
        output.WriteRawTag(82);
        output.WriteString(NewTableComment);
      }
      if (HasNumReplicas) {
        output.WriteRawTag(88);
        output.WriteInt32(NumReplicas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += alterSchemaSteps_.CalculateSize(_repeated_alterSchemaSteps_codec);
      if (HasNewTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewTableName);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (HasModifyExternalCatalogs) {
        size += 1 + 1;
      }
      size += newExtraConfigs_.CalculateSize(_map_newExtraConfigs_codec);
      if (HasNewTableOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewTableOwner);
      }
      if (HasDiskSizeLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeLimit);
      }
      if (HasRowCountLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCountLimit);
      }
      if (HasNewTableComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewTableComment);
      }
      if (HasNumReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AlterTableRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      alterSchemaSteps_.Add(other.alterSchemaSteps_);
      if (other.HasNewTableName) {
        NewTableName = other.NewTableName;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.HasModifyExternalCatalogs) {
        ModifyExternalCatalogs = other.ModifyExternalCatalogs;
      }
      newExtraConfigs_.Add(other.newExtraConfigs_);
      if (other.HasNewTableOwner) {
        NewTableOwner = other.NewTableOwner;
      }
      if (other.HasDiskSizeLimit) {
        DiskSizeLimit = other.DiskSizeLimit;
      }
      if (other.HasRowCountLimit) {
        RowCountLimit = other.RowCountLimit;
      }
      if (other.HasNewTableComment) {
        NewTableComment = other.NewTableComment;
      }
      if (other.HasNumReplicas) {
        NumReplicas = other.NumReplicas;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
          case 18: {
            alterSchemaSteps_.AddEntriesFrom(ref input, _repeated_alterSchemaSteps_codec);
            break;
          }
          case 26: {
            NewTableName = input.ReadString();
            break;
          }
          case 34: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 40: {
            ModifyExternalCatalogs = input.ReadBool();
            break;
          }
          case 50: {
            newExtraConfigs_.AddEntriesFrom(ref input, _map_newExtraConfigs_codec);
            break;
          }
          case 58: {
            NewTableOwner = input.ReadString();
            break;
          }
          case 64: {
            DiskSizeLimit = input.ReadInt64();
            break;
          }
          case 72: {
            RowCountLimit = input.ReadInt64();
            break;
          }
          case 82: {
            NewTableComment = input.ReadString();
            break;
          }
          case 88: {
            NumReplicas = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AlterTableRequestPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum StepType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("ADD_COLUMN")] AddColumn = 1,
        [pbr::OriginalName("DROP_COLUMN")] DropColumn = 2,
        [pbr::OriginalName("RENAME_COLUMN")] RenameColumn = 3,
        [pbr::OriginalName("ALTER_COLUMN")] AlterColumn = 4,
        [pbr::OriginalName("ADD_RANGE_PARTITION")] AddRangePartition = 5,
        [pbr::OriginalName("DROP_RANGE_PARTITION")] DropRangePartition = 6,
      }

      public sealed partial class AddColumn : pb::IMessage<AddColumn>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<AddColumn> _parser = new pb::MessageParser<AddColumn>(() => new AddColumn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AddColumn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddColumn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddColumn(AddColumn other) : this() {
          schema_ = other.schema_ != null ? other.schema_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddColumn Clone() {
          return new AddColumn(this);
        }

        /// <summary>Field number for the "schema" field.</summary>
        public const int SchemaFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB schema_;
        /// <summary>
        /// The schema to add.
        /// NOTE: the 'id' field of the schema should not be provided here --
        /// the server will assign an ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB Schema {
          get { return schema_; }
          set {
            schema_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AddColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AddColumn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Schema, other.Schema)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (schema_ != null) hash ^= Schema.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (schema_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Schema);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (schema_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AddColumn other) {
          if (other == null) {
            return;
          }
          if (other.schema_ != null) {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB();
            }
            Schema.MergeFrom(other.Schema);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (schema_ == null) {
                  Schema = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB();
                }
                input.ReadMessage(Schema);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DropColumn : pb::IMessage<DropColumn>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<DropColumn> _parser = new pb::MessageParser<DropColumn>(() => new DropColumn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DropColumn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropColumn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropColumn(DropColumn other) : this() {
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropColumn Clone() {
          return new DropColumn(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// Name of the column to drop.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DropColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DropColumn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DropColumn other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// This should eventually be deprecated in favor of AlterColumn.
      /// </summary>
      public sealed partial class RenameColumn : pb::IMessage<RenameColumn>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<RenameColumn> _parser = new pb::MessageParser<RenameColumn>(() => new RenameColumn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RenameColumn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RenameColumn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RenameColumn(RenameColumn other) : this() {
          oldName_ = other.oldName_;
          newName_ = other.newName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RenameColumn Clone() {
          return new RenameColumn(this);
        }

        /// <summary>Field number for the "old_name" field.</summary>
        public const int OldNameFieldNumber = 1;
        private readonly static string OldNameDefaultValue = "";

        private string oldName_;
        /// <summary>
        /// Name of the column to rename;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OldName {
          get { return oldName_ ?? OldNameDefaultValue; }
          set {
            oldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "old_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOldName {
          get { return oldName_ != null; }
        }
        /// <summary>Clears the value of the "old_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOldName() {
          oldName_ = null;
        }

        /// <summary>Field number for the "new_name" field.</summary>
        public const int NewNameFieldNumber = 2;
        private readonly static string NewNameDefaultValue = "";

        private string newName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NewName {
          get { return newName_ ?? NewNameDefaultValue; }
          set {
            newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "new_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNewName {
          get { return newName_ != null; }
        }
        /// <summary>Clears the value of the "new_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNewName() {
          newName_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RenameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RenameColumn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OldName != other.OldName) return false;
          if (NewName != other.NewName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasOldName) hash ^= OldName.GetHashCode();
          if (HasNewName) hash ^= NewName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasOldName) {
            output.WriteRawTag(10);
            output.WriteString(OldName);
          }
          if (HasNewName) {
            output.WriteRawTag(18);
            output.WriteString(NewName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasOldName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OldName);
          }
          if (HasNewName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RenameColumn other) {
          if (other == null) {
            return;
          }
          if (other.HasOldName) {
            OldName = other.OldName;
          }
          if (other.HasNewName) {
            NewName = other.NewName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                OldName = input.ReadString();
                break;
              }
              case 18: {
                NewName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AlterColumn : pb::IMessage<AlterColumn>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<AlterColumn> _parser = new pb::MessageParser<AlterColumn>(() => new AlterColumn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AlterColumn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlterColumn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlterColumn(AlterColumn other) : this() {
          delta_ = other.delta_ != null ? other.delta_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlterColumn Clone() {
          return new AlterColumn(this);
        }

        /// <summary>Field number for the "delta" field.</summary>
        public const int DeltaFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.ColumnSchemaDeltaPB delta_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.ColumnSchemaDeltaPB Delta {
          get { return delta_; }
          set {
            delta_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AlterColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AlterColumn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Delta, other.Delta)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (delta_ != null) hash ^= Delta.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (delta_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Delta);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (delta_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delta);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AlterColumn other) {
          if (other == null) {
            return;
          }
          if (other.delta_ != null) {
            if (delta_ == null) {
              Delta = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaDeltaPB();
            }
            Delta.MergeFrom(other.Delta);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (delta_ == null) {
                  Delta = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaDeltaPB();
                }
                input.ReadMessage(Delta);
                break;
              }
            }
          }
        }

      }

      public sealed partial class AddRangePartition : pb::IMessage<AddRangePartition>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<AddRangePartition> _parser = new pb::MessageParser<AddRangePartition>(() => new AddRangePartition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AddRangePartition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddRangePartition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddRangePartition(AddRangePartition other) : this() {
          rangeBounds_ = other.rangeBounds_ != null ? other.rangeBounds_.Clone() : null;
          dimensionLabel_ = other.dimensionLabel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddRangePartition Clone() {
          return new AddRangePartition(this);
        }

        /// <summary>Field number for the "range_bounds" field.</summary>
        public const int RangeBoundsFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.RowOperationsPB rangeBounds_;
        /// <summary>
        /// A set of row operations containing the lower and upper range bound for
        /// the range partition to add or drop.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.RowOperationsPB RangeBounds {
          get { return rangeBounds_; }
          set {
            rangeBounds_ = value;
          }
        }

        /// <summary>Field number for the "dimension_label" field.</summary>
        public const int DimensionLabelFieldNumber = 2;
        private readonly static string DimensionLabelDefaultValue = "";

        private string dimensionLabel_;
        /// <summary>
        /// The dimension label for the tablet. Used for dimension-specific placement
        /// of the tablet's replicas.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DimensionLabel {
          get { return dimensionLabel_ ?? DimensionLabelDefaultValue; }
          set {
            dimensionLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "dimension_label" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDimensionLabel {
          get { return dimensionLabel_ != null; }
        }
        /// <summary>Clears the value of the "dimension_label" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDimensionLabel() {
          dimensionLabel_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AddRangePartition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AddRangePartition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RangeBounds, other.RangeBounds)) return false;
          if (DimensionLabel != other.DimensionLabel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (rangeBounds_ != null) hash ^= RangeBounds.GetHashCode();
          if (HasDimensionLabel) hash ^= DimensionLabel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (rangeBounds_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RangeBounds);
          }
          if (HasDimensionLabel) {
            output.WriteRawTag(18);
            output.WriteString(DimensionLabel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (rangeBounds_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeBounds);
          }
          if (HasDimensionLabel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionLabel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AddRangePartition other) {
          if (other == null) {
            return;
          }
          if (other.rangeBounds_ != null) {
            if (rangeBounds_ == null) {
              RangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
            }
            RangeBounds.MergeFrom(other.RangeBounds);
          }
          if (other.HasDimensionLabel) {
            DimensionLabel = other.DimensionLabel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (rangeBounds_ == null) {
                  RangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
                }
                input.ReadMessage(RangeBounds);
                break;
              }
              case 18: {
                DimensionLabel = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class DropRangePartition : pb::IMessage<DropRangePartition>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<DropRangePartition> _parser = new pb::MessageParser<DropRangePartition>(() => new DropRangePartition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DropRangePartition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropRangePartition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropRangePartition(DropRangePartition other) : this() {
          rangeBounds_ = other.rangeBounds_ != null ? other.rangeBounds_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DropRangePartition Clone() {
          return new DropRangePartition(this);
        }

        /// <summary>Field number for the "range_bounds" field.</summary>
        public const int RangeBoundsFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.RowOperationsPB rangeBounds_;
        /// <summary>
        /// A set of row operations containing the lower and upper range bound for
        /// the range partition to add or drop.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.RowOperationsPB RangeBounds {
          get { return rangeBounds_; }
          set {
            rangeBounds_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DropRangePartition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DropRangePartition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RangeBounds, other.RangeBounds)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (rangeBounds_ != null) hash ^= RangeBounds.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (rangeBounds_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RangeBounds);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (rangeBounds_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeBounds);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DropRangePartition other) {
          if (other == null) {
            return;
          }
          if (other.rangeBounds_ != null) {
            if (rangeBounds_ == null) {
              RangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
            }
            RangeBounds.MergeFrom(other.RangeBounds);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (rangeBounds_ == null) {
                  RangeBounds = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
                }
                input.ReadMessage(RangeBounds);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Step : pb::IMessage<Step>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<Step> _parser = new pb::MessageParser<Step>(() => new Step());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Step> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Step() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Step(Step other) : this() {
          _hasBits0 = other._hasBits0;
          type_ = other.type_;
          addColumn_ = other.addColumn_ != null ? other.addColumn_.Clone() : null;
          dropColumn_ = other.dropColumn_ != null ? other.dropColumn_.Clone() : null;
          renameColumn_ = other.renameColumn_ != null ? other.renameColumn_.Clone() : null;
          addRangePartition_ = other.addRangePartition_ != null ? other.addRangePartition_.Clone() : null;
          dropRangePartition_ = other.dropRangePartition_ != null ? other.dropRangePartition_.Clone() : null;
          alterColumn_ = other.alterColumn_ != null ? other.alterColumn_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Step Clone() {
          return new Step(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private readonly static global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType TypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType.Unknown;

        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType Type {
          get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            type_ = value;
          }
        }
        /// <summary>Gets whether the "type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "add_column" field.</summary>
        public const int AddColumnFieldNumber = 2;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn addColumn_;
        /// <summary>
        /// Exactly one of the following must be set, based on 'type'
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn AddColumn {
          get { return addColumn_; }
          set {
            addColumn_ = value;
          }
        }

        /// <summary>Field number for the "drop_column" field.</summary>
        public const int DropColumnFieldNumber = 3;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn dropColumn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn DropColumn {
          get { return dropColumn_; }
          set {
            dropColumn_ = value;
          }
        }

        /// <summary>Field number for the "rename_column" field.</summary>
        public const int RenameColumnFieldNumber = 4;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn renameColumn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn RenameColumn {
          get { return renameColumn_; }
          set {
            renameColumn_ = value;
          }
        }

        /// <summary>Field number for the "add_range_partition" field.</summary>
        public const int AddRangePartitionFieldNumber = 5;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition addRangePartition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition AddRangePartition {
          get { return addRangePartition_; }
          set {
            addRangePartition_ = value;
          }
        }

        /// <summary>Field number for the "drop_range_partition" field.</summary>
        public const int DropRangePartitionFieldNumber = 6;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition dropRangePartition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition DropRangePartition {
          get { return dropRangePartition_; }
          set {
            dropRangePartition_ = value;
          }
        }

        /// <summary>Field number for the "alter_column" field.</summary>
        public const int AlterColumnFieldNumber = 7;
        private global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn alterColumn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn AlterColumn {
          get { return alterColumn_; }
          set {
            alterColumn_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Step);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Step other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (!object.Equals(AddColumn, other.AddColumn)) return false;
          if (!object.Equals(DropColumn, other.DropColumn)) return false;
          if (!object.Equals(RenameColumn, other.RenameColumn)) return false;
          if (!object.Equals(AddRangePartition, other.AddRangePartition)) return false;
          if (!object.Equals(DropRangePartition, other.DropRangePartition)) return false;
          if (!object.Equals(AlterColumn, other.AlterColumn)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasType) hash ^= Type.GetHashCode();
          if (addColumn_ != null) hash ^= AddColumn.GetHashCode();
          if (dropColumn_ != null) hash ^= DropColumn.GetHashCode();
          if (renameColumn_ != null) hash ^= RenameColumn.GetHashCode();
          if (addRangePartition_ != null) hash ^= AddRangePartition.GetHashCode();
          if (dropRangePartition_ != null) hash ^= DropRangePartition.GetHashCode();
          if (alterColumn_ != null) hash ^= AlterColumn.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (addColumn_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AddColumn);
          }
          if (dropColumn_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DropColumn);
          }
          if (renameColumn_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(RenameColumn);
          }
          if (addRangePartition_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(AddRangePartition);
          }
          if (dropRangePartition_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(DropRangePartition);
          }
          if (alterColumn_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AlterColumn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (addColumn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddColumn);
          }
          if (dropColumn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DropColumn);
          }
          if (renameColumn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RenameColumn);
          }
          if (addRangePartition_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddRangePartition);
          }
          if (dropRangePartition_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DropRangePartition);
          }
          if (alterColumn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlterColumn);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Step other) {
          if (other == null) {
            return;
          }
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.addColumn_ != null) {
            if (addColumn_ == null) {
              AddColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn();
            }
            AddColumn.MergeFrom(other.AddColumn);
          }
          if (other.dropColumn_ != null) {
            if (dropColumn_ == null) {
              DropColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn();
            }
            DropColumn.MergeFrom(other.DropColumn);
          }
          if (other.renameColumn_ != null) {
            if (renameColumn_ == null) {
              RenameColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn();
            }
            RenameColumn.MergeFrom(other.RenameColumn);
          }
          if (other.addRangePartition_ != null) {
            if (addRangePartition_ == null) {
              AddRangePartition = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition();
            }
            AddRangePartition.MergeFrom(other.AddRangePartition);
          }
          if (other.dropRangePartition_ != null) {
            if (dropRangePartition_ == null) {
              DropRangePartition = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition();
            }
            DropRangePartition.MergeFrom(other.DropRangePartition);
          }
          if (other.alterColumn_ != null) {
            if (alterColumn_ == null) {
              AlterColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn();
            }
            AlterColumn.MergeFrom(other.AlterColumn);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.StepType) input.ReadEnum();
                break;
              }
              case 18: {
                if (addColumn_ == null) {
                  AddColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddColumn();
                }
                input.ReadMessage(AddColumn);
                break;
              }
              case 26: {
                if (dropColumn_ == null) {
                  DropColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropColumn();
                }
                input.ReadMessage(DropColumn);
                break;
              }
              case 34: {
                if (renameColumn_ == null) {
                  RenameColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.RenameColumn();
                }
                input.ReadMessage(RenameColumn);
                break;
              }
              case 42: {
                if (addRangePartition_ == null) {
                  AddRangePartition = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AddRangePartition();
                }
                input.ReadMessage(AddRangePartition);
                break;
              }
              case 50: {
                if (dropRangePartition_ == null) {
                  DropRangePartition = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.DropRangePartition();
                }
                input.ReadMessage(DropRangePartition);
                break;
              }
              case 58: {
                if (alterColumn_ == null) {
                  AlterColumn = new global::Knet.Kudu.Client.Protobuf.Master.AlterTableRequestPB.Types.AlterColumn();
                }
                input.ReadMessage(AlterColumn);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AlterTableResponsePB : pb::IMessage<AlterTableResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<AlterTableResponsePB> _parser = new pb::MessageParser<AlterTableResponsePB>(() => new AlterTableResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AlterTableResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableResponsePB(AlterTableResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      schemaVersion_ = other.schemaVersion_;
      tableId_ = other.tableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlterTableResponsePB Clone() {
      return new AlterTableResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 2;
    private readonly static uint SchemaVersionDefaultValue = 0;

    private uint schemaVersion_;
    /// <summary>
    /// The schema version of the altered table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SchemaVersion {
      get { if ((_hasBits0 & 1) != 0) { return schemaVersion_; } else { return SchemaVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        schemaVersion_ = value;
      }
    }
    /// <summary>Gets whether the "schema_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSchemaVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "schema_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSchemaVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 3;
    private readonly static pb::ByteString TableIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tableId_;
    /// <summary>
    /// The table ID of the altered table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AlterTableResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AlterTableResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      if (TableId != other.TableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasSchemaVersion) hash ^= SchemaVersion.GetHashCode();
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasSchemaVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(SchemaVersion);
      }
      if (HasTableId) {
        output.WriteRawTag(26);
        output.WriteBytes(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasSchemaVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SchemaVersion);
      }
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AlterTableResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasSchemaVersion) {
        SchemaVersion = other.SchemaVersion;
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 16: {
            SchemaVersion = input.ReadUInt32();
            break;
          }
          case 26: {
            TableId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsAlterTableDoneRequestPB : pb::IMessage<IsAlterTableDoneRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<IsAlterTableDoneRequestPB> _parser = new pb::MessageParser<IsAlterTableDoneRequestPB>(() => new IsAlterTableDoneRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IsAlterTableDoneRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneRequestPB(IsAlterTableDoneRequestPB other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneRequestPB Clone() {
      return new IsAlterTableDoneRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IsAlterTableDoneRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IsAlterTableDoneRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IsAlterTableDoneRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsAlterTableDoneResponsePB : pb::IMessage<IsAlterTableDoneResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<IsAlterTableDoneResponsePB> _parser = new pb::MessageParser<IsAlterTableDoneResponsePB>(() => new IsAlterTableDoneResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IsAlterTableDoneResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneResponsePB(IsAlterTableDoneResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      schemaVersion_ = other.schemaVersion_;
      done_ = other.done_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IsAlterTableDoneResponsePB Clone() {
      return new IsAlterTableDoneResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 2;
    private readonly static uint SchemaVersionDefaultValue = 0;

    private uint schemaVersion_;
    /// <summary>
    /// this is the current schema, or the 'new' schema version if an alter is in progress
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SchemaVersion {
      get { if ((_hasBits0 & 1) != 0) { return schemaVersion_; } else { return SchemaVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        schemaVersion_ = value;
      }
    }
    /// <summary>Gets whether the "schema_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSchemaVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "schema_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSchemaVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 3;
    private readonly static bool DoneDefaultValue = false;

    private bool done_;
    /// <summary>
    /// true if the alter operation is completed, false otherwise
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { if ((_hasBits0 & 2) != 0) { return done_; } else { return DoneDefaultValue; } }
      set {
        _hasBits0 |= 2;
        done_ = value;
      }
    }
    /// <summary>Gets whether the "done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDone {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDone() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IsAlterTableDoneResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IsAlterTableDoneResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      if (Done != other.Done) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasSchemaVersion) hash ^= SchemaVersion.GetHashCode();
      if (HasDone) hash ^= Done.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasSchemaVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(SchemaVersion);
      }
      if (HasDone) {
        output.WriteRawTag(24);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasSchemaVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SchemaVersion);
      }
      if (HasDone) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IsAlterTableDoneResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasSchemaVersion) {
        SchemaVersion = other.SchemaVersion;
      }
      if (other.HasDone) {
        Done = other.Done;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 16: {
            SchemaVersion = input.ReadUInt32();
            break;
          }
          case 24: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTableSchemaRequestPB : pb::IMessage<GetTableSchemaRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableSchemaRequestPB> _parser = new pb::MessageParser<GetTableSchemaRequestPB>(() => new GetTableSchemaRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableSchemaRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaRequestPB(GetTableSchemaRequestPB other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaRequestPB Clone() {
      return new GetTableSchemaRequestPB(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableSchemaRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableSchemaRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableSchemaRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
        }
        Table.MergeFrom(other.Table);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Knet.Kudu.Client.Protobuf.Master.TableIdentifierPB();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTableSchemaResponsePB : pb::IMessage<GetTableSchemaResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetTableSchemaResponsePB> _parser = new pb::MessageParser<GetTableSchemaResponsePB>(() => new GetTableSchemaResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTableSchemaResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaResponsePB(GetTableSchemaResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      partitionSchema_ = other.partitionSchema_ != null ? other.partitionSchema_.Clone() : null;
      numReplicas_ = other.numReplicas_;
      tableId_ = other.tableId_;
      tableName_ = other.tableName_;
      authzToken_ = other.authzToken_ != null ? other.authzToken_.Clone() : null;
      extraConfigs_ = other.extraConfigs_.Clone();
      owner_ = other.owner_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTableSchemaResponsePB Clone() {
      return new GetTableSchemaResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
    /// <summary>
    /// This is the schema that every TS should be able to understand
    /// if your alter is keeping the schema compatible.
    /// In case of an alter table in progress, this is the previous schema;
    /// otherwise it is the latest schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "partition_schema" field.</summary>
    public const int PartitionSchemaFieldNumber = 5;
    private global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB partitionSchema_;
    /// <summary>
    /// The table's partition schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB PartitionSchema {
      get { return partitionSchema_; }
      set {
        partitionSchema_ = value;
      }
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 3;
    private readonly static int NumReplicasDefaultValue = 0;

    private int numReplicas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { if ((_hasBits0 & 1) != 0) { return numReplicas_; } else { return NumReplicasDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numReplicas_ = value;
      }
    }
    /// <summary>Gets whether the "num_replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumReplicas {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumReplicas() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 4;
    private readonly static pb::ByteString TableIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tableId_;
    /// <summary>
    /// The ID of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TableId {
      get { return tableId_ ?? TableIdDefaultValue; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableId {
      get { return tableId_ != null; }
    }
    /// <summary>Clears the value of the "table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableId() {
      tableId_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 7;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    /// <summary>
    /// The table name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "authz_token" field.</summary>
    public const int AuthzTokenFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB authzToken_;
    /// <summary>
    /// A token that the client can use to authorize further access to the table.
    /// A token can always be expected with this response, unless the response is
    /// from an older version of Kudu or unless the request resulted in an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB AuthzToken {
      get { return authzToken_; }
      set {
        authzToken_ = value;
      }
    }

    /// <summary>Field number for the "extra_configs" field.</summary>
    public const int ExtraConfigsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_extraConfigs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> extraConfigs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The table's extra configuration properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> ExtraConfigs {
      get { return extraConfigs_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 10;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The user that owns the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 11;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    /// <summary>
    /// The comment on the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTableSchemaResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTableSchemaResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(PartitionSchema, other.PartitionSchema)) return false;
      if (NumReplicas != other.NumReplicas) return false;
      if (TableId != other.TableId) return false;
      if (TableName != other.TableName) return false;
      if (!object.Equals(AuthzToken, other.AuthzToken)) return false;
      if (!ExtraConfigs.Equals(other.ExtraConfigs)) return false;
      if (Owner != other.Owner) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (partitionSchema_ != null) hash ^= PartitionSchema.GetHashCode();
      if (HasNumReplicas) hash ^= NumReplicas.GetHashCode();
      if (HasTableId) hash ^= TableId.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (authzToken_ != null) hash ^= AuthzToken.GetHashCode();
      hash ^= ExtraConfigs.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (schema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (HasNumReplicas) {
        output.WriteRawTag(24);
        output.WriteInt32(NumReplicas);
      }
      if (HasTableId) {
        output.WriteRawTag(34);
        output.WriteBytes(TableId);
      }
      if (partitionSchema_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PartitionSchema);
      }
      if (HasTableName) {
        output.WriteRawTag(58);
        output.WriteString(TableName);
      }
      if (authzToken_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AuthzToken);
      }
      extraConfigs_.WriteTo(ref output, _map_extraConfigs_codec);
      if (HasOwner) {
        output.WriteRawTag(82);
        output.WriteString(Owner);
      }
      if (HasComment) {
        output.WriteRawTag(90);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (partitionSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionSchema);
      }
      if (HasNumReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (HasTableId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TableId);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (authzToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthzToken);
      }
      size += extraConfigs_.CalculateSize(_map_extraConfigs_codec);
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTableSchemaResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.partitionSchema_ != null) {
        if (partitionSchema_ == null) {
          PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
        }
        PartitionSchema.MergeFrom(other.PartitionSchema);
      }
      if (other.HasNumReplicas) {
        NumReplicas = other.NumReplicas;
      }
      if (other.HasTableId) {
        TableId = other.TableId;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.authzToken_ != null) {
        if (authzToken_ == null) {
          AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
        }
        AuthzToken.MergeFrom(other.AuthzToken);
      }
      extraConfigs_.Add(other.extraConfigs_);
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 24: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 34: {
            TableId = input.ReadBytes();
            break;
          }
          case 42: {
            if (partitionSchema_ == null) {
              PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
            }
            input.ReadMessage(PartitionSchema);
            break;
          }
          case 58: {
            TableName = input.ReadString();
            break;
          }
          case 66: {
            if (authzToken_ == null) {
              AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
            }
            input.ReadMessage(AuthzToken);
            break;
          }
          case 74: {
            extraConfigs_.AddEntriesFrom(ref input, _map_extraConfigs_codec);
            break;
          }
          case 82: {
            Owner = input.ReadString();
            break;
          }
          case 90: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConnectToMasterRequestPB : pb::IMessage<ConnectToMasterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ConnectToMasterRequestPB> _parser = new pb::MessageParser<ConnectToMasterRequestPB>(() => new ConnectToMasterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectToMasterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterRequestPB(ConnectToMasterRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterRequestPB Clone() {
      return new ConnectToMasterRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectToMasterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectToMasterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectToMasterRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class ConnectToMasterResponsePB : pb::IMessage<ConnectToMasterResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ConnectToMasterResponsePB> _parser = new pb::MessageParser<ConnectToMasterResponsePB>(() => new ConnectToMasterResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectToMasterResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterResponsePB(ConnectToMasterResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      role_ = other.role_;
      caCertDer_ = other.caCertDer_.Clone();
      authnToken_ = other.authnToken_ != null ? other.authnToken_.Clone() : null;
      masterAddrs_ = other.masterAddrs_.Clone();
      hmsConfig_ = other.hmsConfig_ != null ? other.hmsConfig_.Clone() : null;
      clientLocation_ = other.clientLocation_;
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectToMasterResponsePB Clone() {
      return new ConnectToMasterResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// Set if there is an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

    private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
    /// <summary>
    /// The current role of the master.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
      get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ca_cert_der" field.</summary>
    public const int CaCertDerFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_caCertDer_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> caCertDer_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Any CA certs used by the cluster. Currently the master only uses
    /// one cert, but we may support rolling this cert in the future, so
    /// clients should add all returned certs to their trusted CA list.
    ///
    /// NOTE: this is not necessarily a "certificate chain" but rather a set of
    /// independent certs to be trusted. They may or may not have any signing
    /// relationship between them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> CaCertDer {
      get { return caCertDer_; }
    }

    /// <summary>Field number for the "authn_token" field.</summary>
    public const int AuthnTokenFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB authnToken_;
    /// <summary>
    /// If the client requested an authentication token, and security is
    /// enabled on the cluster, the master returns a signed authn token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB AuthnToken {
      get { return authnToken_; }
      set {
        authnToken_ = value;
      }
    }

    /// <summary>Field number for the "master_addrs" field.</summary>
    public const int MasterAddrsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.HostPortPB> _repeated_masterAddrs_codec
        = pb::FieldCodec.ForMessage(42, global::Knet.Kudu.Client.Protobuf.HostPortPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> masterAddrs_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB>();
    /// <summary>
    /// The hosts and ports of the masters in this cluster.
    ///
    /// NOTE: Added in Kudu 1.6.
    ///
    /// NOTE: it is likely, but not guaranteed that the hostnames advertised here
    /// will be usable by all clients. Client implementations should not use this
    /// field for "discovery" of other masters, since then it's likely that
    /// users will configure applications to only talk to one the masters in
    /// an HA setup. If that master then fails, the applications would go
    /// offline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.HostPortPB> MasterAddrs {
      get { return masterAddrs_; }
    }

    /// <summary>Field number for the "hms_config" field.</summary>
    public const int HmsConfigFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig hmsConfig_;
    /// <summary>
    /// If the master is configured with the Hive Metastore integration enabled,
    /// this field will include the configuration options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig HmsConfig {
      get { return hmsConfig_; }
      set {
        hmsConfig_ = value;
      }
    }

    /// <summary>Field number for the "client_location" field.</summary>
    public const int ClientLocationFieldNumber = 7;
    private readonly static string ClientLocationDefaultValue = "";

    private string clientLocation_;
    /// <summary>
    /// The location of the client assigned by the master.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientLocation {
      get { return clientLocation_ ?? ClientLocationDefaultValue; }
      set {
        clientLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientLocation {
      get { return clientLocation_ != null; }
    }
    /// <summary>Clears the value of the "client_location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientLocation() {
      clientLocation_ = null;
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 8;
    private readonly static string ClusterIdDefaultValue = "";

    private string clusterId_;
    /// <summary>
    /// The cluster ID of this master.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_ ?? ClusterIdDefaultValue; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cluster_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClusterId {
      get { return clusterId_ != null; }
    }
    /// <summary>Clears the value of the "cluster_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClusterId() {
      clusterId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectToMasterResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectToMasterResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Role != other.Role) return false;
      if(!caCertDer_.Equals(other.caCertDer_)) return false;
      if (!object.Equals(AuthnToken, other.AuthnToken)) return false;
      if(!masterAddrs_.Equals(other.masterAddrs_)) return false;
      if (!object.Equals(HmsConfig, other.HmsConfig)) return false;
      if (ClientLocation != other.ClientLocation) return false;
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      hash ^= caCertDer_.GetHashCode();
      if (authnToken_ != null) hash ^= AuthnToken.GetHashCode();
      hash ^= masterAddrs_.GetHashCode();
      if (hmsConfig_ != null) hash ^= HmsConfig.GetHashCode();
      if (HasClientLocation) hash ^= ClientLocation.GetHashCode();
      if (HasClusterId) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasRole) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Role);
      }
      caCertDer_.WriteTo(ref output, _repeated_caCertDer_codec);
      if (authnToken_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AuthnToken);
      }
      masterAddrs_.WriteTo(ref output, _repeated_masterAddrs_codec);
      if (hmsConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HmsConfig);
      }
      if (HasClientLocation) {
        output.WriteRawTag(58);
        output.WriteString(ClientLocation);
      }
      if (HasClusterId) {
        output.WriteRawTag(66);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      size += caCertDer_.CalculateSize(_repeated_caCertDer_codec);
      if (authnToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthnToken);
      }
      size += masterAddrs_.CalculateSize(_repeated_masterAddrs_codec);
      if (hmsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HmsConfig);
      }
      if (HasClientLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientLocation);
      }
      if (HasClusterId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectToMasterResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      caCertDer_.Add(other.caCertDer_);
      if (other.authnToken_ != null) {
        if (authnToken_ == null) {
          AuthnToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
        }
        AuthnToken.MergeFrom(other.AuthnToken);
      }
      masterAddrs_.Add(other.masterAddrs_);
      if (other.hmsConfig_ != null) {
        if (hmsConfig_ == null) {
          HmsConfig = new global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig();
        }
        HmsConfig.MergeFrom(other.HmsConfig);
      }
      if (other.HasClientLocation) {
        ClientLocation = other.ClientLocation;
      }
      if (other.HasClusterId) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 16: {
            Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
            break;
          }
          case 26: {
            caCertDer_.AddEntriesFrom(ref input, _repeated_caCertDer_codec);
            break;
          }
          case 34: {
            if (authnToken_ == null) {
              AuthnToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
            }
            input.ReadMessage(AuthnToken);
            break;
          }
          case 42: {
            masterAddrs_.AddEntriesFrom(ref input, _repeated_masterAddrs_codec);
            break;
          }
          case 50: {
            if (hmsConfig_ == null) {
              HmsConfig = new global::Knet.Kudu.Client.Protobuf.Master.HiveMetastoreConfig();
            }
            input.ReadMessage(HmsConfig);
            break;
          }
          case 58: {
            ClientLocation = input.ReadString();
            break;
          }
          case 66: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Hive Metastore integration options and configuration.
  /// </summary>
  public sealed partial class HiveMetastoreConfig : pb::IMessage<HiveMetastoreConfig>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<HiveMetastoreConfig> _parser = new pb::MessageParser<HiveMetastoreConfig>(() => new HiveMetastoreConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HiveMetastoreConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HiveMetastoreConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HiveMetastoreConfig(HiveMetastoreConfig other) : this() {
      _hasBits0 = other._hasBits0;
      hmsUris_ = other.hmsUris_;
      hmsSaslEnabled_ = other.hmsSaslEnabled_;
      hmsUuid_ = other.hmsUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HiveMetastoreConfig Clone() {
      return new HiveMetastoreConfig(this);
    }

    /// <summary>Field number for the "hms_uris" field.</summary>
    public const int HmsUrisFieldNumber = 1;
    private readonly static string HmsUrisDefaultValue = "";

    private string hmsUris_;
    /// <summary>
    /// Address(es) of the Hive Metastore instance(s).
    ///
    /// For more info see the Kudu master --hive_metastore_uris flag for more info,
    /// or the Hive Metastore hive.metastore.uris configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HmsUris {
      get { return hmsUris_ ?? HmsUrisDefaultValue; }
      set {
        hmsUris_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hms_uris" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHmsUris {
      get { return hmsUris_ != null; }
    }
    /// <summary>Clears the value of the "hms_uris" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHmsUris() {
      hmsUris_ = null;
    }

    /// <summary>Field number for the "hms_sasl_enabled" field.</summary>
    public const int HmsSaslEnabledFieldNumber = 2;
    private readonly static bool HmsSaslEnabledDefaultValue = false;

    private bool hmsSaslEnabled_;
    /// <summary>
    /// Whether the Hive Metastore instance uses SASL (Kerberos) security.
    ///
    /// For more info see the Kudu master --hive_metastore_sasl_enabled flag, or
    /// the Hive Metastore hive.metastore.sasl.enabled configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HmsSaslEnabled {
      get { if ((_hasBits0 & 1) != 0) { return hmsSaslEnabled_; } else { return HmsSaslEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hmsSaslEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "hms_sasl_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHmsSaslEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "hms_sasl_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHmsSaslEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hms_uuid" field.</summary>
    public const int HmsUuidFieldNumber = 3;
    private readonly static string HmsUuidDefaultValue = "";

    private string hmsUuid_;
    /// <summary>
    /// An ID which uniquely identifies the Hive Metastore instance.
    ///
    /// NOTE: this is provided on a best-effort basis, as not all Hive Metastore
    /// versions which Kudu is compatible with include the necessary APIs. See
    /// HIVE-16452 for more info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HmsUuid {
      get { return hmsUuid_ ?? HmsUuidDefaultValue; }
      set {
        hmsUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hms_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHmsUuid {
      get { return hmsUuid_ != null; }
    }
    /// <summary>Clears the value of the "hms_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHmsUuid() {
      hmsUuid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HiveMetastoreConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HiveMetastoreConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HmsUris != other.HmsUris) return false;
      if (HmsSaslEnabled != other.HmsSaslEnabled) return false;
      if (HmsUuid != other.HmsUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHmsUris) hash ^= HmsUris.GetHashCode();
      if (HasHmsSaslEnabled) hash ^= HmsSaslEnabled.GetHashCode();
      if (HasHmsUuid) hash ^= HmsUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHmsUris) {
        output.WriteRawTag(10);
        output.WriteString(HmsUris);
      }
      if (HasHmsSaslEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(HmsSaslEnabled);
      }
      if (HasHmsUuid) {
        output.WriteRawTag(26);
        output.WriteString(HmsUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHmsUris) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HmsUris);
      }
      if (HasHmsSaslEnabled) {
        size += 1 + 1;
      }
      if (HasHmsUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HmsUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HiveMetastoreConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasHmsUris) {
        HmsUris = other.HmsUris;
      }
      if (other.HasHmsSaslEnabled) {
        HmsSaslEnabled = other.HmsSaslEnabled;
      }
      if (other.HasHmsUuid) {
        HmsUuid = other.HmsUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HmsUris = input.ReadString();
            break;
          }
          case 16: {
            HmsSaslEnabled = input.ReadBool();
            break;
          }
          case 26: {
            HmsUuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListTabletServersRequestPB : pb::IMessage<ListTabletServersRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTabletServersRequestPB> _parser = new pb::MessageParser<ListTabletServersRequestPB>(() => new ListTabletServersRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTabletServersRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersRequestPB(ListTabletServersRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      includeStates_ = other.includeStates_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersRequestPB Clone() {
      return new ListTabletServersRequestPB(this);
    }

    /// <summary>Field number for the "include_states" field.</summary>
    public const int IncludeStatesFieldNumber = 1;
    private readonly static bool IncludeStatesDefaultValue = false;

    private bool includeStates_;
    /// <summary>
    /// Whether or not to include the tserver states.
    /// Note: this may include states of tservers that haven't been registered and
    /// thus don't have a complete response Entries. In such cases, the Entries
    /// will be returned with bogus info w.r.t registration and heartbeating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeStates {
      get { if ((_hasBits0 & 1) != 0) { return includeStates_; } else { return IncludeStatesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        includeStates_ = value;
      }
    }
    /// <summary>Gets whether the "include_states" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeStates {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "include_states" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeStates() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTabletServersRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTabletServersRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncludeStates != other.IncludeStates) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIncludeStates) hash ^= IncludeStates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIncludeStates) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeStates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIncludeStates) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTabletServersRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasIncludeStates) {
        IncludeStates = other.IncludeStates;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IncludeStates = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListTabletServersResponsePB : pb::IMessage<ListTabletServersResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTabletServersResponsePB> _parser = new pb::MessageParser<ListTabletServersResponsePB>(() => new ListTabletServersResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTabletServersResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersResponsePB(ListTabletServersResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      servers_ = other.servers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletServersResponsePB Clone() {
      return new ListTabletServersResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "servers" field.</summary>
    public const int ServersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry> _repeated_servers_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry> servers_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Types.Entry> Servers {
      get { return servers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTabletServersResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTabletServersResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!servers_.Equals(other.servers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= servers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      servers_.WriteTo(ref output, _repeated_servers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += servers_.CalculateSize(_repeated_servers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTabletServersResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      servers_.Add(other.servers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            servers_.AddEntriesFrom(ref input, _repeated_servers_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListTabletServersResponsePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Entry : pb::IMessage<Entry>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Master.ListTabletServersResponsePB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Entry(Entry other) : this() {
          _hasBits0 = other._hasBits0;
          instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
          registration_ = other.registration_ != null ? other.registration_.Clone() : null;
          millisSinceHeartbeat_ = other.millisSinceHeartbeat_;
          location_ = other.location_;
          state_ = other.state_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "instance_id" field.</summary>
        public const int InstanceIdFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.NodeInstancePB instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.NodeInstancePB InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "registration" field.</summary>
        public const int RegistrationFieldNumber = 2;
        private global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB registration_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB Registration {
          get { return registration_; }
          set {
            registration_ = value;
          }
        }

        /// <summary>Field number for the "millis_since_heartbeat" field.</summary>
        public const int MillisSinceHeartbeatFieldNumber = 3;
        private readonly static int MillisSinceHeartbeatDefaultValue = 0;

        private int millisSinceHeartbeat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MillisSinceHeartbeat {
          get { if ((_hasBits0 & 1) != 0) { return millisSinceHeartbeat_; } else { return MillisSinceHeartbeatDefaultValue; } }
          set {
            _hasBits0 |= 1;
            millisSinceHeartbeat_ = value;
          }
        }
        /// <summary>Gets whether the "millis_since_heartbeat" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMillisSinceHeartbeat {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "millis_since_heartbeat" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMillisSinceHeartbeat() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 4;
        private readonly static string LocationDefaultValue = "";

        private string location_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Location {
          get { return location_ ?? LocationDefaultValue; }
          set {
            location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "location" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLocation {
          get { return location_ != null; }
        }
        /// <summary>Clears the value of the "location" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLocation() {
          location_ = null;
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 5;
        private readonly static global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB StateDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB.UnknownState;

        private global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB state_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB State {
          get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
          set {
            _hasBits0 |= 2;
            state_ = value;
          }
        }
        /// <summary>Gets whether the "state" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasState {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "state" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearState() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InstanceId, other.InstanceId)) return false;
          if (!object.Equals(Registration, other.Registration)) return false;
          if (MillisSinceHeartbeat != other.MillisSinceHeartbeat) return false;
          if (Location != other.Location) return false;
          if (State != other.State) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
          if (registration_ != null) hash ^= Registration.GetHashCode();
          if (HasMillisSinceHeartbeat) hash ^= MillisSinceHeartbeat.GetHashCode();
          if (HasLocation) hash ^= Location.GetHashCode();
          if (HasState) hash ^= State.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (instanceId_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InstanceId);
          }
          if (registration_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Registration);
          }
          if (HasMillisSinceHeartbeat) {
            output.WriteRawTag(24);
            output.WriteInt32(MillisSinceHeartbeat);
          }
          if (HasLocation) {
            output.WriteRawTag(34);
            output.WriteString(Location);
          }
          if (HasState) {
            output.WriteRawTag(40);
            output.WriteEnum((int) State);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (instanceId_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
          }
          if (registration_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
          }
          if (HasMillisSinceHeartbeat) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MillisSinceHeartbeat);
          }
          if (HasLocation) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
          }
          if (HasState) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.instanceId_ != null) {
            if (instanceId_ == null) {
              InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
            }
            InstanceId.MergeFrom(other.InstanceId);
          }
          if (other.registration_ != null) {
            if (registration_ == null) {
              Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
            }
            Registration.MergeFrom(other.Registration);
          }
          if (other.HasMillisSinceHeartbeat) {
            MillisSinceHeartbeat = other.MillisSinceHeartbeat;
          }
          if (other.HasLocation) {
            Location = other.Location;
          }
          if (other.HasState) {
            State = other.State;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (instanceId_ == null) {
                  InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
                }
                input.ReadMessage(InstanceId);
                break;
              }
              case 18: {
                if (registration_ == null) {
                  Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
                }
                input.ReadMessage(Registration);
                break;
              }
              case 24: {
                MillisSinceHeartbeat = input.ReadInt32();
                break;
              }
              case 34: {
                Location = input.ReadString();
                break;
              }
              case 40: {
                State = (global::Knet.Kudu.Client.Protobuf.Master.TServerStatePB) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TServerStateChangePB : pb::IMessage<TServerStateChangePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TServerStateChangePB> _parser = new pb::MessageParser<TServerStateChangePB>(() => new TServerStateChangePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TServerStateChangePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TServerStateChangePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TServerStateChangePB(TServerStateChangePB other) : this() {
      _hasBits0 = other._hasBits0;
      uuid_ = other.uuid_;
      change_ = other.change_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TServerStateChangePB Clone() {
      return new TServerStateChangePB(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static string UuidDefaultValue = "";

    private string uuid_;
    /// <summary>
    /// The tserver UUID on which to apply the state change.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "change" field.</summary>
    public const int ChangeFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange ChangeDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange.UnknownStateChange;

    private global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange change_;
    /// <summary>
    /// The change in tserver state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange Change {
      get { if ((_hasBits0 & 1) != 0) { return change_; } else { return ChangeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        change_ = value;
      }
    }
    /// <summary>Gets whether the "change" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChange {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "change" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChange() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TServerStateChangePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TServerStateChangePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Change != other.Change) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (HasChange) hash ^= Change.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (HasChange) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Change);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (HasChange) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Change);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TServerStateChangePB other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      if (other.HasChange) {
        Change = other.Change;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            Change = (global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB.Types.StateChange) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TServerStateChangePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Representation of a change in tserver state.
      /// </summary>
      public enum StateChange {
        /// <summary>
        /// Default value for backwards compatibility.
        /// </summary>
        [pbr::OriginalName("UNKNOWN_STATE_CHANGE")] UnknownStateChange = 0,
        /// <summary>
        /// Transitions from having no state to being in maintenance mode. If the
        /// tserver is already in maintenance mode, this is a no-op.
        /// </summary>
        [pbr::OriginalName("ENTER_MAINTENANCE_MODE")] EnterMaintenanceMode = 1,
        /// <summary>
        /// Transitions from being in maintenance mode to having no tserver state. If
        /// the tserver already has no state, this is a no-op.
        /// </summary>
        [pbr::OriginalName("EXIT_MAINTENANCE_MODE")] ExitMaintenanceMode = 2,
      }

    }
    #endregion

  }

  public sealed partial class ChangeTServerStateRequestPB : pb::IMessage<ChangeTServerStateRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ChangeTServerStateRequestPB> _parser = new pb::MessageParser<ChangeTServerStateRequestPB>(() => new ChangeTServerStateRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeTServerStateRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateRequestPB(ChangeTServerStateRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      change_ = other.change_ != null ? other.change_.Clone() : null;
      handleMissingTserver_ = other.handleMissingTserver_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateRequestPB Clone() {
      return new ChangeTServerStateRequestPB(this);
    }

    /// <summary>Field number for the "change" field.</summary>
    public const int ChangeFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB change_;
    /// <summary>
    /// TODO(awong): consider setting tserver state in batches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB Change {
      get { return change_; }
      set {
        change_ = value;
      }
    }

    /// <summary>Field number for the "handle_missing_tserver" field.</summary>
    public const int HandleMissingTserverFieldNumber = 2;
    private readonly static global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS HandleMissingTserverDefaultValue = global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS.DontAllowMissingTserver;

    private global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS handleMissingTserver_;
    /// <summary>
    /// If set to ALLOW_MISSING_TSERVER, will allow setting the state of the
    /// tserver even if it hasn't been registered with the master and there is no
    /// existing state associated with that server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS HandleMissingTserver {
      get { if ((_hasBits0 & 1) != 0) { return handleMissingTserver_; } else { return HandleMissingTserverDefaultValue; } }
      set {
        _hasBits0 |= 1;
        handleMissingTserver_ = value;
      }
    }
    /// <summary>Gets whether the "handle_missing_tserver" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandleMissingTserver {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "handle_missing_tserver" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandleMissingTserver() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeTServerStateRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeTServerStateRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Change, other.Change)) return false;
      if (HandleMissingTserver != other.HandleMissingTserver) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (change_ != null) hash ^= Change.GetHashCode();
      if (HasHandleMissingTserver) hash ^= HandleMissingTserver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (change_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Change);
      }
      if (HasHandleMissingTserver) {
        output.WriteRawTag(16);
        output.WriteEnum((int) HandleMissingTserver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (change_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Change);
      }
      if (HasHandleMissingTserver) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HandleMissingTserver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeTServerStateRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.change_ != null) {
        if (change_ == null) {
          Change = new global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB();
        }
        Change.MergeFrom(other.Change);
      }
      if (other.HasHandleMissingTserver) {
        HandleMissingTserver = other.HandleMissingTserver;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (change_ == null) {
              Change = new global::Knet.Kudu.Client.Protobuf.Master.TServerStateChangePB();
            }
            input.ReadMessage(Change);
            break;
          }
          case 16: {
            HandleMissingTserver = (global::Knet.Kudu.Client.Protobuf.Master.ChangeTServerStateRequestPB.Types.HandleMissingTS) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChangeTServerStateRequestPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum HandleMissingTS {
        [pbr::OriginalName("UNKNOWN_HANDLING")] UnknownHandling = 0,
        [pbr::OriginalName("ALLOW_MISSING_TSERVER")] AllowMissingTserver = 1,
        [pbr::OriginalName("DONT_ALLOW_MISSING_TSERVER")] DontAllowMissingTserver = 2,
      }

    }
    #endregion

  }

  public sealed partial class ChangeTServerStateResponsePB : pb::IMessage<ChangeTServerStateResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ChangeTServerStateResponsePB> _parser = new pb::MessageParser<ChangeTServerStateResponsePB>(() => new ChangeTServerStateResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeTServerStateResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateResponsePB(ChangeTServerStateResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTServerStateResponsePB Clone() {
      return new ChangeTServerStateResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeTServerStateResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeTServerStateResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeTServerStateResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddMasterRequestPB : pb::IMessage<AddMasterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<AddMasterRequestPB> _parser = new pb::MessageParser<AddMasterRequestPB>(() => new AddMasterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddMasterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterRequestPB(AddMasterRequestPB other) : this() {
      rpcAddr_ = other.rpcAddr_ != null ? other.rpcAddr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterRequestPB Clone() {
      return new AddMasterRequestPB(this);
    }

    /// <summary>Field number for the "rpc_addr" field.</summary>
    public const int RpcAddrFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.HostPortPB rpcAddr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.HostPortPB RpcAddr {
      get { return rpcAddr_; }
      set {
        rpcAddr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddMasterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddMasterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RpcAddr, other.RpcAddr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rpcAddr_ != null) hash ^= RpcAddr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rpcAddr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RpcAddr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rpcAddr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RpcAddr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddMasterRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.rpcAddr_ != null) {
        if (rpcAddr_ == null) {
          RpcAddr = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
        }
        RpcAddr.MergeFrom(other.RpcAddr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rpcAddr_ == null) {
              RpcAddr = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
            }
            input.ReadMessage(RpcAddr);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddMasterResponsePB : pb::IMessage<AddMasterResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<AddMasterResponsePB> _parser = new pb::MessageParser<AddMasterResponsePB>(() => new AddMasterResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddMasterResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterResponsePB(AddMasterResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMasterResponsePB Clone() {
      return new AddMasterResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddMasterResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddMasterResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddMasterResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveMasterRequestPB : pb::IMessage<RemoveMasterRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<RemoveMasterRequestPB> _parser = new pb::MessageParser<RemoveMasterRequestPB>(() => new RemoveMasterRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemoveMasterRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterRequestPB(RemoveMasterRequestPB other) : this() {
      rpcAddr_ = other.rpcAddr_ != null ? other.rpcAddr_.Clone() : null;
      masterUuid_ = other.masterUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterRequestPB Clone() {
      return new RemoveMasterRequestPB(this);
    }

    /// <summary>Field number for the "rpc_addr" field.</summary>
    public const int RpcAddrFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.HostPortPB rpcAddr_;
    /// <summary>
    /// HostPort of the master to be removed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.HostPortPB RpcAddr {
      get { return rpcAddr_; }
      set {
        rpcAddr_ = value;
      }
    }

    /// <summary>Field number for the "master_uuid" field.</summary>
    public const int MasterUuidFieldNumber = 2;
    private readonly static string MasterUuidDefaultValue = "";

    private string masterUuid_;
    /// <summary>
    /// Optional UUID of the master to be removed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MasterUuid {
      get { return masterUuid_ ?? MasterUuidDefaultValue; }
      set {
        masterUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "master_uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMasterUuid {
      get { return masterUuid_ != null; }
    }
    /// <summary>Clears the value of the "master_uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMasterUuid() {
      masterUuid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemoveMasterRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemoveMasterRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RpcAddr, other.RpcAddr)) return false;
      if (MasterUuid != other.MasterUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rpcAddr_ != null) hash ^= RpcAddr.GetHashCode();
      if (HasMasterUuid) hash ^= MasterUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rpcAddr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RpcAddr);
      }
      if (HasMasterUuid) {
        output.WriteRawTag(18);
        output.WriteString(MasterUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rpcAddr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RpcAddr);
      }
      if (HasMasterUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemoveMasterRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.rpcAddr_ != null) {
        if (rpcAddr_ == null) {
          RpcAddr = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
        }
        RpcAddr.MergeFrom(other.RpcAddr);
      }
      if (other.HasMasterUuid) {
        MasterUuid = other.MasterUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rpcAddr_ == null) {
              RpcAddr = new global::Knet.Kudu.Client.Protobuf.HostPortPB();
            }
            input.ReadMessage(RpcAddr);
            break;
          }
          case 18: {
            MasterUuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveMasterResponsePB : pb::IMessage<RemoveMasterResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<RemoveMasterResponsePB> _parser = new pb::MessageParser<RemoveMasterResponsePB>(() => new RemoveMasterResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemoveMasterResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterResponsePB(RemoveMasterResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoveMasterResponsePB Clone() {
      return new RemoveMasterResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemoveMasterResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemoveMasterResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemoveMasterResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetMasterRegistrationRequest/Response: get the instance id and
  /// HTTP/RPC addresses for this Master server.
  /// </summary>
  public sealed partial class GetMasterRegistrationRequestPB : pb::IMessage<GetMasterRegistrationRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetMasterRegistrationRequestPB> _parser = new pb::MessageParser<GetMasterRegistrationRequestPB>(() => new GetMasterRegistrationRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMasterRegistrationRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationRequestPB(GetMasterRegistrationRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationRequestPB Clone() {
      return new GetMasterRegistrationRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMasterRegistrationRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMasterRegistrationRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMasterRegistrationRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class GetMasterRegistrationResponsePB : pb::IMessage<GetMasterRegistrationResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<GetMasterRegistrationResponsePB> _parser = new pb::MessageParser<GetMasterRegistrationResponsePB>(() => new GetMasterRegistrationResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMasterRegistrationResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationResponsePB(GetMasterRegistrationResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      registration_ = other.registration_ != null ? other.registration_.Clone() : null;
      role_ = other.role_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      clusterId_ = other.clusterId_;
      memberType_ = other.memberType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMasterRegistrationResponsePB Clone() {
      return new GetMasterRegistrationResponsePB(this);
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.NodeInstancePB instanceId_;
    /// <summary>
    /// Node instance information is always set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.NodeInstancePB InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB registration_;
    /// <summary>
    /// These fields are optional, as they won't be set if there's an
    /// error retrieving the host/port information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

    private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
    /// <summary>
    /// This server's role in the consensus configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
      get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// Set if there an error retrieving the registration information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 5;
    private readonly static string ClusterIdDefaultValue = "";

    private string clusterId_;
    /// <summary>
    /// The unique cluster ID of the cluster this server belongs too.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_ ?? ClusterIdDefaultValue; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cluster_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClusterId {
      get { return clusterId_ != null; }
    }
    /// <summary>Clears the value of the "cluster_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClusterId() {
      clusterId_ = null;
    }

    /// <summary>Field number for the "member_type" field.</summary>
    public const int MemberTypeFieldNumber = 6;
    private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType MemberTypeDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType.UnknownMemberType;

    private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType memberType_;
    /// <summary>
    /// This server's membership type in the consensus configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType MemberType {
      get { if ((_hasBits0 & 2) != 0) { return memberType_; } else { return MemberTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        memberType_ = value;
      }
    }
    /// <summary>Gets whether the "member_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMemberType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "member_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMemberType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMasterRegistrationResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMasterRegistrationResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (!object.Equals(Registration, other.Registration)) return false;
      if (Role != other.Role) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MemberType != other.MemberType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (registration_ != null) hash ^= Registration.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasClusterId) hash ^= ClusterId.GetHashCode();
      if (HasMemberType) hash ^= MemberType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instanceId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InstanceId);
      }
      if (registration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Registration);
      }
      if (HasRole) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Role);
      }
      if (error_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Error);
      }
      if (HasClusterId) {
        output.WriteRawTag(42);
        output.WriteString(ClusterId);
      }
      if (HasMemberType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MemberType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasClusterId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (HasMemberType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MemberType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMasterRegistrationResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
        }
        Registration.MergeFrom(other.Registration);
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasClusterId) {
        ClusterId = other.ClusterId;
      }
      if (other.HasMemberType) {
        MemberType = other.MemberType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instanceId_ == null) {
              InstanceId = new global::Knet.Kudu.Client.Protobuf.NodeInstancePB();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 18: {
            if (registration_ == null) {
              Registration = new global::Knet.Kudu.Client.Protobuf.ServerRegistrationPB();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 24: {
            Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
            break;
          }
          case 34: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            ClusterId = input.ReadString();
            break;
          }
          case 48: {
            MemberType = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.MemberType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListMastersRequest/Response: get information about all of the known
  /// master servers, including this node.
  /// </summary>
  public sealed partial class ListMastersRequestPB : pb::IMessage<ListMastersRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListMastersRequestPB> _parser = new pb::MessageParser<ListMastersRequestPB>(() => new ListMastersRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListMastersRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersRequestPB(ListMastersRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersRequestPB Clone() {
      return new ListMastersRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListMastersRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListMastersRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListMastersRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class ListMastersResponsePB : pb::IMessage<ListMastersResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListMastersResponsePB> _parser = new pb::MessageParser<ListMastersResponsePB>(() => new ListMastersResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListMastersResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersResponsePB(ListMastersResponsePB other) : this() {
      masters_ = other.masters_.Clone();
      dEPRECATEDError_ = other.dEPRECATEDError_ != null ? other.dEPRECATEDError_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListMastersResponsePB Clone() {
      return new ListMastersResponsePB(this);
    }

    /// <summary>Field number for the "masters" field.</summary>
    public const int MastersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.ServerEntryPB> _repeated_masters_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.ServerEntryPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ServerEntryPB> masters_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ServerEntryPB>();
    /// <summary>
    /// An entry for each individual master server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ServerEntryPB> Masters {
      get { return masters_; }
    }

    /// <summary>Field number for the "DEPRECATED_error" field.</summary>
    public const int DEPRECATEDErrorFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB dEPRECATEDError_;
    /// <summary>
    /// DEPRECATED, use 'error' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB DEPRECATEDError {
      get { return dEPRECATEDError_; }
      set {
        dEPRECATEDError_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// Set if there an error retrieving the registration information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListMastersResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListMastersResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!masters_.Equals(other.masters_)) return false;
      if (!object.Equals(DEPRECATEDError, other.DEPRECATEDError)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= masters_.GetHashCode();
      if (dEPRECATEDError_ != null) hash ^= DEPRECATEDError.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      masters_.WriteTo(ref output, _repeated_masters_codec);
      if (dEPRECATEDError_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DEPRECATEDError);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += masters_.CalculateSize(_repeated_masters_codec);
      if (dEPRECATEDError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DEPRECATEDError);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListMastersResponsePB other) {
      if (other == null) {
        return;
      }
      masters_.Add(other.masters_);
      if (other.dEPRECATEDError_ != null) {
        if (dEPRECATEDError_ == null) {
          DEPRECATEDError = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        DEPRECATEDError.MergeFrom(other.DEPRECATEDError);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            masters_.AddEntriesFrom(ref input, _repeated_masters_codec);
            break;
          }
          case 18: {
            if (dEPRECATEDError_ == null) {
              DEPRECATEDError = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(DEPRECATEDError);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ReplaceTabletRequest/Response: replace a tablet with a new, empty one.
  /// The replaced tablet is deleted.
  /// </summary>
  public sealed partial class ReplaceTabletRequestPB : pb::IMessage<ReplaceTabletRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReplaceTabletRequestPB> _parser = new pb::MessageParser<ReplaceTabletRequestPB>(() => new ReplaceTabletRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReplaceTabletRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletRequestPB(ReplaceTabletRequestPB other) : this() {
      tabletId_ = other.tabletId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletRequestPB Clone() {
      return new ReplaceTabletRequestPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReplaceTabletRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReplaceTabletRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReplaceTabletRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplaceTabletResponsePB : pb::IMessage<ReplaceTabletResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ReplaceTabletResponsePB> _parser = new pb::MessageParser<ReplaceTabletResponsePB>(() => new ReplaceTabletResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReplaceTabletResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletResponsePB(ReplaceTabletResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      replacementTabletId_ = other.replacementTabletId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReplaceTabletResponsePB Clone() {
      return new ReplaceTabletResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    /// <summary>
    /// Set if there is an error replacing the tablet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "replacement_tablet_id" field.</summary>
    public const int ReplacementTabletIdFieldNumber = 2;
    private readonly static pb::ByteString ReplacementTabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString replacementTabletId_;
    /// <summary>
    /// The tablet id of the replacement tablet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ReplacementTabletId {
      get { return replacementTabletId_ ?? ReplacementTabletIdDefaultValue; }
      set {
        replacementTabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "replacement_tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplacementTabletId {
      get { return replacementTabletId_ != null; }
    }
    /// <summary>Clears the value of the "replacement_tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplacementTabletId() {
      replacementTabletId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReplaceTabletResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReplaceTabletResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (ReplacementTabletId != other.ReplacementTabletId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasReplacementTabletId) hash ^= ReplacementTabletId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasReplacementTabletId) {
        output.WriteRawTag(18);
        output.WriteBytes(ReplacementTabletId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasReplacementTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReplacementTabletId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReplaceTabletResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasReplacementTabletId) {
        ReplacementTabletId = other.ReplacementTabletId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            ReplacementTabletId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RefreshAuthzCache{Request/Result}PB: refresh the authz privileges cache,
  /// download new policies (does not guarantee the old cache is invalidated).
  /// </summary>
  public sealed partial class RefreshAuthzCacheRequestPB : pb::IMessage<RefreshAuthzCacheRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<RefreshAuthzCacheRequestPB> _parser = new pb::MessageParser<RefreshAuthzCacheRequestPB>(() => new RefreshAuthzCacheRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RefreshAuthzCacheRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheRequestPB(RefreshAuthzCacheRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheRequestPB Clone() {
      return new RefreshAuthzCacheRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RefreshAuthzCacheRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RefreshAuthzCacheRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RefreshAuthzCacheRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class RefreshAuthzCacheResponsePB : pb::IMessage<RefreshAuthzCacheResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<RefreshAuthzCacheResponsePB> _parser = new pb::MessageParser<RefreshAuthzCacheResponsePB>(() => new RefreshAuthzCacheResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RefreshAuthzCacheResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheResponsePB(RefreshAuthzCacheResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshAuthzCacheResponsePB Clone() {
      return new RefreshAuthzCacheResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RefreshAuthzCacheResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RefreshAuthzCacheResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RefreshAuthzCacheResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RemoveTabletServerRequest/Response: remove a tablet server from master's
  /// in-memory map and persisted catalog.
  /// </summary>
  public sealed partial class UnregisterTServerRequestPB : pb::IMessage<UnregisterTServerRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<UnregisterTServerRequestPB> _parser = new pb::MessageParser<UnregisterTServerRequestPB>(() => new UnregisterTServerRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnregisterTServerRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerRequestPB(UnregisterTServerRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      uuid_ = other.uuid_;
      forceUnregisterLiveTserver_ = other.forceUnregisterLiveTserver_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerRequestPB Clone() {
      return new UnregisterTServerRequestPB(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static string UuidDefaultValue = "";

    private string uuid_;
    /// <summary>
    /// The tserver UUID to be unregistered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "force_unregister_live_tserver" field.</summary>
    public const int ForceUnregisterLiveTserverFieldNumber = 2;
    private readonly static bool ForceUnregisterLiveTserverDefaultValue = false;

    private bool forceUnregisterLiveTserver_;
    /// <summary>
    /// Whether to return an error in case the tserver is not presumed to be dead,
    /// per --tserver_unresponsive_timeout_ms.
    /// Disable this by default to make sure the tserver has been brought down.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceUnregisterLiveTserver {
      get { if ((_hasBits0 & 1) != 0) { return forceUnregisterLiveTserver_; } else { return ForceUnregisterLiveTserverDefaultValue; } }
      set {
        _hasBits0 |= 1;
        forceUnregisterLiveTserver_ = value;
      }
    }
    /// <summary>Gets whether the "force_unregister_live_tserver" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceUnregisterLiveTserver {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "force_unregister_live_tserver" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceUnregisterLiveTserver() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnregisterTServerRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnregisterTServerRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (ForceUnregisterLiveTserver != other.ForceUnregisterLiveTserver) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (HasForceUnregisterLiveTserver) hash ^= ForceUnregisterLiveTserver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (HasForceUnregisterLiveTserver) {
        output.WriteRawTag(16);
        output.WriteBool(ForceUnregisterLiveTserver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (HasForceUnregisterLiveTserver) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnregisterTServerRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      if (other.HasForceUnregisterLiveTserver) {
        ForceUnregisterLiveTserver = other.ForceUnregisterLiveTserver;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            ForceUnregisterLiveTserver = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnregisterTServerResponsePB : pb::IMessage<UnregisterTServerResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<UnregisterTServerResponsePB> _parser = new pb::MessageParser<UnregisterTServerResponsePB>(() => new UnregisterTServerResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnregisterTServerResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Master.MasterReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerResponsePB(UnregisterTServerResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterTServerResponsePB Clone() {
      return new UnregisterTServerResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnregisterTServerResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnregisterTServerResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnregisterTServerResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Master.MasterErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
