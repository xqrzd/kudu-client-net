// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kudu/tserver/tserver.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Knet.Kudu.Client.Protobuf.Tserver {

  /// <summary>Holder for reflection information generated from kudu/tserver/tserver.proto</summary>
  public static partial class TserverReflection {

    #region Descriptor
    /// <summary>File descriptor for kudu/tserver/tserver.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TserverReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChprdWR1L3RzZXJ2ZXIvdHNlcnZlci5wcm90bxIMa3VkdS50c2VydmVyGhhr",
            "dWR1L2NvbW1vbi9jb21tb24ucHJvdG8aIGt1ZHUvY29tbW9uL3Jvd19vcGVy",
            "YXRpb25zLnByb3RvGh9rdWR1L2NvbW1vbi93aXJlX3Byb3RvY29sLnByb3Rv",
            "Gh1rdWR1L2NvbnNlbnN1cy9tZXRhZGF0YS5wcm90bxoZa3VkdS9zZWN1cml0",
            "eS90b2tlbi5wcm90bxoYa3VkdS90YWJsZXQvdGFibGV0LnByb3RvGhdrdWR1",
            "L3V0aWwvcGJfdXRpbC5wcm90byK4BQoTVGFibGV0U2VydmVyRXJyb3JQQhJD",
            "CgRjb2RlGAEgAigOMiYua3VkdS50c2VydmVyLlRhYmxldFNlcnZlckVycm9y",
            "UEIuQ29kZToNVU5LTk9XTl9FUlJPUhIhCgZzdGF0dXMYAiACKAsyES5rdWR1",
            "LkFwcFN0YXR1c1BCIrgECgRDb2RlEhEKDVVOS05PV05fRVJST1IQARISCg5J",
            "TlZBTElEX1NDSEVNQRACEhUKEUlOVkFMSURfUk9XX0JMT0NLEAMSFAoQSU5W",
            "QUxJRF9NVVRBVElPThAEEhUKEU1JU01BVENIRURfU0NIRU1BEAUSFAoQVEFC",
            "TEVUX05PVF9GT1VORBAGEhMKD1NDQU5ORVJfRVhQSVJFRBAHEhUKEUlOVkFM",
            "SURfU0NBTl9TUEVDEAgSEgoOSU5WQUxJRF9DT05GSUcQCRIZChVUQUJMRVRf",
            "QUxSRUFEWV9FWElTVFMQChIdChlUQUJMRVRfSEFTX0FfTkVXRVJfU0NIRU1B",
            "EAsSFgoSVEFCTEVUX05PVF9SVU5OSU5HEAwSFAoQSU5WQUxJRF9TTkFQU0hP",
            "VBANEhwKGElOVkFMSURfU0NBTl9DQUxMX1NFUV9JRBAOEhIKDk5PVF9USEVf",
            "TEVBREVSEA8SFQoRV1JPTkdfU0VSVkVSX1VVSUQQEBIOCgpDQVNfRkFJTEVE",
            "EBESFgoSQUxSRUFEWV9JTlBST0dSRVNTEBISDQoJVEhST1RUTEVEEBMSEQoN",
            "VEFCTEVUX0ZBSUxFRBAUEhIKDk5PVF9BVVRIT1JJWkVEEBUSFQoRVFhOX0lM",
            "TEVHQUxfU1RBVEUQFhIaChZUWE5fT1BfQUxSRUFEWV9BUFBMSUVEEBcSFAoQ",
            "VFhOX0xPQ0tFRF9BQk9SVBAYEhcKE1RYTl9MT0NLRURfUkVUUllfT1AQGSIP",
            "Cg1QaW5nUmVxdWVzdFBCIhAKDlBpbmdSZXNwb25zZVBCIqoCCg5Xcml0ZVJl",
            "cXVlc3RQQhIRCgl0YWJsZXRfaWQYASACKAwSHgoGc2NoZW1hGAIgASgLMg4u",
            "a3VkdS5TY2hlbWFQQhItCg5yb3dfb3BlcmF0aW9ucxgDIAEoCzIVLmt1ZHUu",
            "Um93T3BlcmF0aW9uc1BCElUKGWV4dGVybmFsX2NvbnNpc3RlbmN5X21vZGUY",
            "BCABKA4yHy5rdWR1LkV4dGVybmFsQ29uc2lzdGVuY3lNb2RlUEI6EUNMSUVO",
            "VF9QUk9QQUdBVEVEEhwKFHByb3BhZ2F0ZWRfdGltZXN0YW1wGAUgASgGEjEK",
            "C2F1dGh6X3Rva2VuGAYgASgLMhwua3VkdS5zZWN1cml0eS5TaWduZWRUb2tl",
            "blBCEg4KBnR4bl9pZBgHIAEoAyLhAQoPV3JpdGVSZXNwb25zZVBCEjAKBWVy",
            "cm9yGAEgASgLMiEua3VkdS50c2VydmVyLlRhYmxldFNlcnZlckVycm9yUEIS",
            "QwoOcGVyX3Jvd19lcnJvcnMYAiADKAsyKy5rdWR1LnRzZXJ2ZXIuV3JpdGVS",
            "ZXNwb25zZVBCLlBlclJvd0Vycm9yUEISEQoJdGltZXN0YW1wGAMgASgGGkQK",
            "DVBlclJvd0Vycm9yUEISEQoJcm93X2luZGV4GAEgAigFEiAKBWVycm9yGAIg",
            "AigLMhEua3VkdS5BcHBTdGF0dXNQQiI2ChRMaXN0VGFibGV0c1JlcXVlc3RQ",
            "QhIeChBuZWVkX3NjaGVtYV9pbmZvGAEgASgIOgR0cnVlIv8CChVMaXN0VGFi",
            "bGV0c1Jlc3BvbnNlUEISMAoFZXJyb3IYASABKAsyIS5rdWR1LnRzZXJ2ZXIu",
            "VGFibGV0U2VydmVyRXJyb3JQQhJQChFzdGF0dXNfYW5kX3NjaGVtYRgCIAMo",
            "CzI1Lmt1ZHUudHNlcnZlci5MaXN0VGFibGV0c1Jlc3BvbnNlUEIuU3RhdHVz",
            "QW5kU2NoZW1hUEIa4QEKEVN0YXR1c0FuZFNjaGVtYVBCEjIKDXRhYmxldF9z",
            "dGF0dXMYASACKAsyGy5rdWR1LnRhYmxldC5UYWJsZXRTdGF0dXNQQhIeCgZz",
            "Y2hlbWEYAiABKAsyDi5rdWR1LlNjaGVtYVBCEjEKEHBhcnRpdGlvbl9zY2hl",
            "bWEYAyABKAsyFy5rdWR1LlBhcnRpdGlvblNjaGVtYVBCEhYKDnNjaGVtYV92",
            "ZXJzaW9uGAQgASgNEi0KBHJvbGUYBSABKA4yHy5rdWR1LmNvbnNlbnN1cy5S",
            "YWZ0UGVlclBCLlJvbGUifgoWQ29sdW1uUmFuZ2VQcmVkaWNhdGVQQhIkCgZj",
            "b2x1bW4YASACKAsyFC5rdWR1LkNvbHVtblNjaGVtYVBCEhkKC2xvd2VyX2Jv",
            "dW5kGAIgASgMQgSItRgBEiMKFWluY2x1c2l2ZV91cHBlcl9ib3VuZBgDIAEo",
            "DEIEiLUYASJcChpDb2x1bW5SYW5nZVByZWRpY2F0ZUxpc3RQQhI+ChByYW5n",
            "ZV9wcmVkaWNhdGVzGAEgAygLMiQua3VkdS50c2VydmVyLkNvbHVtblJhbmdl",
            "UHJlZGljYXRlUEIi6QQKEE5ld1NjYW5SZXF1ZXN0UEISEQoJdGFibGV0X2lk",
            "GAEgAigMEg0KBWxpbWl0GAIgASgEEkkKG0RFUFJFQ0FURURfcmFuZ2VfcHJl",
            "ZGljYXRlcxgDIAMoCzIkLmt1ZHUudHNlcnZlci5Db2x1bW5SYW5nZVByZWRp",
            "Y2F0ZVBCEjIKEWNvbHVtbl9wcmVkaWNhdGVzGA0gAygLMhcua3VkdS5Db2x1",
            "bW5QcmVkaWNhdGVQQhIfChFzdGFydF9wcmltYXJ5X2tleRgIIAEoDEIEiLUY",
            "ARIeChBzdG9wX3ByaW1hcnlfa2V5GAkgASgMQgSItRgBEi8KEXByb2plY3Rl",
            "ZF9jb2x1bW5zGAQgAygLMhQua3VkdS5Db2x1bW5TY2hlbWFQQhIwCglyZWFk",
            "X21vZGUYBSABKA4yEC5rdWR1LlJlYWRNb2RlUEI6C1JFQURfTEFURVNUEhwK",
            "FHNuYXBfc3RhcnRfdGltZXN0YW1wGBAgASgGEhYKDnNuYXBfdGltZXN0YW1w",
            "GAYgASgGEhwKFHByb3BhZ2F0ZWRfdGltZXN0YW1wGAcgASgGEhoKDGNhY2hl",
            "X2Jsb2NrcxgKIAEoCDoEdHJ1ZRIwCgpvcmRlcl9tb2RlGAsgASgOMhEua3Vk",
            "dS5PcmRlck1vZGVQQjoJVU5PUkRFUkVEEh4KEGxhc3RfcHJpbWFyeV9rZXkY",
            "DCABKAxCBIi1GAESGwoQcm93X2Zvcm1hdF9mbGFncxgOIAEoBDoBMBIxCgth",
            "dXRoel90b2tlbhgPIAEoCzIcLmt1ZHUuc2VjdXJpdHkuU2lnbmVkVG9rZW5Q",
            "QiKjAQoNU2NhblJlcXVlc3RQQhISCgpzY2FubmVyX2lkGAEgASgMEjgKEG5l",
            "d19zY2FuX3JlcXVlc3QYAiABKAsyHi5rdWR1LnRzZXJ2ZXIuTmV3U2NhblJl",
            "cXVlc3RQQhITCgtjYWxsX3NlcV9pZBgDIAEoDRIYChBiYXRjaF9zaXplX2J5",
            "dGVzGAQgASgNEhUKDWNsb3NlX3NjYW5uZXIYBSABKAgi1AEKEVJlc291cmNl",
            "TWV0cmljc1BCEh4KFmNmaWxlX2NhY2hlX21pc3NfYnl0ZXMYASABKAMSHQoV",
            "Y2ZpbGVfY2FjaGVfaGl0X2J5dGVzGAIgASgDEhIKCmJ5dGVzX3JlYWQYAyAB",
            "KAMSHAoUcXVldWVfZHVyYXRpb25fbmFub3MYBCABKAMSHAoUdG90YWxfZHVy",
            "YXRpb25fbmFub3MYBSABKAMSFgoOY3B1X3VzZXJfbmFub3MYBiABKAMSGAoQ",
            "Y3B1X3N5c3RlbV9uYW5vcxgHIAEoAyLZAgoOU2NhblJlc3BvbnNlUEISMAoF",
            "ZXJyb3IYASABKAsyIS5rdWR1LnRzZXJ2ZXIuVGFibGV0U2VydmVyRXJyb3JQ",
            "QhISCgpzY2FubmVyX2lkGAIgASgMEhgKEGhhc19tb3JlX3Jlc3VsdHMYAyAB",
            "KAgSJQoEZGF0YRgEIAEoCzIXLmt1ZHUuUm93d2lzZVJvd0Jsb2NrUEISLwoN",
            "Y29sdW1uYXJfZGF0YRgFIAEoCzIYLmt1ZHUuQ29sdW1uYXJSb3dCbG9ja1BC",
            "EhYKDnNuYXBfdGltZXN0YW1wGAYgASgGEh4KEGxhc3RfcHJpbWFyeV9rZXkY",
            "ByABKAxCBIi1GAESOQoQcmVzb3VyY2VfbWV0cmljcxgIIAEoCzIfLmt1ZHUu",
            "dHNlcnZlci5SZXNvdXJjZU1ldHJpY3NQQhIcChRwcm9wYWdhdGVkX3RpbWVz",
            "dGFtcBgJIAEoBiIvChlTY2FubmVyS2VlcEFsaXZlUmVxdWVzdFBCEhIKCnNj",
            "YW5uZXJfaWQYASACKAwiTgoaU2Nhbm5lcktlZXBBbGl2ZVJlc3BvbnNlUEIS",
            "MAoFZXJyb3IYASABKAsyIS5rdWR1LnRzZXJ2ZXIuVGFibGV0U2VydmVyRXJy",
            "b3JQQiLnAQoWU3BsaXRLZXlSYW5nZVJlcXVlc3RQQhIRCgl0YWJsZXRfaWQY",
            "ASACKAwSHwoRc3RhcnRfcHJpbWFyeV9rZXkYAiABKAxCBIi1GAESHgoQc3Rv",
            "cF9wcmltYXJ5X2tleRgDIAEoDEIEiLUYARIfChd0YXJnZXRfY2h1bmtfc2l6",
            "ZV9ieXRlcxgEIAEoBBIlCgdjb2x1bW5zGAUgAygLMhQua3VkdS5Db2x1bW5T",
            "Y2hlbWFQQhIxCgthdXRoel90b2tlbhgGIAEoCzIcLmt1ZHUuc2VjdXJpdHku",
            "U2lnbmVkVG9rZW5QQiJtChdTcGxpdEtleVJhbmdlUmVzcG9uc2VQQhIwCgVl",
            "cnJvchgBIAEoCzIhLmt1ZHUudHNlcnZlci5UYWJsZXRTZXJ2ZXJFcnJvclBC",
            "EiAKBnJhbmdlcxgCIAMoCzIQLmt1ZHUuS2V5UmFuZ2VQQipZCg5Sb3dGb3Jt",
            "YXRGbGFncxIMCghOT19GTEFHUxAAEiQKIFBBRF9VTklYX1RJTUVfTUlDUk9T",
            "X1RPXzE2X0JZVEVTEAESEwoPQ09MVU1OQVJfTEFZT1VUEAIqzgEKFFRhYmxl",
            "dFNlcnZlckZlYXR1cmVzEhMKD1VOS05PV05fRkVBVFVSRRAAEhUKEUNPTFVN",
            "Tl9QUkVESUNBVEVTEAESIwofUEFEX1VOSVhUSU1FX01JQ1JPU19UT18xNl9C",
            "WVRFUxACEg0KCVFVSUVTQ0lORxADEhoKFkJMT09NX0ZJTFRFUl9QUkVESUNB",
            "VEUQBBIbChdDT0xVTU5BUl9MQVlPVVRfRkVBVFVSRRAFEh0KGUJMT09NX0ZJ",
            "TFRFUl9QUkVESUNBVEVfVjIQBkI9ChdvcmcuYXBhY2hlLmt1ZHUudHNlcnZl",
            "cqoCIUtuZXQuS3VkdS5DbGllbnQuUHJvdG9idWYuVHNlcnZlcg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Knet.Kudu.Client.Protobuf.CommonReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.RowOperationsReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.WireProtocolReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Consensus.MetadataReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Security.TokenReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.Tablet.TabletReflection.Descriptor, global::Knet.Kudu.Client.Protobuf.PbUtilReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Knet.Kudu.Client.Protobuf.Tserver.RowFormatFlags), typeof(global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerFeatures), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB), global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Parser, new[]{ "Code", "Status" }, null, new[]{ typeof(global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.PingRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.PingRequestPB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.PingResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.PingResponsePB.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.WriteRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.WriteRequestPB.Parser, new[]{ "TabletId", "Schema", "RowOperations", "ExternalConsistencyMode", "PropagatedTimestamp", "AuthzToken", "TxnId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Parser, new[]{ "Error", "PerRowErrors", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB), global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB.Parser, new[]{ "RowIndex", "Error" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsRequestPB.Parser, new[]{ "NeedSchemaInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Parser, new[]{ "Error", "StatusAndSchema" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB), global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB.Parser, new[]{ "TabletStatus", "Schema", "PartitionSchema", "SchemaVersion", "Role" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB), global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB.Parser, new[]{ "Column", "LowerBound", "InclusiveUpperBound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicateListPB), global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicateListPB.Parser, new[]{ "RangePredicates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB.Parser, new[]{ "TabletId", "Limit", "DEPRECATEDRangePredicates", "ColumnPredicates", "StartPrimaryKey", "StopPrimaryKey", "ProjectedColumns", "ReadMode", "SnapStartTimestamp", "SnapTimestamp", "PropagatedTimestamp", "CacheBlocks", "OrderMode", "LastPrimaryKey", "RowFormatFlags", "AuthzToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ScanRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.ScanRequestPB.Parser, new[]{ "ScannerId", "NewScanRequest", "CallSeqId", "BatchSizeBytes", "CloseScanner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB), global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB.Parser, new[]{ "CfileCacheMissBytes", "CfileCacheHitBytes", "BytesRead", "QueueDurationNanos", "TotalDurationNanos", "CpuUserNanos", "CpuSystemNanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ScanResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.ScanResponsePB.Parser, new[]{ "Error", "ScannerId", "HasMoreResults", "Data", "ColumnarData", "SnapTimestamp", "LastPrimaryKey", "ResourceMetrics", "PropagatedTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ScannerKeepAliveRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.ScannerKeepAliveRequestPB.Parser, new[]{ "ScannerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.ScannerKeepAliveResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.ScannerKeepAliveResponsePB.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.SplitKeyRangeRequestPB), global::Knet.Kudu.Client.Protobuf.Tserver.SplitKeyRangeRequestPB.Parser, new[]{ "TabletId", "StartPrimaryKey", "StopPrimaryKey", "TargetChunkSizeBytes", "Columns", "AuthzToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Knet.Kudu.Client.Protobuf.Tserver.SplitKeyRangeResponsePB), global::Knet.Kudu.Client.Protobuf.Tserver.SplitKeyRangeResponsePB.Parser, new[]{ "Error", "Ranges" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RowFormatFlags {
    [pbr::OriginalName("NO_FLAGS")] NoFlags = 0,
    [pbr::OriginalName("PAD_UNIX_TIME_MICROS_TO_16_BYTES")] PadUnixTimeMicrosTo16Bytes = 1,
    /// <summary>
    /// Return a ColumnarRowBlockPB instead of RowwiseRowBlockPB.
    /// Incompatible with PAD_UNIX_TIME_MICROS_TO_16_BYTES.
    /// </summary>
    [pbr::OriginalName("COLUMNAR_LAYOUT")] ColumnarLayout = 2,
  }

  public enum TabletServerFeatures {
    [pbr::OriginalName("UNKNOWN_FEATURE")] UnknownFeature = 0,
    [pbr::OriginalName("COLUMN_PREDICATES")] ColumnPredicates = 1,
    /// <summary>
    /// Whether the server supports padding UNIXTIME_MICROS slots to 16 bytes.
    /// </summary>
    [pbr::OriginalName("PAD_UNIXTIME_MICROS_TO_16_BYTES")] PadUnixtimeMicrosTo16Bytes = 2,
    [pbr::OriginalName("QUIESCING")] Quiescing = 3,
    /// <summary>
    /// Deprecated. See note below for BLOOM_FILTER_PREDICATE_V2.
    /// </summary>
    [pbr::OriginalName("BLOOM_FILTER_PREDICATE")] BloomFilterPredicate = 4,
    /// <summary>
    /// Whether the server supports the COLUMNAR_LAYOUT format flag.
    /// </summary>
    [pbr::OriginalName("COLUMNAR_LAYOUT_FEATURE")] ColumnarLayoutFeature = 5,
    /// <summary>
    /// Update to implementation of Fast hash for Bloom filter predicate leads
    /// to incorrect results if incompatible client and server versions are used.
    /// </summary>
    [pbr::OriginalName("BLOOM_FILTER_PREDICATE_V2")] BloomFilterPredicateV2 = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Tablet-server specific errors use this protobuf.
  /// </summary>
  public sealed partial class TabletServerErrorPB : pb::IMessage<TabletServerErrorPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<TabletServerErrorPB> _parser = new pb::MessageParser<TabletServerErrorPB>(() => new TabletServerErrorPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TabletServerErrorPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletServerErrorPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletServerErrorPB(TabletServerErrorPB other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TabletServerErrorPB Clone() {
      return new TabletServerErrorPB(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code CodeDefaultValue = global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code.UnknownError;

    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code code_;
    /// <summary>
    /// The error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.AppStatusPB status_;
    /// <summary>
    /// The Status object for the error. This will include a textual
    /// message that may be more useful to present in log messages, etc,
    /// though its error code is less specific.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.AppStatusPB Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TabletServerErrorPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TabletServerErrorPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TabletServerErrorPB other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TabletServerErrorPB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// An error which has no more specific error code.
        /// The code and message in 'status' may reveal more details.
        ///
        /// RPCs should avoid returning this, since callers will not be
        /// able to easily parse the error.
        /// </summary>
        [pbr::OriginalName("UNKNOWN_ERROR")] UnknownError = 1,
        /// <summary>
        /// The schema provided for a request was not well-formed.
        /// </summary>
        [pbr::OriginalName("INVALID_SCHEMA")] InvalidSchema = 2,
        /// <summary>
        /// The row data provided for a request was not well-formed.
        /// </summary>
        [pbr::OriginalName("INVALID_ROW_BLOCK")] InvalidRowBlock = 3,
        /// <summary>
        /// The mutations or mutation keys provided for a request were
        /// not well formed.
        /// </summary>
        [pbr::OriginalName("INVALID_MUTATION")] InvalidMutation = 4,
        /// <summary>
        /// The schema provided for a request didn't match the actual
        /// schema of the tablet.
        /// </summary>
        [pbr::OriginalName("MISMATCHED_SCHEMA")] MismatchedSchema = 5,
        /// <summary>
        /// The requested tablet_id is not currently hosted on this server.
        /// </summary>
        [pbr::OriginalName("TABLET_NOT_FOUND")] TabletNotFound = 6,
        /// <summary>
        /// A request was made against a scanner ID that was either never
        /// created or has expired.
        /// </summary>
        [pbr::OriginalName("SCANNER_EXPIRED")] ScannerExpired = 7,
        /// <summary>
        /// An invalid scan was specified. Examples of invalid scan requests include
        /// invalid or unimplemented combinations of scan options and incorrect
        /// sizes for values passed as predicates.
        /// </summary>
        [pbr::OriginalName("INVALID_SCAN_SPEC")] InvalidScanSpec = 8,
        /// <summary>
        /// The provided configuration was not well-formed and/or
        /// had a sequence number that was below the current config.
        /// </summary>
        [pbr::OriginalName("INVALID_CONFIG")] InvalidConfig = 9,
        /// <summary>
        /// On a create tablet request, signals that the tablet already exists.
        /// </summary>
        [pbr::OriginalName("TABLET_ALREADY_EXISTS")] TabletAlreadyExists = 10,
        /// <summary>
        /// If the tablet has a newer schema than the requested one the "alter"
        /// request will be rejected with this error.
        /// </summary>
        [pbr::OriginalName("TABLET_HAS_A_NEWER_SCHEMA")] TabletHasANewerSchema = 11,
        /// <summary>
        /// The tablet is hosted on this server, but not in RUNNING state.
        /// </summary>
        [pbr::OriginalName("TABLET_NOT_RUNNING")] TabletNotRunning = 12,
        /// <summary>
        /// Client requested a snapshot read but the snapshot was invalid. The
        /// client may be able to respond to this error by choosing a different
        /// start or end timestamp for the snapshot.
        /// </summary>
        [pbr::OriginalName("INVALID_SNAPSHOT")] InvalidSnapshot = 13,
        /// <summary>
        /// An invalid scan call sequence ID was specified.
        /// </summary>
        [pbr::OriginalName("INVALID_SCAN_CALL_SEQ_ID")] InvalidScanCallSeqId = 14,
        /// <summary>
        /// This tserver is not the leader of the consensus configuration.
        /// </summary>
        [pbr::OriginalName("NOT_THE_LEADER")] NotTheLeader = 15,
        /// <summary>
        /// The destination UUID in the request does not match this server.
        /// </summary>
        [pbr::OriginalName("WRONG_SERVER_UUID")] WrongServerUuid = 16,
        /// <summary>
        /// The compare-and-swap specified by an atomic RPC operation failed.
        /// </summary>
        [pbr::OriginalName("CAS_FAILED")] CasFailed = 17,
        /// <summary>
        /// The requested operation is already inprogress, e.g. TabletCopy.
        /// </summary>
        [pbr::OriginalName("ALREADY_INPROGRESS")] AlreadyInprogress = 18,
        /// <summary>
        /// The request is throttled.
        /// </summary>
        [pbr::OriginalName("THROTTLED")] Throttled = 19,
        /// <summary>
        /// The tablet needs to be evicted and reassigned.
        /// </summary>
        [pbr::OriginalName("TABLET_FAILED")] TabletFailed = 20,
        /// <summary>
        /// The request is disallowed for the given user.
        /// </summary>
        [pbr::OriginalName("NOT_AUTHORIZED")] NotAuthorized = 21,
        /// <summary>
        /// The requested transaction is not in the appropriate state.
        /// </summary>
        [pbr::OriginalName("TXN_ILLEGAL_STATE")] TxnIllegalState = 22,
        /// <summary>
        /// The requested transaction participant op was already applied.
        /// </summary>
        [pbr::OriginalName("TXN_OP_ALREADY_APPLIED")] TxnOpAlreadyApplied = 23,
        /// <summary>
        /// The requested transaction needs to be aborted for deadlock prevention.
        /// </summary>
        [pbr::OriginalName("TXN_LOCKED_ABORT")] TxnLockedAbort = 24,
        /// <summary>
        /// The requested transaction participant op or write op needs to be
        /// retried, because the required lock is held by another transaction.
        /// </summary>
        [pbr::OriginalName("TXN_LOCKED_RETRY_OP")] TxnLockedRetryOp = 25,
      }

    }
    #endregion

  }

  public sealed partial class PingRequestPB : pb::IMessage<PingRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PingRequestPB> _parser = new pb::MessageParser<PingRequestPB>(() => new PingRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PingRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB(PingRequestPB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequestPB Clone() {
      return new PingRequestPB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PingRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PingRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PingRequestPB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  public sealed partial class PingResponsePB : pb::IMessage<PingResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<PingResponsePB> _parser = new pb::MessageParser<PingResponsePB>(() => new PingResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PingResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB(PingResponsePB other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingResponsePB Clone() {
      return new PingResponsePB(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PingResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PingResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PingResponsePB other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// A batched set of insert/mutate requests.
  /// </summary>
  public sealed partial class WriteRequestPB : pb::IMessage<WriteRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<WriteRequestPB> _parser = new pb::MessageParser<WriteRequestPB>(() => new WriteRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WriteRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteRequestPB(WriteRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      rowOperations_ = other.rowOperations_ != null ? other.rowOperations_.Clone() : null;
      externalConsistencyMode_ = other.externalConsistencyMode_;
      propagatedTimestamp_ = other.propagatedTimestamp_;
      authzToken_ = other.authzToken_ != null ? other.authzToken_.Clone() : null;
      txnId_ = other.txnId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteRequestPB Clone() {
      return new WriteRequestPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
    /// <summary>
    /// The schema as seen by the client. This may be out-of-date, in which case
    /// it will be projected to the current schema automatically, with defaults/NULLs
    /// being filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "row_operations" field.</summary>
    public const int RowOperationsFieldNumber = 3;
    private global::Knet.Kudu.Client.Protobuf.RowOperationsPB rowOperations_;
    /// <summary>
    /// Operations to perform (insert/update/delete)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.RowOperationsPB RowOperations {
      get { return rowOperations_; }
      set {
        rowOperations_ = value;
      }
    }

    /// <summary>Field number for the "external_consistency_mode" field.</summary>
    public const int ExternalConsistencyModeFieldNumber = 4;
    private readonly static global::Knet.Kudu.Client.Protobuf.ExternalConsistencyModePB ExternalConsistencyModeDefaultValue = global::Knet.Kudu.Client.Protobuf.ExternalConsistencyModePB.ClientPropagated;

    private global::Knet.Kudu.Client.Protobuf.ExternalConsistencyModePB externalConsistencyMode_;
    /// <summary>
    /// The required consistency mode for this write.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ExternalConsistencyModePB ExternalConsistencyMode {
      get { if ((_hasBits0 & 1) != 0) { return externalConsistencyMode_; } else { return ExternalConsistencyModeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        externalConsistencyMode_ = value;
      }
    }
    /// <summary>Gets whether the "external_consistency_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExternalConsistencyMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "external_consistency_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExternalConsistencyMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "propagated_timestamp" field.</summary>
    public const int PropagatedTimestampFieldNumber = 5;
    private readonly static ulong PropagatedTimestampDefaultValue = 0UL;

    private ulong propagatedTimestamp_;
    /// <summary>
    /// A timestamp obtained by the client from a previous request.
    /// TODO crypto sign this and propagate the signature along with
    /// the timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PropagatedTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return propagatedTimestamp_; } else { return PropagatedTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        propagatedTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "propagated_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPropagatedTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "propagated_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPropagatedTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "authz_token" field.</summary>
    public const int AuthzTokenFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB authzToken_;
    /// <summary>
    /// An authorization token with which to authorize this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB AuthzToken {
      get { return authzToken_; }
      set {
        authzToken_ = value;
      }
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 7;
    private readonly static long TxnIdDefaultValue = 0L;

    private long txnId_;
    /// <summary>
    /// The transaction ID associated with this write request, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TxnId {
      get { if ((_hasBits0 & 4) != 0) { return txnId_; } else { return TxnIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        txnId_ = value;
      }
    }
    /// <summary>Gets whether the "txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTxnId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTxnId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WriteRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WriteRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(RowOperations, other.RowOperations)) return false;
      if (ExternalConsistencyMode != other.ExternalConsistencyMode) return false;
      if (PropagatedTimestamp != other.PropagatedTimestamp) return false;
      if (!object.Equals(AuthzToken, other.AuthzToken)) return false;
      if (TxnId != other.TxnId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (rowOperations_ != null) hash ^= RowOperations.GetHashCode();
      if (HasExternalConsistencyMode) hash ^= ExternalConsistencyMode.GetHashCode();
      if (HasPropagatedTimestamp) hash ^= PropagatedTimestamp.GetHashCode();
      if (authzToken_ != null) hash ^= AuthzToken.GetHashCode();
      if (HasTxnId) hash ^= TxnId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (schema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (rowOperations_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RowOperations);
      }
      if (HasExternalConsistencyMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ExternalConsistencyMode);
      }
      if (HasPropagatedTimestamp) {
        output.WriteRawTag(41);
        output.WriteFixed64(PropagatedTimestamp);
      }
      if (authzToken_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AuthzToken);
      }
      if (HasTxnId) {
        output.WriteRawTag(56);
        output.WriteInt64(TxnId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (rowOperations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowOperations);
      }
      if (HasExternalConsistencyMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExternalConsistencyMode);
      }
      if (HasPropagatedTimestamp) {
        size += 1 + 8;
      }
      if (authzToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthzToken);
      }
      if (HasTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TxnId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WriteRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.rowOperations_ != null) {
        if (rowOperations_ == null) {
          RowOperations = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
        }
        RowOperations.MergeFrom(other.RowOperations);
      }
      if (other.HasExternalConsistencyMode) {
        ExternalConsistencyMode = other.ExternalConsistencyMode;
      }
      if (other.HasPropagatedTimestamp) {
        PropagatedTimestamp = other.PropagatedTimestamp;
      }
      if (other.authzToken_ != null) {
        if (authzToken_ == null) {
          AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
        }
        AuthzToken.MergeFrom(other.AuthzToken);
      }
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 18: {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 26: {
            if (rowOperations_ == null) {
              RowOperations = new global::Knet.Kudu.Client.Protobuf.RowOperationsPB();
            }
            input.ReadMessage(RowOperations);
            break;
          }
          case 32: {
            ExternalConsistencyMode = (global::Knet.Kudu.Client.Protobuf.ExternalConsistencyModePB) input.ReadEnum();
            break;
          }
          case 41: {
            PropagatedTimestamp = input.ReadFixed64();
            break;
          }
          case 50: {
            if (authzToken_ == null) {
              AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
            }
            input.ReadMessage(AuthzToken);
            break;
          }
          case 56: {
            TxnId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WriteResponsePB : pb::IMessage<WriteResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<WriteResponsePB> _parser = new pb::MessageParser<WriteResponsePB>(() => new WriteResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WriteResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteResponsePB(WriteResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      perRowErrors_ = other.perRowErrors_.Clone();
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WriteResponsePB Clone() {
      return new WriteResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB error_;
    /// <summary>
    /// If the entire WriteResponsePB request failed, the error status that
    /// caused the failure. This type of error is triggered for
    /// cases such as the tablet not being on this server, or the
    /// schema not matching. If any error specific to a given row
    /// occurs, this error will be recorded in per_row_errors below,
    /// even if all rows failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "per_row_errors" field.</summary>
    public const int PerRowErrorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB> _repeated_perRowErrors_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB> perRowErrors_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Types.PerRowErrorPB> PerRowErrors {
      get { return perRowErrors_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    /// <summary>
    /// The timestamp chosen by the server for this write.
    /// TODO KUDU-611 propagate timestamps with server signature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WriteResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WriteResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!perRowErrors_.Equals(other.perRowErrors_)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= perRowErrors_.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      perRowErrors_.WriteTo(ref output, _repeated_perRowErrors_codec);
      if (HasTimestamp) {
        output.WriteRawTag(25);
        output.WriteFixed64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += perRowErrors_.CalculateSize(_repeated_perRowErrors_codec);
      if (HasTimestamp) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WriteResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      perRowErrors_.Add(other.perRowErrors_);
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            perRowErrors_.AddEntriesFrom(ref input, _repeated_perRowErrors_codec);
            break;
          }
          case 25: {
            Timestamp = input.ReadFixed64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WriteResponsePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// If errors occurred with particular row operations, then the errors
      /// for those operations will be passed back in 'per_row_errors'.
      /// </summary>
      public sealed partial class PerRowErrorPB : pb::IMessage<PerRowErrorPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<PerRowErrorPB> _parser = new pb::MessageParser<PerRowErrorPB>(() => new PerRowErrorPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PerRowErrorPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tserver.WriteResponsePB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PerRowErrorPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PerRowErrorPB(PerRowErrorPB other) : this() {
          _hasBits0 = other._hasBits0;
          rowIndex_ = other.rowIndex_;
          error_ = other.error_ != null ? other.error_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PerRowErrorPB Clone() {
          return new PerRowErrorPB(this);
        }

        /// <summary>Field number for the "row_index" field.</summary>
        public const int RowIndexFieldNumber = 1;
        private readonly static int RowIndexDefaultValue = 0;

        private int rowIndex_;
        /// <summary>
        /// The index of the row in the incoming batch.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RowIndex {
          get { if ((_hasBits0 & 1) != 0) { return rowIndex_; } else { return RowIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            rowIndex_ = value;
          }
        }
        /// <summary>Gets whether the "row_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRowIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "row_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRowIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 2;
        private global::Knet.Kudu.Client.Protobuf.AppStatusPB error_;
        /// <summary>
        /// The error that occurred.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.AppStatusPB Error {
          get { return error_; }
          set {
            error_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PerRowErrorPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PerRowErrorPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RowIndex != other.RowIndex) return false;
          if (!object.Equals(Error, other.Error)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasRowIndex) hash ^= RowIndex.GetHashCode();
          if (error_ != null) hash ^= Error.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasRowIndex) {
            output.WriteRawTag(8);
            output.WriteInt32(RowIndex);
          }
          if (error_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasRowIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowIndex);
          }
          if (error_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PerRowErrorPB other) {
          if (other == null) {
            return;
          }
          if (other.HasRowIndex) {
            RowIndex = other.RowIndex;
          }
          if (other.error_ != null) {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
            }
            Error.MergeFrom(other.Error);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RowIndex = input.ReadInt32();
                break;
              }
              case 18: {
                if (error_ == null) {
                  Error = new global::Knet.Kudu.Client.Protobuf.AppStatusPB();
                }
                input.ReadMessage(Error);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// A list tablets request
  /// </summary>
  public sealed partial class ListTabletsRequestPB : pb::IMessage<ListTabletsRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTabletsRequestPB> _parser = new pb::MessageParser<ListTabletsRequestPB>(() => new ListTabletsRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTabletsRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsRequestPB(ListTabletsRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      needSchemaInfo_ = other.needSchemaInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsRequestPB Clone() {
      return new ListTabletsRequestPB(this);
    }

    /// <summary>Field number for the "need_schema_info" field.</summary>
    public const int NeedSchemaInfoFieldNumber = 1;
    private readonly static bool NeedSchemaInfoDefaultValue = true;

    private bool needSchemaInfo_;
    /// <summary>
    /// Whether the server should include schema information in the response.
    /// These fields can be relatively large, so not including it can make this call
    /// less heavy-weight.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedSchemaInfo {
      get { if ((_hasBits0 & 1) != 0) { return needSchemaInfo_; } else { return NeedSchemaInfoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        needSchemaInfo_ = value;
      }
    }
    /// <summary>Gets whether the "need_schema_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedSchemaInfo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "need_schema_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedSchemaInfo() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTabletsRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTabletsRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NeedSchemaInfo != other.NeedSchemaInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNeedSchemaInfo) hash ^= NeedSchemaInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNeedSchemaInfo) {
        output.WriteRawTag(8);
        output.WriteBool(NeedSchemaInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNeedSchemaInfo) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTabletsRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasNeedSchemaInfo) {
        NeedSchemaInfo = other.NeedSchemaInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NeedSchemaInfo = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A list tablets response
  /// </summary>
  public sealed partial class ListTabletsResponsePB : pb::IMessage<ListTabletsResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ListTabletsResponsePB> _parser = new pb::MessageParser<ListTabletsResponsePB>(() => new ListTabletsResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTabletsResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsResponsePB(ListTabletsResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      statusAndSchema_ = other.statusAndSchema_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTabletsResponsePB Clone() {
      return new ListTabletsResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "status_and_schema" field.</summary>
    public const int StatusAndSchemaFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB> _repeated_statusAndSchema_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB> statusAndSchema_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Types.StatusAndSchemaPB> StatusAndSchema {
      get { return statusAndSchema_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTabletsResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTabletsResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!statusAndSchema_.Equals(other.statusAndSchema_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= statusAndSchema_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      statusAndSchema_.WriteTo(ref output, _repeated_statusAndSchema_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += statusAndSchema_.CalculateSize(_repeated_statusAndSchema_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTabletsResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      statusAndSchema_.Add(other.statusAndSchema_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            statusAndSchema_.AddEntriesFrom(ref input, _repeated_statusAndSchema_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListTabletsResponsePB message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class StatusAndSchemaPB : pb::IMessage<StatusAndSchemaPB>
          , pb::IBufferMessage
      {
        private static readonly pb::MessageParser<StatusAndSchemaPB> _parser = new pb::MessageParser<StatusAndSchemaPB>(() => new StatusAndSchemaPB());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<StatusAndSchemaPB> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Knet.Kudu.Client.Protobuf.Tserver.ListTabletsResponsePB.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatusAndSchemaPB() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatusAndSchemaPB(StatusAndSchemaPB other) : this() {
          _hasBits0 = other._hasBits0;
          tabletStatus_ = other.tabletStatus_ != null ? other.tabletStatus_.Clone() : null;
          schema_ = other.schema_ != null ? other.schema_.Clone() : null;
          partitionSchema_ = other.partitionSchema_ != null ? other.partitionSchema_.Clone() : null;
          schemaVersion_ = other.schemaVersion_;
          role_ = other.role_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatusAndSchemaPB Clone() {
          return new StatusAndSchemaPB(this);
        }

        /// <summary>Field number for the "tablet_status" field.</summary>
        public const int TabletStatusFieldNumber = 1;
        private global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB tabletStatus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB TabletStatus {
          get { return tabletStatus_; }
          set {
            tabletStatus_ = value;
          }
        }

        /// <summary>Field number for the "schema" field.</summary>
        public const int SchemaFieldNumber = 2;
        private global::Knet.Kudu.Client.Protobuf.SchemaPB schema_;
        /// <summary>
        /// 'schema' and 'partition_schema' will only be included if the original request
        /// set 'need_schema_info'.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.SchemaPB Schema {
          get { return schema_; }
          set {
            schema_ = value;
          }
        }

        /// <summary>Field number for the "partition_schema" field.</summary>
        public const int PartitionSchemaFieldNumber = 3;
        private global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB partitionSchema_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB PartitionSchema {
          get { return partitionSchema_; }
          set {
            partitionSchema_ = value;
          }
        }

        /// <summary>Field number for the "schema_version" field.</summary>
        public const int SchemaVersionFieldNumber = 4;
        private readonly static uint SchemaVersionDefaultValue = 0;

        private uint schemaVersion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SchemaVersion {
          get { if ((_hasBits0 & 1) != 0) { return schemaVersion_; } else { return SchemaVersionDefaultValue; } }
          set {
            _hasBits0 |= 1;
            schemaVersion_ = value;
          }
        }
        /// <summary>Gets whether the "schema_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSchemaVersion {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "schema_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSchemaVersion() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "role" field.</summary>
        public const int RoleFieldNumber = 5;
        private readonly static global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role RoleDefaultValue = global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role.UnknownRole;

        private global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role role_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role Role {
          get { if ((_hasBits0 & 2) != 0) { return role_; } else { return RoleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            role_ = value;
          }
        }
        /// <summary>Gets whether the "role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRole {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRole() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as StatusAndSchemaPB);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(StatusAndSchemaPB other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TabletStatus, other.TabletStatus)) return false;
          if (!object.Equals(Schema, other.Schema)) return false;
          if (!object.Equals(PartitionSchema, other.PartitionSchema)) return false;
          if (SchemaVersion != other.SchemaVersion) return false;
          if (Role != other.Role) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (tabletStatus_ != null) hash ^= TabletStatus.GetHashCode();
          if (schema_ != null) hash ^= Schema.GetHashCode();
          if (partitionSchema_ != null) hash ^= PartitionSchema.GetHashCode();
          if (HasSchemaVersion) hash ^= SchemaVersion.GetHashCode();
          if (HasRole) hash ^= Role.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
          output.WriteRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (tabletStatus_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TabletStatus);
          }
          if (schema_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Schema);
          }
          if (partitionSchema_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PartitionSchema);
          }
          if (HasSchemaVersion) {
            output.WriteRawTag(32);
            output.WriteUInt32(SchemaVersion);
          }
          if (HasRole) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Role);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (tabletStatus_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TabletStatus);
          }
          if (schema_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
          }
          if (partitionSchema_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionSchema);
          }
          if (HasSchemaVersion) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SchemaVersion);
          }
          if (HasRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(StatusAndSchemaPB other) {
          if (other == null) {
            return;
          }
          if (other.tabletStatus_ != null) {
            if (tabletStatus_ == null) {
              TabletStatus = new global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB();
            }
            TabletStatus.MergeFrom(other.TabletStatus);
          }
          if (other.schema_ != null) {
            if (schema_ == null) {
              Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
            }
            Schema.MergeFrom(other.Schema);
          }
          if (other.partitionSchema_ != null) {
            if (partitionSchema_ == null) {
              PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
            }
            PartitionSchema.MergeFrom(other.PartitionSchema);
          }
          if (other.HasSchemaVersion) {
            SchemaVersion = other.SchemaVersion;
          }
          if (other.HasRole) {
            Role = other.Role;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
          input.ReadRawMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (tabletStatus_ == null) {
                  TabletStatus = new global::Knet.Kudu.Client.Protobuf.Tablet.TabletStatusPB();
                }
                input.ReadMessage(TabletStatus);
                break;
              }
              case 18: {
                if (schema_ == null) {
                  Schema = new global::Knet.Kudu.Client.Protobuf.SchemaPB();
                }
                input.ReadMessage(Schema);
                break;
              }
              case 26: {
                if (partitionSchema_ == null) {
                  PartitionSchema = new global::Knet.Kudu.Client.Protobuf.PartitionSchemaPB();
                }
                input.ReadMessage(PartitionSchema);
                break;
              }
              case 32: {
                SchemaVersion = input.ReadUInt32();
                break;
              }
              case 40: {
                Role = (global::Knet.Kudu.Client.Protobuf.Consensus.RaftPeerPB.Types.Role) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// DEPRECATED: Use ColumnPredicatePB
  ///
  /// A range predicate on one of the columns in the underlying
  /// data.
  /// </summary>
  public sealed partial class ColumnRangePredicatePB : pb::IMessage<ColumnRangePredicatePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ColumnRangePredicatePB> _parser = new pb::MessageParser<ColumnRangePredicatePB>(() => new ColumnRangePredicatePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnRangePredicatePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicatePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicatePB(ColumnRangePredicatePB other) : this() {
      column_ = other.column_ != null ? other.column_.Clone() : null;
      lowerBound_ = other.lowerBound_;
      inclusiveUpperBound_ = other.inclusiveUpperBound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicatePB Clone() {
      return new ColumnRangePredicatePB(this);
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB column_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    /// <summary>Field number for the "lower_bound" field.</summary>
    public const int LowerBoundFieldNumber = 2;
    private readonly static pb::ByteString LowerBoundDefaultValue = pb::ByteString.Empty;

    private pb::ByteString lowerBound_;
    /// <summary>
    /// These bounds should be encoded as follows:
    /// - STRING values: simply the exact string value for the bound.
    /// - other type: the canonical x86 in-memory representation -- eg for
    ///   uint32s, a little-endian value.
    ///
    /// Note that this predicate type should not be used for NULL data --
    /// NULL is defined to neither be greater than or less than other values
    /// for the comparison operator. We will eventually add a special
    /// predicate type for null-ness.
    ///
    /// Both bounds are inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LowerBound {
      get { return lowerBound_ ?? LowerBoundDefaultValue; }
      set {
        lowerBound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lower_bound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowerBound {
      get { return lowerBound_ != null; }
    }
    /// <summary>Clears the value of the "lower_bound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowerBound() {
      lowerBound_ = null;
    }

    /// <summary>Field number for the "inclusive_upper_bound" field.</summary>
    public const int InclusiveUpperBoundFieldNumber = 3;
    private readonly static pb::ByteString InclusiveUpperBoundDefaultValue = pb::ByteString.Empty;

    private pb::ByteString inclusiveUpperBound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString InclusiveUpperBound {
      get { return inclusiveUpperBound_ ?? InclusiveUpperBoundDefaultValue; }
      set {
        inclusiveUpperBound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inclusive_upper_bound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInclusiveUpperBound {
      get { return inclusiveUpperBound_ != null; }
    }
    /// <summary>Clears the value of the "inclusive_upper_bound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInclusiveUpperBound() {
      inclusiveUpperBound_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnRangePredicatePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnRangePredicatePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Column, other.Column)) return false;
      if (LowerBound != other.LowerBound) return false;
      if (InclusiveUpperBound != other.InclusiveUpperBound) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (column_ != null) hash ^= Column.GetHashCode();
      if (HasLowerBound) hash ^= LowerBound.GetHashCode();
      if (HasInclusiveUpperBound) hash ^= InclusiveUpperBound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (column_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Column);
      }
      if (HasLowerBound) {
        output.WriteRawTag(18);
        output.WriteBytes(LowerBound);
      }
      if (HasInclusiveUpperBound) {
        output.WriteRawTag(26);
        output.WriteBytes(InclusiveUpperBound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (column_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Column);
      }
      if (HasLowerBound) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LowerBound);
      }
      if (HasInclusiveUpperBound) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(InclusiveUpperBound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnRangePredicatePB other) {
      if (other == null) {
        return;
      }
      if (other.column_ != null) {
        if (column_ == null) {
          Column = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB();
        }
        Column.MergeFrom(other.Column);
      }
      if (other.HasLowerBound) {
        LowerBound = other.LowerBound;
      }
      if (other.HasInclusiveUpperBound) {
        InclusiveUpperBound = other.InclusiveUpperBound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (column_ == null) {
              Column = new global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB();
            }
            input.ReadMessage(Column);
            break;
          }
          case 18: {
            LowerBound = input.ReadBytes();
            break;
          }
          case 26: {
            InclusiveUpperBound = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List of predicates used by the Java client. Will rapidly evolve into something more reusable
  /// as a way to pass scanner configurations.
  /// </summary>
  public sealed partial class ColumnRangePredicateListPB : pb::IMessage<ColumnRangePredicateListPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ColumnRangePredicateListPB> _parser = new pb::MessageParser<ColumnRangePredicateListPB>(() => new ColumnRangePredicateListPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnRangePredicateListPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicateListPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicateListPB(ColumnRangePredicateListPB other) : this() {
      rangePredicates_ = other.rangePredicates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnRangePredicateListPB Clone() {
      return new ColumnRangePredicateListPB(this);
    }

    /// <summary>Field number for the "range_predicates" field.</summary>
    public const int RangePredicatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> _repeated_rangePredicates_codec
        = pb::FieldCodec.ForMessage(10, global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> rangePredicates_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> RangePredicates {
      get { return rangePredicates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnRangePredicateListPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnRangePredicateListPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rangePredicates_.Equals(other.rangePredicates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rangePredicates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rangePredicates_.WriteTo(ref output, _repeated_rangePredicates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rangePredicates_.CalculateSize(_repeated_rangePredicates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnRangePredicateListPB other) {
      if (other == null) {
        return;
      }
      rangePredicates_.Add(other.rangePredicates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rangePredicates_.AddEntriesFrom(ref input, _repeated_rangePredicates_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewScanRequestPB : pb::IMessage<NewScanRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<NewScanRequestPB> _parser = new pb::MessageParser<NewScanRequestPB>(() => new NewScanRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewScanRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewScanRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewScanRequestPB(NewScanRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      limit_ = other.limit_;
      dEPRECATEDRangePredicates_ = other.dEPRECATEDRangePredicates_.Clone();
      columnPredicates_ = other.columnPredicates_.Clone();
      startPrimaryKey_ = other.startPrimaryKey_;
      stopPrimaryKey_ = other.stopPrimaryKey_;
      projectedColumns_ = other.projectedColumns_.Clone();
      readMode_ = other.readMode_;
      snapStartTimestamp_ = other.snapStartTimestamp_;
      snapTimestamp_ = other.snapTimestamp_;
      propagatedTimestamp_ = other.propagatedTimestamp_;
      cacheBlocks_ = other.cacheBlocks_;
      orderMode_ = other.orderMode_;
      lastPrimaryKey_ = other.lastPrimaryKey_;
      rowFormatFlags_ = other.rowFormatFlags_;
      authzToken_ = other.authzToken_ != null ? other.authzToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewScanRequestPB Clone() {
      return new NewScanRequestPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    /// <summary>
    /// The tablet to scan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static ulong LimitDefaultValue = 0UL;

    private ulong limit_;
    /// <summary>
    /// The maximum number of rows to scan with the new scanner.
    ///
    /// The scanner will automatically stop yielding results and close itself
    /// after reaching this number of result rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "DEPRECATED_range_predicates" field.</summary>
    public const int DEPRECATEDRangePredicatesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> _repeated_dEPRECATEDRangePredicates_codec
        = pb::FieldCodec.ForMessage(26, global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> dEPRECATEDRangePredicates_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB>();
    /// <summary>
    /// DEPRECATED: use column_predicates field.
    ///
    /// Any column range predicates to enforce.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.Tserver.ColumnRangePredicatePB> DEPRECATEDRangePredicates {
      get { return dEPRECATEDRangePredicates_; }
    }

    /// <summary>Field number for the "column_predicates" field.</summary>
    public const int ColumnPredicatesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.ColumnPredicatePB> _repeated_columnPredicates_codec
        = pb::FieldCodec.ForMessage(106, global::Knet.Kudu.Client.Protobuf.ColumnPredicatePB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnPredicatePB> columnPredicates_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnPredicatePB>();
    /// <summary>
    /// Column predicates to enforce.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnPredicatePB> ColumnPredicates {
      get { return columnPredicates_; }
    }

    /// <summary>Field number for the "start_primary_key" field.</summary>
    public const int StartPrimaryKeyFieldNumber = 8;
    private readonly static pb::ByteString StartPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString startPrimaryKey_;
    /// <summary>
    /// Encoded primary key to begin scanning at (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StartPrimaryKey {
      get { return startPrimaryKey_ ?? StartPrimaryKeyDefaultValue; }
      set {
        startPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartPrimaryKey {
      get { return startPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "start_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartPrimaryKey() {
      startPrimaryKey_ = null;
    }

    /// <summary>Field number for the "stop_primary_key" field.</summary>
    public const int StopPrimaryKeyFieldNumber = 9;
    private readonly static pb::ByteString StopPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString stopPrimaryKey_;
    /// <summary>
    /// Encoded primary key to stop scanning at (exclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StopPrimaryKey {
      get { return stopPrimaryKey_ ?? StopPrimaryKeyDefaultValue; }
      set {
        stopPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stop_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopPrimaryKey {
      get { return stopPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "stop_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopPrimaryKey() {
      stopPrimaryKey_ = null;
    }

    /// <summary>Field number for the "projected_columns" field.</summary>
    public const int ProjectedColumnsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> _repeated_projectedColumns_codec
        = pb::FieldCodec.ForMessage(34, global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> projectedColumns_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB>();
    /// <summary>
    /// Which columns to select.
    /// if this is an empty list, no data will be returned, but the num_rows
    /// field of the returned RowBlock will indicate how many rows passed
    /// the predicates. Note that in some cases, the scan may still require
    /// multiple round-trips, and the caller must aggregate the counts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> ProjectedColumns {
      get { return projectedColumns_; }
    }

    /// <summary>Field number for the "read_mode" field.</summary>
    public const int ReadModeFieldNumber = 5;
    private readonly static global::Knet.Kudu.Client.Protobuf.ReadModePB ReadModeDefaultValue = global::Knet.Kudu.Client.Protobuf.ReadModePB.ReadLatest;

    private global::Knet.Kudu.Client.Protobuf.ReadModePB readMode_;
    /// <summary>
    /// The read mode for this scan request.
    /// See common.proto for further information about read modes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ReadModePB ReadMode {
      get { if ((_hasBits0 & 2) != 0) { return readMode_; } else { return ReadModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        readMode_ = value;
      }
    }
    /// <summary>Gets whether the "read_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReadMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "read_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReadMode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "snap_start_timestamp" field.</summary>
    public const int SnapStartTimestampFieldNumber = 16;
    private readonly static ulong SnapStartTimestampDefaultValue = 0UL;

    private ulong snapStartTimestamp_;
    /// <summary>
    /// The start timestamp of a diff scan. If set, 'snap_timestamp' must also be
    /// specified and the read mode must be set to READ_AT_SNAPSHOT. Specifying
    /// this field turns the scan into a diff scan, where all changes between the
    /// start and end timestamp are returned.
    ///
    /// Diff Scans
    /// ==========
    ///
    /// When starting a diff scan, a column of type IS_DELETED (known as a virtual
    /// column) must also be included in the scan projection schema. The results
    /// of a diff scan include all values in the projection.
    /// Any row deleted between the start and end timestamps will have its
    /// IS_DELETED column set to true. In this case, any non-primary key column
    /// values in the result are undefined (they are not guaranteed to be the
    /// latest value before the row was deleted) and should be ignored. If the
    /// IS_DELETED column is set to false, then the row was inserted or updated
    /// betweeen the start and end timestamps. There is currently no way to tell
    /// whether a row returned from a diff scan with the IS_DELETED column set to
    /// false was included with the results because it was inserted or because it
    /// was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SnapStartTimestamp {
      get { if ((_hasBits0 & 128) != 0) { return snapStartTimestamp_; } else { return SnapStartTimestampDefaultValue; } }
      set {
        _hasBits0 |= 128;
        snapStartTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "snap_start_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapStartTimestamp {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "snap_start_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapStartTimestamp() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "snap_timestamp" field.</summary>
    public const int SnapTimestampFieldNumber = 6;
    private readonly static ulong SnapTimestampDefaultValue = 0UL;

    private ulong snapTimestamp_;
    /// <summary>
    /// The requested snapshot timestamp. This is only used when the read mode is
    /// set to READ_AT_SNAPSHOT. When 'snap_start_timestamp' is specified then
    /// this is the "end" timestamp of a diff scan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SnapTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return snapTimestamp_; } else { return SnapTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        snapTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "snap_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "snap_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapTimestamp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "propagated_timestamp" field.</summary>
    public const int PropagatedTimestampFieldNumber = 7;
    private readonly static ulong PropagatedTimestampDefaultValue = 0UL;

    private ulong propagatedTimestamp_;
    /// <summary>
    /// Sent by clients which previously executed CLIENT_PROPAGATED writes.
    /// This updates the server's time so that no op will be assigned
    /// a timestamp lower than or equal to 'previous_known_timestamp'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PropagatedTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return propagatedTimestamp_; } else { return PropagatedTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        propagatedTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "propagated_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPropagatedTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "propagated_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPropagatedTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cache_blocks" field.</summary>
    public const int CacheBlocksFieldNumber = 10;
    private readonly static bool CacheBlocksDefaultValue = true;

    private bool cacheBlocks_;
    /// <summary>
    /// Whether data blocks will be cached when read from the files or discarded after use.
    /// Disable this to lower cache churn when doing large scans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CacheBlocks {
      get { if ((_hasBits0 & 16) != 0) { return cacheBlocks_; } else { return CacheBlocksDefaultValue; } }
      set {
        _hasBits0 |= 16;
        cacheBlocks_ = value;
      }
    }
    /// <summary>Gets whether the "cache_blocks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCacheBlocks {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "cache_blocks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCacheBlocks() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "order_mode" field.</summary>
    public const int OrderModeFieldNumber = 11;
    private readonly static global::Knet.Kudu.Client.Protobuf.OrderModePB OrderModeDefaultValue = global::Knet.Kudu.Client.Protobuf.OrderModePB.Unordered;

    private global::Knet.Kudu.Client.Protobuf.OrderModePB orderMode_;
    /// <summary>
    /// Whether to order the returned rows by primary key.
    /// This is used for scanner fault-tolerance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.OrderModePB OrderMode {
      get { if ((_hasBits0 & 32) != 0) { return orderMode_; } else { return OrderModeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        orderMode_ = value;
      }
    }
    /// <summary>Gets whether the "order_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderMode {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "order_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderMode() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "last_primary_key" field.</summary>
    public const int LastPrimaryKeyFieldNumber = 12;
    private readonly static pb::ByteString LastPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString lastPrimaryKey_;
    /// <summary>
    /// If retrying a scan, the final primary key retrieved in the previous scan
    /// attempt. If set, this will take precedence over the `start_primary_key`
    /// field, and functions as an exclusive start primary key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LastPrimaryKey {
      get { return lastPrimaryKey_ ?? LastPrimaryKeyDefaultValue; }
      set {
        lastPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastPrimaryKey {
      get { return lastPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "last_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastPrimaryKey() {
      lastPrimaryKey_ = null;
    }

    /// <summary>Field number for the "row_format_flags" field.</summary>
    public const int RowFormatFlagsFieldNumber = 14;
    private readonly static ulong RowFormatFlagsDefaultValue = 0UL;

    private ulong rowFormatFlags_;
    /// <summary>
    /// Row format flags.
    ///
    /// The client may pass "row format modifier" flags that change the way the server encodes
    /// the returned row data in some way. Only on/off modifiers are supported, which are encoded
    /// as a bitset in this uint64.
    ///
    /// The default value corresponds to RowFormatFlags::NO_FLAGS, which can't be set
    /// as the actual default since the types differ.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RowFormatFlags {
      get { if ((_hasBits0 & 64) != 0) { return rowFormatFlags_; } else { return RowFormatFlagsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        rowFormatFlags_ = value;
      }
    }
    /// <summary>Gets whether the "row_format_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRowFormatFlags {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "row_format_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRowFormatFlags() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "authz_token" field.</summary>
    public const int AuthzTokenFieldNumber = 15;
    private global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB authzToken_;
    /// <summary>
    /// An authorization token with which to authorize this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB AuthzToken {
      get { return authzToken_; }
      set {
        authzToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewScanRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewScanRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (Limit != other.Limit) return false;
      if(!dEPRECATEDRangePredicates_.Equals(other.dEPRECATEDRangePredicates_)) return false;
      if(!columnPredicates_.Equals(other.columnPredicates_)) return false;
      if (StartPrimaryKey != other.StartPrimaryKey) return false;
      if (StopPrimaryKey != other.StopPrimaryKey) return false;
      if(!projectedColumns_.Equals(other.projectedColumns_)) return false;
      if (ReadMode != other.ReadMode) return false;
      if (SnapStartTimestamp != other.SnapStartTimestamp) return false;
      if (SnapTimestamp != other.SnapTimestamp) return false;
      if (PropagatedTimestamp != other.PropagatedTimestamp) return false;
      if (CacheBlocks != other.CacheBlocks) return false;
      if (OrderMode != other.OrderMode) return false;
      if (LastPrimaryKey != other.LastPrimaryKey) return false;
      if (RowFormatFlags != other.RowFormatFlags) return false;
      if (!object.Equals(AuthzToken, other.AuthzToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      hash ^= dEPRECATEDRangePredicates_.GetHashCode();
      hash ^= columnPredicates_.GetHashCode();
      if (HasStartPrimaryKey) hash ^= StartPrimaryKey.GetHashCode();
      if (HasStopPrimaryKey) hash ^= StopPrimaryKey.GetHashCode();
      hash ^= projectedColumns_.GetHashCode();
      if (HasReadMode) hash ^= ReadMode.GetHashCode();
      if (HasSnapStartTimestamp) hash ^= SnapStartTimestamp.GetHashCode();
      if (HasSnapTimestamp) hash ^= SnapTimestamp.GetHashCode();
      if (HasPropagatedTimestamp) hash ^= PropagatedTimestamp.GetHashCode();
      if (HasCacheBlocks) hash ^= CacheBlocks.GetHashCode();
      if (HasOrderMode) hash ^= OrderMode.GetHashCode();
      if (HasLastPrimaryKey) hash ^= LastPrimaryKey.GetHashCode();
      if (HasRowFormatFlags) hash ^= RowFormatFlags.GetHashCode();
      if (authzToken_ != null) hash ^= AuthzToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteUInt64(Limit);
      }
      dEPRECATEDRangePredicates_.WriteTo(ref output, _repeated_dEPRECATEDRangePredicates_codec);
      projectedColumns_.WriteTo(ref output, _repeated_projectedColumns_codec);
      if (HasReadMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ReadMode);
      }
      if (HasSnapTimestamp) {
        output.WriteRawTag(49);
        output.WriteFixed64(SnapTimestamp);
      }
      if (HasPropagatedTimestamp) {
        output.WriteRawTag(57);
        output.WriteFixed64(PropagatedTimestamp);
      }
      if (HasStartPrimaryKey) {
        output.WriteRawTag(66);
        output.WriteBytes(StartPrimaryKey);
      }
      if (HasStopPrimaryKey) {
        output.WriteRawTag(74);
        output.WriteBytes(StopPrimaryKey);
      }
      if (HasCacheBlocks) {
        output.WriteRawTag(80);
        output.WriteBool(CacheBlocks);
      }
      if (HasOrderMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) OrderMode);
      }
      if (HasLastPrimaryKey) {
        output.WriteRawTag(98);
        output.WriteBytes(LastPrimaryKey);
      }
      columnPredicates_.WriteTo(ref output, _repeated_columnPredicates_codec);
      if (HasRowFormatFlags) {
        output.WriteRawTag(112);
        output.WriteUInt64(RowFormatFlags);
      }
      if (authzToken_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(AuthzToken);
      }
      if (HasSnapStartTimestamp) {
        output.WriteRawTag(129, 1);
        output.WriteFixed64(SnapStartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      size += dEPRECATEDRangePredicates_.CalculateSize(_repeated_dEPRECATEDRangePredicates_codec);
      size += columnPredicates_.CalculateSize(_repeated_columnPredicates_codec);
      if (HasStartPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartPrimaryKey);
      }
      if (HasStopPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StopPrimaryKey);
      }
      size += projectedColumns_.CalculateSize(_repeated_projectedColumns_codec);
      if (HasReadMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReadMode);
      }
      if (HasSnapStartTimestamp) {
        size += 2 + 8;
      }
      if (HasSnapTimestamp) {
        size += 1 + 8;
      }
      if (HasPropagatedTimestamp) {
        size += 1 + 8;
      }
      if (HasCacheBlocks) {
        size += 1 + 1;
      }
      if (HasOrderMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderMode);
      }
      if (HasLastPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LastPrimaryKey);
      }
      if (HasRowFormatFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowFormatFlags);
      }
      if (authzToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthzToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewScanRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      dEPRECATEDRangePredicates_.Add(other.dEPRECATEDRangePredicates_);
      columnPredicates_.Add(other.columnPredicates_);
      if (other.HasStartPrimaryKey) {
        StartPrimaryKey = other.StartPrimaryKey;
      }
      if (other.HasStopPrimaryKey) {
        StopPrimaryKey = other.StopPrimaryKey;
      }
      projectedColumns_.Add(other.projectedColumns_);
      if (other.HasReadMode) {
        ReadMode = other.ReadMode;
      }
      if (other.HasSnapStartTimestamp) {
        SnapStartTimestamp = other.SnapStartTimestamp;
      }
      if (other.HasSnapTimestamp) {
        SnapTimestamp = other.SnapTimestamp;
      }
      if (other.HasPropagatedTimestamp) {
        PropagatedTimestamp = other.PropagatedTimestamp;
      }
      if (other.HasCacheBlocks) {
        CacheBlocks = other.CacheBlocks;
      }
      if (other.HasOrderMode) {
        OrderMode = other.OrderMode;
      }
      if (other.HasLastPrimaryKey) {
        LastPrimaryKey = other.LastPrimaryKey;
      }
      if (other.HasRowFormatFlags) {
        RowFormatFlags = other.RowFormatFlags;
      }
      if (other.authzToken_ != null) {
        if (authzToken_ == null) {
          AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
        }
        AuthzToken.MergeFrom(other.AuthzToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadUInt64();
            break;
          }
          case 26: {
            dEPRECATEDRangePredicates_.AddEntriesFrom(ref input, _repeated_dEPRECATEDRangePredicates_codec);
            break;
          }
          case 34: {
            projectedColumns_.AddEntriesFrom(ref input, _repeated_projectedColumns_codec);
            break;
          }
          case 40: {
            ReadMode = (global::Knet.Kudu.Client.Protobuf.ReadModePB) input.ReadEnum();
            break;
          }
          case 49: {
            SnapTimestamp = input.ReadFixed64();
            break;
          }
          case 57: {
            PropagatedTimestamp = input.ReadFixed64();
            break;
          }
          case 66: {
            StartPrimaryKey = input.ReadBytes();
            break;
          }
          case 74: {
            StopPrimaryKey = input.ReadBytes();
            break;
          }
          case 80: {
            CacheBlocks = input.ReadBool();
            break;
          }
          case 88: {
            OrderMode = (global::Knet.Kudu.Client.Protobuf.OrderModePB) input.ReadEnum();
            break;
          }
          case 98: {
            LastPrimaryKey = input.ReadBytes();
            break;
          }
          case 106: {
            columnPredicates_.AddEntriesFrom(ref input, _repeated_columnPredicates_codec);
            break;
          }
          case 112: {
            RowFormatFlags = input.ReadUInt64();
            break;
          }
          case 122: {
            if (authzToken_ == null) {
              AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
            }
            input.ReadMessage(AuthzToken);
            break;
          }
          case 129: {
            SnapStartTimestamp = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A scan request. Initially, it should specify a scan. Later on, you
  /// can use the scanner id returned to fetch result batches with a different
  /// scan request.
  ///
  /// The scanner will remain open if there are more results, and it's not
  /// asked to be closed explicitly. Some errors on the Tablet Server may
  /// close the scanner automatically if the scanner state becomes
  /// inconsistent.
  ///
  /// Clients may choose to retry scan requests that fail to complete (due to, for
  /// example, a timeout or network error). If a scan request completes with an
  /// error result, the scanner should be closed by the client.
  ///
  /// You can fetch the results and ask the scanner to be closed to save
  /// a trip if you are not interested in remaining results.
  ///
  /// This is modeled somewhat after HBase's scanner API.
  /// </summary>
  public sealed partial class ScanRequestPB : pb::IMessage<ScanRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ScanRequestPB> _parser = new pb::MessageParser<ScanRequestPB>(() => new ScanRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanRequestPB(ScanRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      scannerId_ = other.scannerId_;
      newScanRequest_ = other.newScanRequest_ != null ? other.newScanRequest_.Clone() : null;
      callSeqId_ = other.callSeqId_;
      batchSizeBytes_ = other.batchSizeBytes_;
      closeScanner_ = other.closeScanner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanRequestPB Clone() {
      return new ScanRequestPB(this);
    }

    /// <summary>Field number for the "scanner_id" field.</summary>
    public const int ScannerIdFieldNumber = 1;
    private readonly static pb::ByteString ScannerIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString scannerId_;
    /// <summary>
    /// If continuing an existing scan, then you must set scanner_id.
    /// Otherwise, you must set 'new_scan_request'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ScannerId {
      get { return scannerId_ ?? ScannerIdDefaultValue; }
      set {
        scannerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "scanner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScannerId {
      get { return scannerId_ != null; }
    }
    /// <summary>Clears the value of the "scanner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScannerId() {
      scannerId_ = null;
    }

    /// <summary>Field number for the "new_scan_request" field.</summary>
    public const int NewScanRequestFieldNumber = 2;
    private global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB newScanRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB NewScanRequest {
      get { return newScanRequest_; }
      set {
        newScanRequest_ = value;
      }
    }

    /// <summary>Field number for the "call_seq_id" field.</summary>
    public const int CallSeqIdFieldNumber = 3;
    private readonly static uint CallSeqIdDefaultValue = 0;

    private uint callSeqId_;
    /// <summary>
    /// The sequence ID of this call. The sequence ID should start at 0
    /// with the request for a new scanner, and after each successful request,
    /// the client should increment it by 1. When retrying a request, the client
    /// should _not_ increment this value. If the server detects that the client
    /// missed a chunk of rows from the middle of a scan, it will respond with an
    /// error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CallSeqId {
      get { if ((_hasBits0 & 1) != 0) { return callSeqId_; } else { return CallSeqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        callSeqId_ = value;
      }
    }
    /// <summary>Gets whether the "call_seq_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallSeqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "call_seq_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallSeqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "batch_size_bytes" field.</summary>
    public const int BatchSizeBytesFieldNumber = 4;
    private readonly static uint BatchSizeBytesDefaultValue = 0;

    private uint batchSizeBytes_;
    /// <summary>
    /// The maximum number of bytes to send in the response.
    /// This is a hint, not a requirement: the server may send
    /// arbitrarily fewer or more bytes than requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BatchSizeBytes {
      get { if ((_hasBits0 & 2) != 0) { return batchSizeBytes_; } else { return BatchSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        batchSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "batch_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBatchSizeBytes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "batch_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBatchSizeBytes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "close_scanner" field.</summary>
    public const int CloseScannerFieldNumber = 5;
    private readonly static bool CloseScannerDefaultValue = false;

    private bool closeScanner_;
    /// <summary>
    /// If set, the server will close the scanner after responding to
    /// this request, regardless of whether all rows have been delivered.
    /// In order to simply close a scanner without selecting any rows, you
    /// may set batch_size_bytes to 0 in conjunction with setting this flag.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CloseScanner {
      get { if ((_hasBits0 & 4) != 0) { return closeScanner_; } else { return CloseScannerDefaultValue; } }
      set {
        _hasBits0 |= 4;
        closeScanner_ = value;
      }
    }
    /// <summary>Gets whether the "close_scanner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCloseScanner {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "close_scanner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCloseScanner() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScannerId != other.ScannerId) return false;
      if (!object.Equals(NewScanRequest, other.NewScanRequest)) return false;
      if (CallSeqId != other.CallSeqId) return false;
      if (BatchSizeBytes != other.BatchSizeBytes) return false;
      if (CloseScanner != other.CloseScanner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScannerId) hash ^= ScannerId.GetHashCode();
      if (newScanRequest_ != null) hash ^= NewScanRequest.GetHashCode();
      if (HasCallSeqId) hash ^= CallSeqId.GetHashCode();
      if (HasBatchSizeBytes) hash ^= BatchSizeBytes.GetHashCode();
      if (HasCloseScanner) hash ^= CloseScanner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScannerId) {
        output.WriteRawTag(10);
        output.WriteBytes(ScannerId);
      }
      if (newScanRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewScanRequest);
      }
      if (HasCallSeqId) {
        output.WriteRawTag(24);
        output.WriteUInt32(CallSeqId);
      }
      if (HasBatchSizeBytes) {
        output.WriteRawTag(32);
        output.WriteUInt32(BatchSizeBytes);
      }
      if (HasCloseScanner) {
        output.WriteRawTag(40);
        output.WriteBool(CloseScanner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScannerId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ScannerId);
      }
      if (newScanRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewScanRequest);
      }
      if (HasCallSeqId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CallSeqId);
      }
      if (HasBatchSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BatchSizeBytes);
      }
      if (HasCloseScanner) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasScannerId) {
        ScannerId = other.ScannerId;
      }
      if (other.newScanRequest_ != null) {
        if (newScanRequest_ == null) {
          NewScanRequest = new global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB();
        }
        NewScanRequest.MergeFrom(other.NewScanRequest);
      }
      if (other.HasCallSeqId) {
        CallSeqId = other.CallSeqId;
      }
      if (other.HasBatchSizeBytes) {
        BatchSizeBytes = other.BatchSizeBytes;
      }
      if (other.HasCloseScanner) {
        CloseScanner = other.CloseScanner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ScannerId = input.ReadBytes();
            break;
          }
          case 18: {
            if (newScanRequest_ == null) {
              NewScanRequest = new global::Knet.Kudu.Client.Protobuf.Tserver.NewScanRequestPB();
            }
            input.ReadMessage(NewScanRequest);
            break;
          }
          case 24: {
            CallSeqId = input.ReadUInt32();
            break;
          }
          case 32: {
            BatchSizeBytes = input.ReadUInt32();
            break;
          }
          case 40: {
            CloseScanner = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RPC's resource metrics.
  /// </summary>
  public sealed partial class ResourceMetricsPB : pb::IMessage<ResourceMetricsPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ResourceMetricsPB> _parser = new pb::MessageParser<ResourceMetricsPB>(() => new ResourceMetricsPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResourceMetricsPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceMetricsPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceMetricsPB(ResourceMetricsPB other) : this() {
      _hasBits0 = other._hasBits0;
      cfileCacheMissBytes_ = other.cfileCacheMissBytes_;
      cfileCacheHitBytes_ = other.cfileCacheHitBytes_;
      bytesRead_ = other.bytesRead_;
      queueDurationNanos_ = other.queueDurationNanos_;
      totalDurationNanos_ = other.totalDurationNanos_;
      cpuUserNanos_ = other.cpuUserNanos_;
      cpuSystemNanos_ = other.cpuSystemNanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceMetricsPB Clone() {
      return new ResourceMetricsPB(this);
    }

    /// <summary>Field number for the "cfile_cache_miss_bytes" field.</summary>
    public const int CfileCacheMissBytesFieldNumber = 1;
    private readonly static long CfileCacheMissBytesDefaultValue = 0L;

    private long cfileCacheMissBytes_;
    /// <summary>
    /// All metrics MUST be the type of int64.
    /// Number of bytes that were read because of a block cache miss.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CfileCacheMissBytes {
      get { if ((_hasBits0 & 1) != 0) { return cfileCacheMissBytes_; } else { return CfileCacheMissBytesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cfileCacheMissBytes_ = value;
      }
    }
    /// <summary>Gets whether the "cfile_cache_miss_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfileCacheMissBytes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cfile_cache_miss_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfileCacheMissBytes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cfile_cache_hit_bytes" field.</summary>
    public const int CfileCacheHitBytesFieldNumber = 2;
    private readonly static long CfileCacheHitBytesDefaultValue = 0L;

    private long cfileCacheHitBytes_;
    /// <summary>
    /// Number of bytes that were read from the block cache because of a hit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CfileCacheHitBytes {
      get { if ((_hasBits0 & 2) != 0) { return cfileCacheHitBytes_; } else { return CfileCacheHitBytesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cfileCacheHitBytes_ = value;
      }
    }
    /// <summary>Gets whether the "cfile_cache_hit_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfileCacheHitBytes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cfile_cache_hit_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfileCacheHitBytes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bytes_read" field.</summary>
    public const int BytesReadFieldNumber = 3;
    private readonly static long BytesReadDefaultValue = 0L;

    private long bytesRead_;
    /// <summary>
    /// Number of bytes read from disk (or cache) by the scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BytesRead {
      get { if ((_hasBits0 & 4) != 0) { return bytesRead_; } else { return BytesReadDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bytesRead_ = value;
      }
    }
    /// <summary>Gets whether the "bytes_read" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesRead {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bytes_read" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesRead() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "queue_duration_nanos" field.</summary>
    public const int QueueDurationNanosFieldNumber = 4;
    private readonly static long QueueDurationNanosDefaultValue = 0L;

    private long queueDurationNanos_;
    /// <summary>
    /// Total time taken between scan rpc requests being accepted and when they were handled in
    /// nanoseconds for this scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long QueueDurationNanos {
      get { if ((_hasBits0 & 8) != 0) { return queueDurationNanos_; } else { return QueueDurationNanosDefaultValue; } }
      set {
        _hasBits0 |= 8;
        queueDurationNanos_ = value;
      }
    }
    /// <summary>Gets whether the "queue_duration_nanos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQueueDurationNanos {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "queue_duration_nanos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQueueDurationNanos() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "total_duration_nanos" field.</summary>
    public const int TotalDurationNanosFieldNumber = 5;
    private readonly static long TotalDurationNanosDefaultValue = 0L;

    private long totalDurationNanos_;
    /// <summary>
    /// Total time taken for all scan rpc requests to complete in nanoseconds for this scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalDurationNanos {
      get { if ((_hasBits0 & 16) != 0) { return totalDurationNanos_; } else { return TotalDurationNanosDefaultValue; } }
      set {
        _hasBits0 |= 16;
        totalDurationNanos_ = value;
      }
    }
    /// <summary>Gets whether the "total_duration_nanos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalDurationNanos {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "total_duration_nanos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalDurationNanos() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "cpu_user_nanos" field.</summary>
    public const int CpuUserNanosFieldNumber = 6;
    private readonly static long CpuUserNanosDefaultValue = 0L;

    private long cpuUserNanos_;
    /// <summary>
    /// Total elapsed CPU user time in nanoseconds for all scan rpc requests for this scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CpuUserNanos {
      get { if ((_hasBits0 & 32) != 0) { return cpuUserNanos_; } else { return CpuUserNanosDefaultValue; } }
      set {
        _hasBits0 |= 32;
        cpuUserNanos_ = value;
      }
    }
    /// <summary>Gets whether the "cpu_user_nanos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuUserNanos {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "cpu_user_nanos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuUserNanos() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "cpu_system_nanos" field.</summary>
    public const int CpuSystemNanosFieldNumber = 7;
    private readonly static long CpuSystemNanosDefaultValue = 0L;

    private long cpuSystemNanos_;
    /// <summary>
    /// Total elapsed CPU system time in nanoseconds for all scan rpc requests for this scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CpuSystemNanos {
      get { if ((_hasBits0 & 64) != 0) { return cpuSystemNanos_; } else { return CpuSystemNanosDefaultValue; } }
      set {
        _hasBits0 |= 64;
        cpuSystemNanos_ = value;
      }
    }
    /// <summary>Gets whether the "cpu_system_nanos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuSystemNanos {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "cpu_system_nanos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuSystemNanos() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResourceMetricsPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResourceMetricsPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfileCacheMissBytes != other.CfileCacheMissBytes) return false;
      if (CfileCacheHitBytes != other.CfileCacheHitBytes) return false;
      if (BytesRead != other.BytesRead) return false;
      if (QueueDurationNanos != other.QueueDurationNanos) return false;
      if (TotalDurationNanos != other.TotalDurationNanos) return false;
      if (CpuUserNanos != other.CpuUserNanos) return false;
      if (CpuSystemNanos != other.CpuSystemNanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCfileCacheMissBytes) hash ^= CfileCacheMissBytes.GetHashCode();
      if (HasCfileCacheHitBytes) hash ^= CfileCacheHitBytes.GetHashCode();
      if (HasBytesRead) hash ^= BytesRead.GetHashCode();
      if (HasQueueDurationNanos) hash ^= QueueDurationNanos.GetHashCode();
      if (HasTotalDurationNanos) hash ^= TotalDurationNanos.GetHashCode();
      if (HasCpuUserNanos) hash ^= CpuUserNanos.GetHashCode();
      if (HasCpuSystemNanos) hash ^= CpuSystemNanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCfileCacheMissBytes) {
        output.WriteRawTag(8);
        output.WriteInt64(CfileCacheMissBytes);
      }
      if (HasCfileCacheHitBytes) {
        output.WriteRawTag(16);
        output.WriteInt64(CfileCacheHitBytes);
      }
      if (HasBytesRead) {
        output.WriteRawTag(24);
        output.WriteInt64(BytesRead);
      }
      if (HasQueueDurationNanos) {
        output.WriteRawTag(32);
        output.WriteInt64(QueueDurationNanos);
      }
      if (HasTotalDurationNanos) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalDurationNanos);
      }
      if (HasCpuUserNanos) {
        output.WriteRawTag(48);
        output.WriteInt64(CpuUserNanos);
      }
      if (HasCpuSystemNanos) {
        output.WriteRawTag(56);
        output.WriteInt64(CpuSystemNanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCfileCacheMissBytes) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CfileCacheMissBytes);
      }
      if (HasCfileCacheHitBytes) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CfileCacheHitBytes);
      }
      if (HasBytesRead) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesRead);
      }
      if (HasQueueDurationNanos) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueDurationNanos);
      }
      if (HasTotalDurationNanos) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalDurationNanos);
      }
      if (HasCpuUserNanos) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpuUserNanos);
      }
      if (HasCpuSystemNanos) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpuSystemNanos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResourceMetricsPB other) {
      if (other == null) {
        return;
      }
      if (other.HasCfileCacheMissBytes) {
        CfileCacheMissBytes = other.CfileCacheMissBytes;
      }
      if (other.HasCfileCacheHitBytes) {
        CfileCacheHitBytes = other.CfileCacheHitBytes;
      }
      if (other.HasBytesRead) {
        BytesRead = other.BytesRead;
      }
      if (other.HasQueueDurationNanos) {
        QueueDurationNanos = other.QueueDurationNanos;
      }
      if (other.HasTotalDurationNanos) {
        TotalDurationNanos = other.TotalDurationNanos;
      }
      if (other.HasCpuUserNanos) {
        CpuUserNanos = other.CpuUserNanos;
      }
      if (other.HasCpuSystemNanos) {
        CpuSystemNanos = other.CpuSystemNanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CfileCacheMissBytes = input.ReadInt64();
            break;
          }
          case 16: {
            CfileCacheHitBytes = input.ReadInt64();
            break;
          }
          case 24: {
            BytesRead = input.ReadInt64();
            break;
          }
          case 32: {
            QueueDurationNanos = input.ReadInt64();
            break;
          }
          case 40: {
            TotalDurationNanos = input.ReadInt64();
            break;
          }
          case 48: {
            CpuUserNanos = input.ReadInt64();
            break;
          }
          case 56: {
            CpuSystemNanos = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScanResponsePB : pb::IMessage<ScanResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ScanResponsePB> _parser = new pb::MessageParser<ScanResponsePB>(() => new ScanResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanResponsePB(ScanResponsePB other) : this() {
      _hasBits0 = other._hasBits0;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      scannerId_ = other.scannerId_;
      hasMoreResults_ = other.hasMoreResults_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      columnarData_ = other.columnarData_ != null ? other.columnarData_.Clone() : null;
      snapTimestamp_ = other.snapTimestamp_;
      lastPrimaryKey_ = other.lastPrimaryKey_;
      resourceMetrics_ = other.resourceMetrics_ != null ? other.resourceMetrics_.Clone() : null;
      propagatedTimestamp_ = other.propagatedTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanResponsePB Clone() {
      return new ScanResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "scanner_id" field.</summary>
    public const int ScannerIdFieldNumber = 2;
    private readonly static pb::ByteString ScannerIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString scannerId_;
    /// <summary>
    /// When a scanner is created, returns the scanner ID which may be used
    /// to pull new rows from the scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ScannerId {
      get { return scannerId_ ?? ScannerIdDefaultValue; }
      set {
        scannerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "scanner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScannerId {
      get { return scannerId_ != null; }
    }
    /// <summary>Clears the value of the "scanner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScannerId() {
      scannerId_ = null;
    }

    /// <summary>Field number for the "has_more_results" field.</summary>
    public const int HasMoreResultsFieldNumber = 3;
    private readonly static bool HasMoreResultsDefaultValue = false;

    private bool hasMoreResults_;
    /// <summary>
    /// Set to true to indicate that there may be further results to be fetched
    /// from this scanner. If the scanner has no more results, then the scanner
    /// ID will become invalid and cannot continue to be used.
    ///
    /// Note that if a scan returns no results, then the initial response from
    /// the first RPC may return false in this flag, in which case there will
    /// be no scanner ID assigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMoreResults {
      get { if ((_hasBits0 & 1) != 0) { return hasMoreResults_; } else { return HasMoreResultsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hasMoreResults_ = value;
      }
    }
    /// <summary>Gets whether the "has_more_results" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasMoreResults {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "has_more_results" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasMoreResults() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB data_;
    /// <summary>
    /// The block of returned rows.
    ///
    /// NOTE: the schema-related fields will not be present in this row block.
    /// The schema will match the schema requested by the client when it created
    /// the scanner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "columnar_data" field.</summary>
    public const int ColumnarDataFieldNumber = 5;
    private global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB columnarData_;
    /// <summary>
    /// Set instead of 'data' if COLUMNAR_LAYOUT is passed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB ColumnarData {
      get { return columnarData_; }
      set {
        columnarData_ = value;
      }
    }

    /// <summary>Field number for the "snap_timestamp" field.</summary>
    public const int SnapTimestampFieldNumber = 6;
    private readonly static ulong SnapTimestampDefaultValue = 0UL;

    private ulong snapTimestamp_;
    /// <summary>
    /// The snapshot timestamp at which the scan was executed. This is only set
    /// in the first response (i.e. the response to the request that had
    /// 'new_scan_request' set) and only for READ_AT_SNAPSHOT scans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SnapTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return snapTimestamp_; } else { return SnapTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        snapTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "snap_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "snap_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "last_primary_key" field.</summary>
    public const int LastPrimaryKeyFieldNumber = 7;
    private readonly static pb::ByteString LastPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString lastPrimaryKey_;
    /// <summary>
    /// If this is a fault-tolerant scanner, this is set to the encoded primary
    /// key of the last row returned in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LastPrimaryKey {
      get { return lastPrimaryKey_ ?? LastPrimaryKeyDefaultValue; }
      set {
        lastPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastPrimaryKey {
      get { return lastPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "last_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastPrimaryKey() {
      lastPrimaryKey_ = null;
    }

    /// <summary>Field number for the "resource_metrics" field.</summary>
    public const int ResourceMetricsFieldNumber = 8;
    private global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB resourceMetrics_;
    /// <summary>
    /// The resource usage of this RPC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB ResourceMetrics {
      get { return resourceMetrics_; }
      set {
        resourceMetrics_ = value;
      }
    }

    /// <summary>Field number for the "propagated_timestamp" field.</summary>
    public const int PropagatedTimestampFieldNumber = 9;
    private readonly static ulong PropagatedTimestampDefaultValue = 0UL;

    private ulong propagatedTimestamp_;
    /// <summary>
    /// The server's time upon sending out the scan response. Should always
    /// be greater than the scan timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PropagatedTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return propagatedTimestamp_; } else { return PropagatedTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        propagatedTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "propagated_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPropagatedTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "propagated_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPropagatedTimestamp() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (ScannerId != other.ScannerId) return false;
      if (HasMoreResults != other.HasMoreResults) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(ColumnarData, other.ColumnarData)) return false;
      if (SnapTimestamp != other.SnapTimestamp) return false;
      if (LastPrimaryKey != other.LastPrimaryKey) return false;
      if (!object.Equals(ResourceMetrics, other.ResourceMetrics)) return false;
      if (PropagatedTimestamp != other.PropagatedTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (HasScannerId) hash ^= ScannerId.GetHashCode();
      if (HasHasMoreResults) hash ^= HasMoreResults.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (columnarData_ != null) hash ^= ColumnarData.GetHashCode();
      if (HasSnapTimestamp) hash ^= SnapTimestamp.GetHashCode();
      if (HasLastPrimaryKey) hash ^= LastPrimaryKey.GetHashCode();
      if (resourceMetrics_ != null) hash ^= ResourceMetrics.GetHashCode();
      if (HasPropagatedTimestamp) hash ^= PropagatedTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (HasScannerId) {
        output.WriteRawTag(18);
        output.WriteBytes(ScannerId);
      }
      if (HasHasMoreResults) {
        output.WriteRawTag(24);
        output.WriteBool(HasMoreResults);
      }
      if (data_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Data);
      }
      if (columnarData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ColumnarData);
      }
      if (HasSnapTimestamp) {
        output.WriteRawTag(49);
        output.WriteFixed64(SnapTimestamp);
      }
      if (HasLastPrimaryKey) {
        output.WriteRawTag(58);
        output.WriteBytes(LastPrimaryKey);
      }
      if (resourceMetrics_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ResourceMetrics);
      }
      if (HasPropagatedTimestamp) {
        output.WriteRawTag(73);
        output.WriteFixed64(PropagatedTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (HasScannerId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ScannerId);
      }
      if (HasHasMoreResults) {
        size += 1 + 1;
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (columnarData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColumnarData);
      }
      if (HasSnapTimestamp) {
        size += 1 + 8;
      }
      if (HasLastPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LastPrimaryKey);
      }
      if (resourceMetrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceMetrics);
      }
      if (HasPropagatedTimestamp) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.HasScannerId) {
        ScannerId = other.ScannerId;
      }
      if (other.HasHasMoreResults) {
        HasMoreResults = other.HasMoreResults;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.columnarData_ != null) {
        if (columnarData_ == null) {
          ColumnarData = new global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB();
        }
        ColumnarData.MergeFrom(other.ColumnarData);
      }
      if (other.HasSnapTimestamp) {
        SnapTimestamp = other.SnapTimestamp;
      }
      if (other.HasLastPrimaryKey) {
        LastPrimaryKey = other.LastPrimaryKey;
      }
      if (other.resourceMetrics_ != null) {
        if (resourceMetrics_ == null) {
          ResourceMetrics = new global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB();
        }
        ResourceMetrics.MergeFrom(other.ResourceMetrics);
      }
      if (other.HasPropagatedTimestamp) {
        PropagatedTimestamp = other.PropagatedTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            ScannerId = input.ReadBytes();
            break;
          }
          case 24: {
            HasMoreResults = input.ReadBool();
            break;
          }
          case 34: {
            if (data_ == null) {
              Data = new global::Knet.Kudu.Client.Protobuf.RowwiseRowBlockPB();
            }
            input.ReadMessage(Data);
            break;
          }
          case 42: {
            if (columnarData_ == null) {
              ColumnarData = new global::Knet.Kudu.Client.Protobuf.ColumnarRowBlockPB();
            }
            input.ReadMessage(ColumnarData);
            break;
          }
          case 49: {
            SnapTimestamp = input.ReadFixed64();
            break;
          }
          case 58: {
            LastPrimaryKey = input.ReadBytes();
            break;
          }
          case 66: {
            if (resourceMetrics_ == null) {
              ResourceMetrics = new global::Knet.Kudu.Client.Protobuf.Tserver.ResourceMetricsPB();
            }
            input.ReadMessage(ResourceMetrics);
            break;
          }
          case 73: {
            PropagatedTimestamp = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A scanner keep-alive request.
  /// Updates the scanner access time, increasing its time-to-live.
  /// </summary>
  public sealed partial class ScannerKeepAliveRequestPB : pb::IMessage<ScannerKeepAliveRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ScannerKeepAliveRequestPB> _parser = new pb::MessageParser<ScannerKeepAliveRequestPB>(() => new ScannerKeepAliveRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScannerKeepAliveRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveRequestPB(ScannerKeepAliveRequestPB other) : this() {
      scannerId_ = other.scannerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveRequestPB Clone() {
      return new ScannerKeepAliveRequestPB(this);
    }

    /// <summary>Field number for the "scanner_id" field.</summary>
    public const int ScannerIdFieldNumber = 1;
    private readonly static pb::ByteString ScannerIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString scannerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ScannerId {
      get { return scannerId_ ?? ScannerIdDefaultValue; }
      set {
        scannerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "scanner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScannerId {
      get { return scannerId_ != null; }
    }
    /// <summary>Clears the value of the "scanner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScannerId() {
      scannerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScannerKeepAliveRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScannerKeepAliveRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScannerId != other.ScannerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScannerId) hash ^= ScannerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScannerId) {
        output.WriteRawTag(10);
        output.WriteBytes(ScannerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScannerId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ScannerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScannerKeepAliveRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasScannerId) {
        ScannerId = other.ScannerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ScannerId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScannerKeepAliveResponsePB : pb::IMessage<ScannerKeepAliveResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<ScannerKeepAliveResponsePB> _parser = new pb::MessageParser<ScannerKeepAliveResponsePB>(() => new ScannerKeepAliveResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScannerKeepAliveResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveResponsePB(ScannerKeepAliveResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScannerKeepAliveResponsePB Clone() {
      return new ScannerKeepAliveResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScannerKeepAliveResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScannerKeepAliveResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScannerKeepAliveResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A split key range request. Split tablet to key ranges, the request
  /// doesn't change layout of tablet.
  /// </summary>
  public sealed partial class SplitKeyRangeRequestPB : pb::IMessage<SplitKeyRangeRequestPB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SplitKeyRangeRequestPB> _parser = new pb::MessageParser<SplitKeyRangeRequestPB>(() => new SplitKeyRangeRequestPB());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SplitKeyRangeRequestPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeRequestPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeRequestPB(SplitKeyRangeRequestPB other) : this() {
      _hasBits0 = other._hasBits0;
      tabletId_ = other.tabletId_;
      startPrimaryKey_ = other.startPrimaryKey_;
      stopPrimaryKey_ = other.stopPrimaryKey_;
      targetChunkSizeBytes_ = other.targetChunkSizeBytes_;
      columns_ = other.columns_.Clone();
      authzToken_ = other.authzToken_ != null ? other.authzToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeRequestPB Clone() {
      return new SplitKeyRangeRequestPB(this);
    }

    /// <summary>Field number for the "tablet_id" field.</summary>
    public const int TabletIdFieldNumber = 1;
    private readonly static pb::ByteString TabletIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString tabletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TabletId {
      get { return tabletId_ ?? TabletIdDefaultValue; }
      set {
        tabletId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tablet_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabletId {
      get { return tabletId_ != null; }
    }
    /// <summary>Clears the value of the "tablet_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabletId() {
      tabletId_ = null;
    }

    /// <summary>Field number for the "start_primary_key" field.</summary>
    public const int StartPrimaryKeyFieldNumber = 2;
    private readonly static pb::ByteString StartPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString startPrimaryKey_;
    /// <summary>
    /// Encoded primary key to begin scanning at (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StartPrimaryKey {
      get { return startPrimaryKey_ ?? StartPrimaryKeyDefaultValue; }
      set {
        startPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartPrimaryKey {
      get { return startPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "start_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartPrimaryKey() {
      startPrimaryKey_ = null;
    }

    /// <summary>Field number for the "stop_primary_key" field.</summary>
    public const int StopPrimaryKeyFieldNumber = 3;
    private readonly static pb::ByteString StopPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString stopPrimaryKey_;
    /// <summary>
    /// Encoded primary key to stop scanning at (exclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StopPrimaryKey {
      get { return stopPrimaryKey_ ?? StopPrimaryKeyDefaultValue; }
      set {
        stopPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stop_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopPrimaryKey {
      get { return stopPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "stop_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopPrimaryKey() {
      stopPrimaryKey_ = null;
    }

    /// <summary>Field number for the "target_chunk_size_bytes" field.</summary>
    public const int TargetChunkSizeBytesFieldNumber = 4;
    private readonly static ulong TargetChunkSizeBytesDefaultValue = 0UL;

    private ulong targetChunkSizeBytes_;
    /// <summary>
    /// Number of bytes to try to return in each chunk. This is a hint.
    /// The tablet server may return chunks larger or smaller than this value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TargetChunkSizeBytes {
      get { if ((_hasBits0 & 1) != 0) { return targetChunkSizeBytes_; } else { return TargetChunkSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetChunkSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "target_chunk_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetChunkSizeBytes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_chunk_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetChunkSizeBytes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(42, global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> columns_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB>();
    /// <summary>
    /// The columns to consider when chunking.
    /// If specified, then the size estimate used for 'target_chunk_size_bytes'
    /// should only include these columns. This can be used if a query will
    /// only scan a certain subset of the columns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.ColumnSchemaPB> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "authz_token" field.</summary>
    public const int AuthzTokenFieldNumber = 6;
    private global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB authzToken_;
    /// <summary>
    /// An authorization token with which to authorize this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB AuthzToken {
      get { return authzToken_; }
      set {
        authzToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SplitKeyRangeRequestPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SplitKeyRangeRequestPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabletId != other.TabletId) return false;
      if (StartPrimaryKey != other.StartPrimaryKey) return false;
      if (StopPrimaryKey != other.StopPrimaryKey) return false;
      if (TargetChunkSizeBytes != other.TargetChunkSizeBytes) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if (!object.Equals(AuthzToken, other.AuthzToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabletId) hash ^= TabletId.GetHashCode();
      if (HasStartPrimaryKey) hash ^= StartPrimaryKey.GetHashCode();
      if (HasStopPrimaryKey) hash ^= StopPrimaryKey.GetHashCode();
      if (HasTargetChunkSizeBytes) hash ^= TargetChunkSizeBytes.GetHashCode();
      hash ^= columns_.GetHashCode();
      if (authzToken_ != null) hash ^= AuthzToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabletId) {
        output.WriteRawTag(10);
        output.WriteBytes(TabletId);
      }
      if (HasStartPrimaryKey) {
        output.WriteRawTag(18);
        output.WriteBytes(StartPrimaryKey);
      }
      if (HasStopPrimaryKey) {
        output.WriteRawTag(26);
        output.WriteBytes(StopPrimaryKey);
      }
      if (HasTargetChunkSizeBytes) {
        output.WriteRawTag(32);
        output.WriteUInt64(TargetChunkSizeBytes);
      }
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (authzToken_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AuthzToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabletId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TabletId);
      }
      if (HasStartPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartPrimaryKey);
      }
      if (HasStopPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StopPrimaryKey);
      }
      if (HasTargetChunkSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetChunkSizeBytes);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (authzToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthzToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SplitKeyRangeRequestPB other) {
      if (other == null) {
        return;
      }
      if (other.HasTabletId) {
        TabletId = other.TabletId;
      }
      if (other.HasStartPrimaryKey) {
        StartPrimaryKey = other.StartPrimaryKey;
      }
      if (other.HasStopPrimaryKey) {
        StopPrimaryKey = other.StopPrimaryKey;
      }
      if (other.HasTargetChunkSizeBytes) {
        TargetChunkSizeBytes = other.TargetChunkSizeBytes;
      }
      columns_.Add(other.columns_);
      if (other.authzToken_ != null) {
        if (authzToken_ == null) {
          AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
        }
        AuthzToken.MergeFrom(other.AuthzToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabletId = input.ReadBytes();
            break;
          }
          case 18: {
            StartPrimaryKey = input.ReadBytes();
            break;
          }
          case 26: {
            StopPrimaryKey = input.ReadBytes();
            break;
          }
          case 32: {
            TargetChunkSizeBytes = input.ReadUInt64();
            break;
          }
          case 42: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 50: {
            if (authzToken_ == null) {
              AuthzToken = new global::Knet.Kudu.Client.Protobuf.Security.SignedTokenPB();
            }
            input.ReadMessage(AuthzToken);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SplitKeyRangeResponsePB : pb::IMessage<SplitKeyRangeResponsePB>
      , pb::IBufferMessage
  {
    private static readonly pb::MessageParser<SplitKeyRangeResponsePB> _parser = new pb::MessageParser<SplitKeyRangeResponsePB>(() => new SplitKeyRangeResponsePB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SplitKeyRangeResponsePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Knet.Kudu.Client.Protobuf.Tserver.TserverReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeResponsePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeResponsePB(SplitKeyRangeResponsePB other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      ranges_ = other.ranges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SplitKeyRangeResponsePB Clone() {
      return new SplitKeyRangeResponsePB(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB error_;
    /// <summary>
    /// The error, if an error occurred with this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "ranges" field.</summary>
    public const int RangesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Knet.Kudu.Client.Protobuf.KeyRangePB> _repeated_ranges_codec
        = pb::FieldCodec.ForMessage(18, global::Knet.Kudu.Client.Protobuf.KeyRangePB.Parser);
    private readonly pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.KeyRangePB> ranges_ = new pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.KeyRangePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Knet.Kudu.Client.Protobuf.KeyRangePB> Ranges {
      get { return ranges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SplitKeyRangeResponsePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SplitKeyRangeResponsePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!ranges_.Equals(other.ranges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= ranges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
      output.WriteRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      ranges_.WriteTo(ref output, _repeated_ranges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += ranges_.CalculateSize(_repeated_ranges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SplitKeyRangeResponsePB other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
        }
        Error.MergeFrom(other.Error);
      }
      ranges_.Add(other.ranges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
      input.ReadRawMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Knet.Kudu.Client.Protobuf.Tserver.TabletServerErrorPB();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            ranges_.AddEntriesFrom(ref input, _repeated_ranges_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
